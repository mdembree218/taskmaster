{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { getTaskComments, addTaskComment } from '../api';\nimport '../style/Comments.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  taskId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState({\n    content: '',\n    author: ''\n  });\n  const [error, setError] = useState('');\n  const fetchComments = useCallback(async () => {\n    try {\n      const response = await getTaskComments(taskId);\n      setComments(response.data || []);\n    } catch (error) {\n      console.error('There was an error fetching the comments!', error);\n    }\n  }, [taskId]);\n  useEffect(() => {\n    fetchComments();\n  }, [fetchComments]);\n  const handleCreateComment = async () => {\n    if (!newComment.content.trim() || !newComment.author.trim()) {\n      setError('Both content and author are mandatory.');\n      return;\n    }\n    try {\n      const response = await addTaskComment(taskId, newComment);\n      setComments([...comments, response.data]);\n      setNewComment({\n        content: '',\n        author: ''\n      });\n      setError('');\n    } catch (error) {\n      console.error('There was an error creating the comment!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment.author,\n        onChange: e => setNewComment({\n          ...newComment,\n          author: e.target.value\n        }),\n        placeholder: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment.content,\n        onChange: e => setNewComment({\n          ...newComment,\n          content: e.target.value\n        }),\n        placeholder: \"New Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-author\",\n          children: comment.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-content\",\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"kbHw90h5XCJQd2khhZpyzPVFPo8=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","getTaskComments","addTaskComment","jsxDEV","_jsxDEV","Comment","taskId","_s","comments","setComments","newComment","setNewComment","content","author","error","setError","fetchComments","response","data","console","handleCreateComment","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","comment","id","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Comments.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport {\r\n    getTaskComments,\r\n    addTaskComment\r\n} from '../api';\r\nimport '../style/Comments.css'; // Assuming you have a CSS file for styling\r\n\r\nconst Comment = ({ taskId }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState({ content: '', author: '' });\r\n    const [error, setError] = useState('');\r\n\r\n    const fetchComments = useCallback(async () => {\r\n        try {\r\n            const response = await getTaskComments(taskId);\r\n            setComments(response.data || []);\r\n        } catch (error) {\r\n            console.error('There was an error fetching the comments!', error);\r\n        }\r\n    }, [taskId]);\r\n\r\n    useEffect(() => {\r\n        fetchComments();\r\n    }, [fetchComments]);\r\n\r\n    const handleCreateComment = async () => {\r\n        if (!newComment.content.trim() || !newComment.author.trim()) {\r\n            setError('Both content and author are mandatory.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await addTaskComment(taskId, newComment);\r\n            setComments([...comments, response.data]);\r\n            setNewComment({ content: '', author: '' });\r\n            setError('');\r\n        } catch (error) {\r\n            console.error('There was an error creating the comment!', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"comment-container\">\r\n            <h2>Comments</h2>\r\n            <div className=\"new-comment\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newComment.author}\r\n                    onChange={(e) => setNewComment({ ...newComment, author: e.target.value })}\r\n                    placeholder=\"Author\"\r\n                />\r\n                <textarea\r\n                    value={newComment.content}\r\n                    onChange={(e) => setNewComment({ ...newComment, content: e.target.value })}\r\n                    placeholder=\"New Comment\"\r\n                />\r\n                <button onClick={handleCreateComment}>Add Comment</button>\r\n                {error && <p className=\"error\">{error}</p>}\r\n            </div>\r\n            <ul className=\"comments-list\">\r\n                {comments.map(comment => (\r\n                    <li key={comment.id} className=\"comment-item\">\r\n                        <span className=\"comment-author\">{comment.author}</span>\r\n                        <span className=\"comment-content\">{comment.content}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}