{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { getUser, updateUser, deleteUser } from '../api';\nimport { useAuth } from '../context/AuthContext';\nimport '../style/Settings.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const {\n    currentUsername,\n    authToken,\n    logout\n  } = useAuth();\n  const [user, setUser] = useState({\n    username: '',\n    email: '',\n    enableNotifications: false\n  });\n  const [passwords, setPasswords] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const fetchUserSettings = useCallback(async () => {\n    try {\n      if (currentUsername && authToken) {\n        var _response$data$enable;\n        console.log('Fetching user settings for:', currentUsername);\n        const response = await getUser(currentUsername); // Token is automatically added by interceptor\n        console.log('User settings fetched:', response.data);\n        setUser({\n          ...response.data,\n          enableNotifications: (_response$data$enable = response.data.enableNotifications) !== null && _response$data$enable !== void 0 ? _response$data$enable : false // Ensure boolean value\n        });\n      } else {\n        console.log('No currentUsername or authToken');\n      }\n    } catch (error) {\n      console.error('Error fetching user settings', error);\n    }\n  }, [currentUsername, authToken]);\n  useEffect(() => {\n    console.log('useEffect - currentUsername:', currentUsername, 'authToken:', authToken);\n    fetchUserSettings();\n  }, [fetchUserSettings, currentUsername, authToken]);\n  const handleSaveSettings = async () => {\n    try {\n      if (currentUsername && authToken) {\n        console.log('Saving user settings for:', currentUsername);\n        if (passwords.newPassword !== passwords.confirmPassword) {\n          alert('New password and confirm password do not match');\n          return;\n        }\n        await updateUser(currentUsername, {\n          ...user,\n          password: passwords.newPassword\n        }); // Token is automatically added by interceptor\n        alert('Settings saved successfully');\n      } else {\n        console.log('No currentUsername or authToken');\n      }\n    } catch (error) {\n      console.error('Error saving settings', error);\n    }\n  };\n  const handleDeleteAccount = async () => {\n    try {\n      if (currentUsername && authToken) {\n        console.log('Deleting account for:', currentUsername);\n        await deleteUser(currentUsername); // Token is automatically added by interceptor\n        alert('Account deleted successfully');\n        logout(); // Log out the user\n      } else {\n        console.log('No currentUsername or authToken');\n      }\n    } catch (error) {\n      console.error('Error deleting account', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-header\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: user.username,\n          onChange: e => setUser({\n            ...user,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: user.email,\n          onChange: e => setUser({\n            ...user,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: passwords.currentPassword,\n          onChange: e => setPasswords({\n            ...passwords,\n            currentPassword: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: passwords.newPassword,\n          onChange: e => setPasswords({\n            ...passwords,\n            newPassword: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirm New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: passwords.confirmPassword,\n          onChange: e => setPasswords({\n            ...passwords,\n            confirmPassword: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: user.enableNotifications,\n          onChange: () => setUser({\n            ...user,\n            enableNotifications: !user.enableNotifications\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), \"Enable Notifications\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"settings-button\",\n      onClick: handleSaveSettings,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"settings-button\",\n      onClick: handleDeleteAccount,\n      style: {\n        marginLeft: '10px',\n        backgroundColor: 'red'\n      },\n      children: \"Delete Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"IjAiLuoEJSOn+djY2iN6UaWPz04=\", false, function () {\n  return [useAuth];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","getUser","updateUser","deleteUser","useAuth","jsxDEV","_jsxDEV","Settings","_s","currentUsername","authToken","logout","user","setUser","username","email","enableNotifications","passwords","setPasswords","currentPassword","newPassword","confirmPassword","fetchUserSettings","_response$data$enable","console","log","response","data","error","handleSaveSettings","alert","password","handleDeleteAccount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","checked","onClick","style","marginLeft","backgroundColor","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Settings.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { getUser, updateUser, deleteUser } from '../api';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport '../style/Settings.css'; // Assuming you have a CSS file for styling\r\n\r\nconst Settings = () => {\r\n  const { currentUsername, authToken, logout } = useAuth();\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    email: '',\r\n    enableNotifications: false,\r\n  });\r\n  const [passwords, setPasswords] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const fetchUserSettings = useCallback(async () => {\r\n    try {\r\n      if (currentUsername && authToken) {\r\n        console.log('Fetching user settings for:', currentUsername);\r\n        const response = await getUser(currentUsername); // Token is automatically added by interceptor\r\n        console.log('User settings fetched:', response.data);\r\n        setUser({\r\n          ...response.data,\r\n          enableNotifications: response.data.enableNotifications ?? false, // Ensure boolean value\r\n        });\r\n      } else {\r\n        console.log('No currentUsername or authToken');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user settings', error);\r\n    }\r\n  }, [currentUsername, authToken]);\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect - currentUsername:', currentUsername, 'authToken:', authToken);\r\n    fetchUserSettings();\r\n  }, [fetchUserSettings, currentUsername, authToken]);\r\n\r\n  const handleSaveSettings = async () => {\r\n    try {\r\n      if (currentUsername && authToken) {\r\n        console.log('Saving user settings for:', currentUsername);\r\n        if (passwords.newPassword !== passwords.confirmPassword) {\r\n          alert('New password and confirm password do not match');\r\n          return;\r\n        }\r\n        await updateUser(currentUsername, { ...user, password: passwords.newPassword }); // Token is automatically added by interceptor\r\n        alert('Settings saved successfully');\r\n      } else {\r\n        console.log('No currentUsername or authToken');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving settings', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    try {\r\n      if (currentUsername && authToken) {\r\n        console.log('Deleting account for:', currentUsername);\r\n        await deleteUser(currentUsername); // Token is automatically added by interceptor\r\n        alert('Account deleted successfully');\r\n        logout(); // Log out the user\r\n      } else {\r\n        console.log('No currentUsername or authToken');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting account', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-container\">\r\n      <div className=\"settings-header\">Settings</div>\r\n      <div className=\"settings-section\">\r\n        <h2>Account Information</h2>\r\n        <label>\r\n          Username:\r\n          <input\r\n            type=\"text\"\r\n            value={user.username}\r\n            onChange={(e) => setUser({ ...user, username: e.target.value })}\r\n          />\r\n        </label>\r\n        <label>\r\n          Email:\r\n          <input\r\n            type=\"email\"\r\n            value={user.email}\r\n            onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"settings-section\">\r\n        <h2>Password</h2>\r\n        <label>\r\n          Current Password:\r\n          <input\r\n            type=\"password\"\r\n            value={passwords.currentPassword}\r\n            onChange={(e) => setPasswords({ ...passwords, currentPassword: e.target.value })}\r\n          />\r\n        </label>\r\n        <label>\r\n          New Password:\r\n          <input\r\n            type=\"password\"\r\n            value={passwords.newPassword}\r\n            onChange={(e) => setPasswords({ ...passwords, newPassword: e.target.value })}\r\n          />\r\n        </label>\r\n        <label>\r\n          Confirm New Password:\r\n          <input\r\n            type=\"password\"\r\n            value={passwords.confirmPassword}\r\n            onChange={(e) => setPasswords({ ...passwords, confirmPassword: e.target.value })}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"settings-section\">\r\n        <h2>Notifications</h2>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={user.enableNotifications}\r\n            onChange={() => setUser({ ...user, enableNotifications: !user.enableNotifications })}\r\n          />\r\n          Enable Notifications\r\n        </label>\r\n      </div>\r\n      <button className=\"settings-button\" onClick={handleSaveSettings}>Save</button>\r\n      <button className=\"settings-button\" onClick={handleDeleteAccount} style={{ marginLeft: '10px', backgroundColor: 'red' }}>Delete Account</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}