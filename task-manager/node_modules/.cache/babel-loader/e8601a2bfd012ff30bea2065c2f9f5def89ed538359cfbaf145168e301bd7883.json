{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Settings.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getUser, updateUser } from '../api';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [user, setUser] = useState({\n    notificationsEnabled: false\n  });\n  useEffect(() => {\n    fetchUserSettings();\n  }, []);\n  const fetchUserSettings = async () => {\n    _s();\n    try {\n      const {\n        username\n      } = useContext(AuthContext);\n      const response = await getUser(username); // Adjust the endpoint as needed\n      setUser(response.data);\n    } catch (error) {\n      console.error('Error fetching user settings', error);\n    }\n  };\n  _s(fetchUserSettings, \"zxTCwFT6kpWLoExP98e8k3LHMVo=\");\n  const handleToggleNotifications = () => {\n    setUser({\n      ...user,\n      notificationsEnabled: !user.notificationsEnabled\n    });\n  };\n  const handleSaveSettings = async () => {\n    _s2();\n    try {\n      const {\n        username\n      } = useContext(AuthContext);\n      await updateUser(username, user); // Adjust the endpoint as needed\n      alert('Settings saved successfully');\n    } catch (error) {\n      console.error('Error saving settings', error);\n    }\n  };\n  _s2(handleSaveSettings, \"zxTCwFT6kpWLoExP98e8k3LHMVo=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Notifications Enabled:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: user.notificationsEnabled,\n        onChange: handleToggleNotifications\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveSettings,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s3(Settings, \"R7BQaDASUdSrvTNpaFYoBtbT+70=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","getUser","updateUser","AuthContext","jsxDEV","_jsxDEV","Settings","_s3","_s","$RefreshSig$","_s2","user","setUser","notificationsEnabled","fetchUserSettings","username","useContext","response","data","error","console","handleToggleNotifications","handleSaveSettings","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getUser, updateUser } from '../api';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Settings = () => {\r\n  const [user, setUser] = useState({ notificationsEnabled: false });\r\n\r\n  useEffect(() => {\r\n    fetchUserSettings();\r\n  }, []);\r\n\r\n  const fetchUserSettings = async () => {\r\n    try {\r\n      const { username } = useContext(AuthContext);\r\n      const response = await getUser(username); // Adjust the endpoint as needed\r\n      setUser(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user settings', error);\r\n    }\r\n  };\r\n\r\n  const handleToggleNotifications = () => {\r\n    setUser({ ...user, notificationsEnabled: !user.notificationsEnabled });\r\n  };\r\n\r\n  const handleSaveSettings = async () => {\r\n    try {\r\n      const { username } = useContext(AuthContext);\r\n      await updateUser(username, user); // Adjust the endpoint as needed\r\n      alert('Settings saved successfully');\r\n    } catch (error) {\r\n      console.error('Error saving settings', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Settings</h2>\r\n      <label>\r\n        Notifications Enabled:\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={user.notificationsEnabled}\r\n          onChange={handleToggleNotifications}\r\n        />\r\n      </label>\r\n      <button onClick={handleSaveSettings}>Save</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,UAAU,QAAQ,QAAQ;AAC5C,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;IAAAC,GAAA,GAAAD,YAAA;EACrB,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC;IAAEc,oBAAoB,EAAE;EAAM,CAAC,CAAC;EAEjEb,SAAS,CAAC,MAAM;IACdc,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAAAN,EAAA;IACpC,IAAI;MACF,MAAM;QAAEO;MAAS,CAAC,GAAGC,UAAU,CAACb,WAAW,CAAC;MAC5C,MAAMc,QAAQ,GAAG,MAAMhB,OAAO,CAACc,QAAQ,CAAC,CAAC,CAAC;MAC1CH,OAAO,CAACK,QAAQ,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAACX,EAAA,CARIM,iBAAiB;EAUvB,MAAMO,yBAAyB,GAAGA,CAAA,KAAM;IACtCT,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEE,oBAAoB,EAAE,CAACF,IAAI,CAACE;IAAqB,CAAC,CAAC;EACxE,CAAC;EAED,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IAAAZ,GAAA;IACrC,IAAI;MACF,MAAM;QAAEK;MAAS,CAAC,GAAGC,UAAU,CAACb,WAAW,CAAC;MAC5C,MAAMD,UAAU,CAACa,QAAQ,EAAEJ,IAAI,CAAC,CAAC,CAAC;MAClCY,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAACT,GAAA,CARIY,kBAAkB;EAUxB,oBACEjB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBvB,OAAA;MAAAmB,QAAA,GAAO,wBAEL,eAAAnB,OAAA;QACEwB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEnB,IAAI,CAACE,oBAAqB;QACnCkB,QAAQ,EAAEV;MAA0B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRvB,OAAA;MAAQ2B,OAAO,EAAEV,kBAAmB;MAAAE,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACrB,GAAA,CA7CID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}