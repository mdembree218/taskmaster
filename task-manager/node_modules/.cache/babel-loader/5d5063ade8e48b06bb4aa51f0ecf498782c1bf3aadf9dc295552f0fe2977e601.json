{"ast":null,"code":"import axios from 'axios';\nconst authApi = axios.create({\n  baseURL: 'http://localhost:8000/userservice/api/auth'\n});\nconst taskApi = axios.create({\n  baseURL: 'http://localhost:8000/taskservice/api'\n});\nconst notifApi = axios.create({\n  baseURL: 'http://localhost:8000/notificationservice/api'\n});\nexport const login = async user => {\n  const response = await authApi.post('/login', user);\n  localStorage.setItem('token', response.data.jwt);\n  return response;\n};\nexport const logout = async () => {\n  const response = await authApi.post('/logout');\n  return response;\n};\nexport const registerUser = user => authApi.post('/register', user);\nexport const getUser = async username => {\n  const response = await authApi.get(`/${username}`);\n  return response;\n};\nexport const getUsers = async () => {\n  const response = await authApi.get();\n  return response;\n};\nexport const updateUser = (username, user) => authApi.put(`/${username}`, user);\nexport const deleteUser = username => authApi.delete(`/${username}`);\nexport const createCategory = category => taskApi.post('/categories', category);\nexport const getCategory = id => taskApi.get(`/categories/${id}`);\nexport const getCategories = () => taskApi.get('/categories');\nexport const updateCategory = (id, category) => taskApi.put(`/categories/${id}`, category);\nexport const deleteCategory = id => taskApi.delete(`/categories/${id}`);\nexport const getCategoryProgress = id => taskApi.get(`/categories/${id}/progress`);\nexport const getCategoryTasks = id => taskApi.get(`/categories/${id}/tasks`);\nexport const createTask = task => taskApi.post('/tasks', task);\nexport const getTask = taskId => taskApi.get(`/tasks/${taskId}`);\nexport const getTasks = () => taskApi.get('/tasks');\nexport const updateTask = (taskId, task) => taskApi.put(`/tasks/${taskId}`, task);\nexport const deleteTask = taskId => taskApi.delete(`/tasks/${taskId}`);\nexport const setTaskReminder = async (taskId, reminder) => {\n  const response = await taskApi.post(`/tasks/${taskId}/reminders`, reminder);\n  return response;\n};\nexport const getTaskReminders = async taskId => {\n  const response = await taskApi.get(`/tasks/${taskId}/reminders`);\n  return response;\n};\nexport const deleteTaskReminder = (taskId, reminderId) => taskApi.delete(`/tasks/${taskId}/reminders/${reminderId}`);\nexport const shareTask = async shareTaskDTO => {\n  const response = await taskApi.post(`/tasks/share`, shareTaskDTO);\n  return response;\n};\nexport const addTaskComment = async (taskId, comment) => {\n  const response = await taskApi.post(`/tasks/${taskId}/comments`, comment);\n  return response;\n};\nexport const getTaskComments = taskId => taskApi.get(`/tasks/${taskId}/comments`);\nexport const getUserTaskSummary = userId => taskApi.get(`/tasks/${userId}/summary`);","map":{"version":3,"names":["axios","authApi","create","baseURL","taskApi","notifApi","login","user","response","post","localStorage","setItem","data","jwt","logout","registerUser","getUser","username","get","getUsers","updateUser","put","deleteUser","delete","createCategory","category","getCategory","id","getCategories","updateCategory","deleteCategory","getCategoryProgress","getCategoryTasks","createTask","task","getTask","taskId","getTasks","updateTask","deleteTask","setTaskReminder","reminder","getTaskReminders","deleteTaskReminder","reminderId","shareTask","shareTaskDTO","addTaskComment","comment","getTaskComments","getUserTaskSummary","userId"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst authApi = axios.create({\r\n  baseURL: 'http://localhost:8000/userservice/api/auth',\r\n});\r\n\r\nconst taskApi = axios.create({\r\n  baseURL: 'http://localhost:8000/taskservice/api',\r\n});\r\n\r\nconst notifApi = axios.create({\r\n  baseURL: 'http://localhost:8000/notificationservice/api',\r\n});\r\n\r\nexport const login = async (user) => {\r\n  const response = await authApi.post('/login', user);\r\n  localStorage.setItem('token', response.data.jwt);\r\n  return response;\r\n}\r\nexport const logout = async () => {\r\n  const response = await authApi.post('/logout');\r\n  return response;\r\n}\r\nexport const registerUser = (user) => authApi.post('/register', user);\r\nexport const getUser = async (username) => {\r\n  const response = await authApi.get(`/${username}`);\r\n  return response;\r\n}\r\nexport const getUsers = async () => { const response = await authApi.get(); return response; };\r\nexport const updateUser = (username, user) => authApi.put(`/${username}`, user);\r\nexport const deleteUser = (username) => authApi.delete(`/${username}`);\r\n\r\nexport const createCategory = (category) => taskApi.post('/categories', category);\r\nexport const getCategory = (id) => taskApi.get(`/categories/${id}`);\r\nexport const getCategories = () => taskApi.get('/categories');\r\nexport const updateCategory = (id, category) => taskApi.put(`/categories/${id}`, category);\r\nexport const deleteCategory = (id) => taskApi.delete(`/categories/${id}`);\r\nexport const getCategoryProgress = (id) => taskApi.get(`/categories/${id}/progress`);\r\nexport const getCategoryTasks = (id) => taskApi.get(`/categories/${id}/tasks`);\r\n\r\nexport const createTask = (task) => taskApi.post('/tasks', task);\r\nexport const getTask = (taskId) => taskApi.get(`/tasks/${taskId}`);\r\nexport const getTasks = () => taskApi.get('/tasks');\r\nexport const updateTask = (taskId, task) => taskApi.put(`/tasks/${taskId}`, task);\r\nexport const deleteTask = (taskId) => taskApi.delete(`/tasks/${taskId}`);\r\nexport const setTaskReminder = async (taskId, reminder) => {\r\n  const response = await taskApi.post(`/tasks/${taskId}/reminders`, reminder);\r\n  return response;\r\n};\r\nexport const getTaskReminders = async (taskId) => {\r\n  const response = await taskApi.get(`/tasks/${taskId}/reminders`);\r\n  return response;\r\n};\r\nexport const deleteTaskReminder = (taskId, reminderId) => taskApi.delete(`/tasks/${taskId}/reminders/${reminderId}`);\r\nexport const shareTask = async (shareTaskDTO) => {\r\n  const response = await taskApi.post(`/tasks/share`, shareTaskDTO);\r\n  return response;\r\n};\r\nexport const addTaskComment = async (taskId, comment) => {\r\n  const response = await taskApi.post(`/tasks/${taskId}/comments`, comment);\r\n  return response;\r\n};\r\nexport const getTaskComments = (taskId) => taskApi.get(`/tasks/${taskId}/comments`);\r\nexport const getUserTaskSummary = (userId) => taskApi.get(`/tasks/${userId}/summary`);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}