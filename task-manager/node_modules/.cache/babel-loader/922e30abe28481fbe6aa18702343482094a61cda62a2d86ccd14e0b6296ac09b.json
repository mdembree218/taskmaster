{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    categoryId: ''\n  });\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('/api/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks', error);\n    }\n  };\n  const handleCreateTask = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/tasks', newTask);\n      setNewTask({\n        title: '',\n        description: '',\n        categoryId: ''\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error creating task', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await axios.delete(`/api/tasks/${taskId}`);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task', error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      await axios.put(`/api/tasks/${taskId}/complete`);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error completing task', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Category ID\",\n        value: newTask.categoryId,\n        onChange: e => setNewTask({\n          ...newTask,\n          categoryId: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", task.categoryId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCompleteTask(task.id),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"4WO0Jpuc+K8PqFMOUG3WMqsPhnQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","newTask","setNewTask","title","description","categoryId","fetchTasks","response","get","data","error","console","handleCreateTask","e","preventDefault","post","handleDeleteTask","taskId","delete","handleCompleteTask","put","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","task","onClick","id","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState({ title: '', description: '', categoryId: '' });\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await axios.get('/api/tasks');\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateTask = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/tasks', newTask);\r\n      setNewTask({ title: '', description: '', categoryId: '' });\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error creating task', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    try {\r\n      await axios.delete(`/api/tasks/${taskId}`);\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error deleting task', error);\r\n    }\r\n  };\r\n\r\n  const handleCompleteTask = async (taskId) => {\r\n    try {\r\n      await axios.put(`/api/tasks/${taskId}/complete`);\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error completing task', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      <form onSubmit={handleCreateTask}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={newTask.title}\r\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={newTask.description}\r\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Category ID\"\r\n          value={newTask.categoryId}\r\n          onChange={(e) => setNewTask({ ...newTask, categoryId: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Create Task</button>\r\n      </form>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id}>\r\n            <h3>{task.title}</h3>\r\n            <p>{task.description}</p>\r\n            <p>Category: {task.categoryId}</p>\r\n            <button onClick={() => handleCompleteTask(task.id)}>Complete</button>\r\n            <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}