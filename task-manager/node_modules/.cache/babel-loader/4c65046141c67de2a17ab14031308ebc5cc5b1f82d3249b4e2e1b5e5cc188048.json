{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTaskComments, addTaskComment, deleteTaskComment } from '../api';\nimport '../style/Comments.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  taskId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState({\n    content: '',\n    author: ''\n  });\n  useEffect(() => {\n    fetchComments();\n  }, [taskId]);\n  const fetchComments = async () => {\n    try {\n      const response = await getTaskComments(taskId);\n      setComments(response.data || []);\n    } catch (error) {\n      console.error('There was an error fetching the comments!', error);\n    }\n  };\n  const handleCreateComment = async () => {\n    try {\n      const response = await addTaskComment(taskId, newComment);\n      setComments([...comments, response.data]);\n      setNewComment({\n        content: '',\n        author: ''\n      });\n    } catch (error) {\n      console.error('There was an error creating the comment!', error);\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    try {\n      await deleteTaskComment(taskId, commentId);\n      setComments(comments.filter(comment => comment.id !== commentId));\n    } catch (error) {\n      console.error('There was an error deleting the comment!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment.author,\n        onChange: e => setNewComment({\n          ...newComment,\n          author: e.target.value\n        }),\n        placeholder: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment.content,\n        onChange: e => setNewComment({\n          ...newComment,\n          content: e.target.value\n        }),\n        placeholder: \"New Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-author\",\n          children: comment.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-content\",\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"comment-action-button\",\n          onClick: () => handleDeleteComment(comment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"WuKtmUxi5bB5oh3WfAHtdXXS8Vc=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useEffect","useState","getTaskComments","addTaskComment","deleteTaskComment","jsxDEV","_jsxDEV","Comment","taskId","_s","comments","setComments","newComment","setNewComment","content","author","fetchComments","response","data","error","console","handleCreateComment","handleDeleteComment","commentId","filter","comment","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Comments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  getTaskComments,\r\n  addTaskComment,\r\n  deleteTaskComment\r\n} from '../api';\r\nimport '../style/Comments.css'; // Assuming you have a CSS file for styling\r\n\r\nconst Comment = ({ taskId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState({ content: '', author: '' });\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [taskId]);\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const response = await getTaskComments(taskId);\r\n      setComments(response.data || []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the comments!', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateComment = async () => {\r\n    try {\r\n      const response = await addTaskComment(taskId, newComment);\r\n      setComments([...comments, response.data]);\r\n      setNewComment({ content: '', author: '' });\r\n    } catch (error) {\r\n      console.error('There was an error creating the comment!', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = async (commentId) => {\r\n    try {\r\n      await deleteTaskComment(taskId, commentId);\r\n      setComments(comments.filter(comment => comment.id !== commentId));\r\n    } catch (error) {\r\n      console.error('There was an error deleting the comment!', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-container\">\r\n      <h2>Comments</h2>\r\n      <div className=\"new-comment\">\r\n        <input\r\n          type=\"text\"\r\n          value={newComment.author}\r\n          onChange={(e) => setNewComment({ ...newComment, author: e.target.value })}\r\n          placeholder=\"Author\"\r\n        />\r\n        <textarea\r\n          value={newComment.content}\r\n          onChange={(e) => setNewComment({ ...newComment, content: e.target.value })}\r\n          placeholder=\"New Comment\"\r\n        />\r\n        <button onClick={handleCreateComment}>Add Comment</button>\r\n      </div>\r\n      <ul className=\"comments-list\">\r\n        {comments.map(comment => (\r\n          <li key={comment.id} className=\"comment-item\">\r\n            <span className=\"comment-author\">{comment.author}</span>\r\n            <span className=\"comment-content\">{comment.content}</span>\r\n            <button className=\"comment-action-button\" onClick={() => handleDeleteComment(comment.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}