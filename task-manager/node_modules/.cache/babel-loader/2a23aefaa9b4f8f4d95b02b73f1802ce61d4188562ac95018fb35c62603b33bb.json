{"ast":null,"code":"import axios from 'axios';\nconst authApi = axios.create({\n  baseURL: 'http://localhost:8000/api/auth'\n});\nconst taskApi = axios.create({\n  baseURL: 'http://localhost:8000/taskservice/api/tasks'\n});\nexport const login = async user => {\n  const response = await authApi.post('/login', user);\n  return response;\n};\nexport const logout = async () => {\n  const response = await authApi.post('/logout');\n  return response;\n};\nexport const createCategory = category => taskApi.post('/categories', category);\nexport const getCategory = id => taskApi.get(`/categories/${id}`);\nexport const getCategories = () => taskApi.get('/categories');\nexport const updateCategory = (id, category) => taskApi.put(`/categories/${id}`, category);\nexport const deleteCategory = id => taskApi.delete(`/categories/${id}`);\nexport const getCategoryProgress = id => taskApi.get(`/categories/${id}/progress`);\nexport const getCategoryTasks = id => taskApi.get(`/categories/${id}/tasks`);\nexport const createTask = task => taskApi.post('/tasks', task);\nexport const getTask = taskId => taskApi.get(`/tasks/${taskId}`);\nexport const getTasks = () => taskApi.get('/tasks');\nexport const updateTask = (taskId, task) => taskApi.put(`/tasks/${taskId}`, task);\nexport const deleteTask = taskId => taskApi.delete(`/tasks/${taskId}`);\nexport const setTaskReminder = async (taskId, reminder) => {\n  const response = await taskApi.post(`/tasks/${taskId}/reminders`, reminder);\n  return response;\n};\nexport const getTaskReminders = async taskId => {\n  const response = await taskApi.get(`/tasks/${taskId}/reminders`);\n  return response;\n};\nexport const deleteTaskReminder = (taskId, reminderId) => taskApi.delete(`/tasks/${taskId}/reminders/${reminderId}`);\n// export const shareTask = (shareTaskDTO) => taskApi.post(`/tasks/share`, shareTaskDTO);\n// api.js\nexport const shareTask = async shareTaskDTO => {\n  const response = await taskApi.post(`/tasks/share`, shareTaskDTO);\n  return response;\n};\nexport const addTaskComment = async (taskId, comment) => {\n  const response = await taskApi.post(`/tasks/${taskId}/comments`, comment);\n  return response;\n};\nexport const getTaskComments = taskId => taskApi.get(`/tasks/${taskId}/comments`);\n// export const searchTasks = (params) => taskApi.get('/tasks/search', { params }); // TODO use this\n// export const filterTasks = (params) => taskApi.get('/tasks/filter', { params }); // TODO use this\nexport const getUserTaskSummary = userId => taskApi.get(`/tasks/${userId}/summary`);\nexport const registerUser = user => authApi.post('/users/register', user);\nexport const loginUser = loginRequest => authApi.post('/users/login', loginRequest);\nexport const getUser = async username => {\n  const response = await authApi.get(`/users/${username}`);\n  return response;\n};\nexport const getUsers = async () => {\n  const response = await authApi.get('/users');\n  return response;\n};\nexport const updateUser = (username, user) => authApi.put(`/users/${username}`, user);\nexport const deleteUser = username => authApi.delete(`/users/${username}`);","map":{"version":3,"names":["axios","authApi","create","baseURL","taskApi","login","user","response","post","logout","createCategory","category","getCategory","id","get","getCategories","updateCategory","put","deleteCategory","delete","getCategoryProgress","getCategoryTasks","createTask","task","getTask","taskId","getTasks","updateTask","deleteTask","setTaskReminder","reminder","getTaskReminders","deleteTaskReminder","reminderId","shareTask","shareTaskDTO","addTaskComment","comment","getTaskComments","getUserTaskSummary","userId","registerUser","loginUser","loginRequest","getUser","username","getUsers","updateUser","deleteUser"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst authApi = axios.create({\r\n  baseURL: 'http://localhost:8000/api/auth',\r\n});\r\n\r\nconst taskApi = axios.create({\r\n  baseURL: 'http://localhost:8000/taskservice/api/tasks',\r\n});\r\n\r\nexport const login = async (user) => {\r\n  const response = await authApi.post('/login', user);\r\n  return response;\r\n}\r\nexport const logout = async () => {\r\n  const response = await authApi.post('/logout');\r\n  return response;\r\n}\r\n\r\nexport const createCategory = (category) => taskApi.post('/categories', category);\r\nexport const getCategory = (id) => taskApi.get(`/categories/${id}`);\r\nexport const getCategories = () => taskApi.get('/categories');\r\nexport const updateCategory = (id, category) => taskApi.put(`/categories/${id}`, category);\r\nexport const deleteCategory = (id) => taskApi.delete(`/categories/${id}`);\r\nexport const getCategoryProgress = (id) => taskApi.get(`/categories/${id}/progress`);\r\nexport const getCategoryTasks = (id) => taskApi.get(`/categories/${id}/tasks`);\r\n\r\nexport const createTask = (task) => taskApi.post('/tasks', task);\r\nexport const getTask = (taskId) => taskApi.get(`/tasks/${taskId}`);\r\nexport const getTasks = () => taskApi.get('/tasks');\r\nexport const updateTask = (taskId, task) => taskApi.put(`/tasks/${taskId}`, task);\r\nexport const deleteTask = (taskId) => taskApi.delete(`/tasks/${taskId}`);\r\nexport const setTaskReminder = async (taskId, reminder) => {\r\n  const response = await taskApi.post(`/tasks/${taskId}/reminders`, reminder);\r\n  return response;\r\n};\r\nexport const getTaskReminders = async (taskId) => {\r\n  const response = await taskApi.get(`/tasks/${taskId}/reminders`);\r\n  return response;\r\n};\r\nexport const deleteTaskReminder = (taskId, reminderId) => taskApi.delete(`/tasks/${taskId}/reminders/${reminderId}`);\r\n// export const shareTask = (shareTaskDTO) => taskApi.post(`/tasks/share`, shareTaskDTO);\r\n// api.js\r\nexport const shareTask = async (shareTaskDTO) => {\r\n  const response = await taskApi.post(`/tasks/share`, shareTaskDTO);\r\n  return response;\r\n};\r\nexport const addTaskComment = async (taskId, comment) => {\r\n  const response = await taskApi.post(`/tasks/${taskId}/comments`, comment);\r\n  return response;\r\n};\r\nexport const getTaskComments = (taskId) => taskApi.get(`/tasks/${taskId}/comments`);\r\n// export const searchTasks = (params) => taskApi.get('/tasks/search', { params }); // TODO use this\r\n// export const filterTasks = (params) => taskApi.get('/tasks/filter', { params }); // TODO use this\r\nexport const getUserTaskSummary = (userId) => taskApi.get(`/tasks/${userId}/summary`);\r\n\r\nexport const registerUser = (user) => authApi.post('/users/register', user);\r\nexport const loginUser = (loginRequest) => authApi.post('/users/login', loginRequest);\r\nexport const getUser = async (username) => {\r\n  const response = await authApi.get(`/users/${username}`);\r\n  return response;\r\n}\r\nexport const getUsers = async () => { const response = await authApi.get('/users'); return response; };\r\nexport const updateUser = (username, user) => authApi.put(`/users/${username}`, user);\r\nexport const deleteUser = (username) => authApi.delete(`/users/${username}`);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}