{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTasks, getCategories, getUsers, createTask, updateTask, deleteTask, shareTask, getUserTaskSummary, getUser, updateCategory, getTask } from '../api';\nimport AsyncSelect from 'react-select/async';\nimport '../style/Tasks.css'; // Assuming you have a CSS file for styling\nimport Comment from './Comments';\nimport Reminder from './Reminders';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getUsernameFromToken = token => {\n  try {\n    const decoded = jwtDecode(token);\n    console.log(\"Decoded Token\", decoded);\n    return decoded.sub; // assuming \"sub\" holds the username\n  } catch (error) {\n    console.error(\"Invalid token\", error);\n    return null;\n  }\n};\nconst Tasks = () => {\n  _s();\n  var _userTaskSummary$tota, _userTaskSummary$pend, _userTaskSummary$curr, _userTaskSummary$comp;\n  const currentUsername = getUsernameFromToken(localStorage.getItem('token'));\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    priority: 'LOW',\n    owner: '',\n    assignees: [],\n    status: 'PENDING'\n  });\n  const [editingTask, setEditingTask] = useState(null);\n  const [selectedTaskForComments, setSelectedTaskForComments] = useState(null);\n  const [selectedTaskForReminders, setSelectedTaskForReminders] = useState(null);\n  const [userTaskSummary, setUserTaskSummary] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await getUser(currentUsername);\n        setUser(response.data);\n      } catch (error) {\n        console.error('There was an error fetching the user!', error);\n      }\n    };\n    if (currentUsername) {\n      fetchUser();\n    }\n  }, [currentUsername]);\n  useEffect(() => {\n    fetchTasks();\n    fetchCategories();\n    fetchUsers();\n    if (user) {\n      setNewTask(prevTask => ({\n        ...prevTask,\n        owner: user.userId\n      }));\n    }\n  }, [user]);\n  const fetchTasks = async () => {\n    try {\n      const response = await getTasks();\n      setTasks(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the tasks!', error);\n      setTasks([]);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await getCategories();\n      setCategories(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the categories!', error);\n      setCategories([]);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await getUsers();\n      setUsers(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the users!', error);\n      setUsers([]);\n    }\n  };\n  const loadOptions = async inputValue => {\n    try {\n      const response = await getUsers();\n      const filteredUsers = response.data.filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase())).map(user => ({\n        value: user.userId,\n        label: user.username\n      }));\n      return filteredUsers;\n    } catch (error) {\n      console.error('There was an error loading the options!', error);\n      return [];\n    }\n  };\n  const isValidDate = dateString => {\n    const date = new Date(dateString);\n    return !isNaN(date.getTime());\n  };\n  const handleCreateTask = async () => {\n    try {\n      const taskData = {\n        title: newTask.title,\n        description: newTask.description,\n        dueDate: isValidDate(newTask.dueDate) ? new Date(newTask.dueDate).toISOString() : null,\n        priority: newTask.priority,\n        owner: newTask.owner,\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)),\n        status: newTask.status\n      };\n      const response = await createTask(taskData);\n      setTasks([...tasks, response.data]);\n      if (selectedCategory) {\n        console.log(\"Category Selected\", selectedCategory);\n        await updateCategory(selectedCategory.id, {\n          ...selectedCategory,\n          tasks: [...selectedCategory.tasks, taskData]\n        });\n        console.log(\"Category Updated\", selectedCategory);\n      }\n\n      // Share the task with all assignees\n      for (const assignee of newTask.assignees) {\n        const users = (await getUsers()).data;\n        console.log('Users:', users);\n        const recipient = users.find(user => user.userId === assignee);\n        const taskInfo = (await getTask(response.data.id)).data.taskId;\n        if (recipient.enableNotifications) {\n          var _users$find;\n          await shareTask({\n            taskId: response.data.id,\n            recipientId: assignee,\n            recipientEmail: (_users$find = users.find(user => user.userId === assignee)) === null || _users$find === void 0 ? void 0 : _users$find.email,\n            taskInfo\n          });\n        }\n      }\n      setNewTask({\n        title: '',\n        description: '',\n        dueDate: '',\n        priority: 'LOW',\n        owner: '',\n        assignees: [],\n        status: 'PENDING'\n      });\n    } catch (error) {\n      console.error('There was an error creating the task!', error);\n    }\n  };\n  const handleUpdateTask = async () => {\n    try {\n      const taskData = {\n        ...editingTask,\n        dueDate: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString() : null,\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\n      };\n      const response = await updateTask(editingTask.id, taskData);\n      setTasks(tasks.map(task => task.id === editingTask.id ? response.data : task));\n\n      // Update the selected category with the edited task\n      if (selectedCategory) {\n        console.log(\"Category Selected\", selectedCategory);\n        await updateCategory(selectedCategory.id, {\n          ...selectedCategory,\n          tasks: [...selectedCategory.tasks, taskData]\n        });\n        console.log(\"Category Updated\", selectedCategory);\n      }\n\n      // Share the task with all assignees\n      for (const assignee of editingTask.assignees) {\n        const users = (await getUsers()).data;\n        console.log('Users:', users);\n        const recipient = users.find(user => user.userId === assignee);\n        const taskInfo = (await getTask(editingTask.id)).data;\n        if (recipient.enableNotifications) {\n          var _users$find2;\n          await shareTask({\n            taskId: editingTask.id,\n            recipientId: assignee,\n            recipientEmail: (_users$find2 = users.find(user => user.userId === assignee)) === null || _users$find2 === void 0 ? void 0 : _users$find2.email,\n            taskInfo\n          });\n        }\n      }\n      setEditingTask(null);\n    } catch (error) {\n      console.error('There was an error updating the task!', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId);\n      setTasks(tasks.filter(task => task.id !== taskId));\n\n      // Remove the task from the selected category\n      if (selectedCategory) {\n        // Remove task from category logic here\n      }\n    } catch (error) {\n      console.error('There was an error deleting the task!', error);\n    }\n  };\n  const handleViewUserTaskSummary = async userId => {\n    try {\n      const response = await getUserTaskSummary(userId);\n      console.log('User Task Summary:', response.data);\n      setUserTaskSummary(response.data);\n    } catch (error) {\n      console.error('There was an error fetching the user task summary!', error);\n    }\n  };\n\n  // Add this useEffect to log the updated userTaskSummary\n  useEffect(() => {\n    if (userTaskSummary) {\n      console.log('Updated User Task Summary:', userTaskSummary);\n    }\n  }, [userTaskSummary]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        }),\n        placeholder: \"New Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        }),\n        placeholder: \"New Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: newTask.dueDate,\n        onChange: e => setNewTask({\n          ...newTask,\n          dueDate: e.target.value\n        }),\n        placeholder: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newTask.priority,\n        onChange: e => setNewTask({\n          ...newTask,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOW\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEDIUM\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HIGH\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newTask.status,\n        onChange: e => setNewTask({\n          ...newTask,\n          status: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PENDING\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IN_PROGRESS\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COMPLETED\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        onChange: selectedOptions => console.log(selectedOptions),\n        placeholder: \"Select Assignees\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory ? selectedCategory.id : '',\n        onChange: e => {\n          const selectedCat = categories.find(category => category.id === parseInt(e.target.value, 10));\n          setSelectedCategory(selectedCat);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateTask,\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"View User Task Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        onChange: selectedOption => {\n          setSelectedUser(selectedOption);\n          handleViewUserTaskSummary(selectedOption.value);\n        },\n        placeholder: \"Select User\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Task Summary for \", selectedUser.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Tasks: \", (_userTaskSummary$tota = userTaskSummary === null || userTaskSummary === void 0 ? void 0 : userTaskSummary.totalTasks) !== null && _userTaskSummary$tota !== void 0 ? _userTaskSummary$tota : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pending Tasks: \", (_userTaskSummary$pend = userTaskSummary === null || userTaskSummary === void 0 ? void 0 : userTaskSummary.pendingTasks) !== null && _userTaskSummary$pend !== void 0 ? _userTaskSummary$pend : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Tasks: \", (_userTaskSummary$curr = userTaskSummary === null || userTaskSummary === void 0 ? void 0 : userTaskSummary.currentTasks) !== null && _userTaskSummary$curr !== void 0 ? _userTaskSummary$curr : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Completed Tasks: \", (_userTaskSummary$comp = userTaskSummary === null || userTaskSummary === void 0 ? void 0 : userTaskSummary.completedTasks) !== null && _userTaskSummary$comp !== void 0 ? _userTaskSummary$comp : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tasks-list\",\n      children: Array.isArray(tasks) && tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" - \", task.description, \" - \", task.status, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => setEditingTask((editingTask === null || editingTask === void 0 ? void 0 : editingTask.id) === task.id ? null : task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => handleDeleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comments\",\n            onClick: () => {\n              if (selectedTaskForComments === task.id) {\n                setSelectedTaskForComments(null);\n              } else {\n                setSelectedTaskForComments(task.id);\n                setSelectedTaskForReminders(null);\n              }\n            },\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reminders\",\n            onClick: () => {\n              if (selectedTaskForReminders === task.id) {\n                setSelectedTaskForReminders(null);\n              } else {\n                setSelectedTaskForReminders(task.id);\n                setSelectedTaskForComments(null);\n              }\n            },\n            children: \"Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), selectedTaskForComments && /*#__PURE__*/_jsxDEV(Comment, {\n          taskId: selectedTaskForComments,\n          username: currentUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this), selectedTaskForReminders && /*#__PURE__*/_jsxDEV(Reminder, {\n          taskId: selectedTaskForReminders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.title,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          title: e.target.value\n        }),\n        placeholder: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.description,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          description: e.target.value\n        }),\n        placeholder: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString().slice(0, 16) : '',\n        onChange: e => setEditingTask({\n          ...editingTask,\n          dueDate: e.target.value\n        }),\n        placeholder: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory ? selectedCategory.id : '',\n        onChange: e => {\n          const selectedCat = categories.find(category => category.id === parseInt(e.target.value, 10));\n          setSelectedCategory(selectedCat);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.priority,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOW\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEDIUM\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HIGH\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.status,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          status: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PENDING\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IN_PROGRESS\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COMPLETED\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        onChange: selectedOptions => setEditingTask({\n          ...editingTask,\n          assignees: selectedOptions.map(option => option.value)\n        }),\n        value: editingTask.assignees.map(assignee => {\n          var _users$find3;\n          return {\n            value: assignee,\n            label: (_users$find3 = users.find(user => user.userId === assignee)) === null || _users$find3 === void 0 ? void 0 : _users$find3.username\n          };\n        }),\n        placeholder: \"Select Assignees\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateTask,\n        children: \"Update Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"0eIg4raRs9lMhfHYGruKd4ORKQw=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","getCategories","getUsers","createTask","updateTask","deleteTask","shareTask","getUserTaskSummary","getUser","updateCategory","getTask","AsyncSelect","Comment","Reminder","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","getUsernameFromToken","token","decoded","console","log","sub","error","Tasks","_s","_userTaskSummary$tota","_userTaskSummary$pend","_userTaskSummary$curr","_userTaskSummary$comp","currentUsername","localStorage","getItem","user","setUser","tasks","setTasks","categories","setCategories","users","setUsers","newTask","setNewTask","title","description","dueDate","priority","owner","assignees","status","editingTask","setEditingTask","selectedTaskForComments","setSelectedTaskForComments","selectedTaskForReminders","setSelectedTaskForReminders","userTaskSummary","setUserTaskSummary","selectedUser","setSelectedUser","selectedCategory","setSelectedCategory","fetchUser","response","data","fetchTasks","fetchCategories","fetchUsers","prevTask","userId","Array","isArray","loadOptions","inputValue","filteredUsers","filter","username","toLowerCase","includes","map","value","label","isValidDate","dateString","date","Date","isNaN","getTime","handleCreateTask","taskData","toISOString","assignee","parseInt","id","recipient","find","taskInfo","taskId","enableNotifications","_users$find","recipientId","recipientEmail","email","handleUpdateTask","task","_users$find2","handleDeleteTask","handleViewUserTaskSummary","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","isMulti","cacheOptions","selectedOptions","selectedCat","category","name","onClick","selectedOption","totalTasks","pendingTasks","currentTasks","completedTasks","slice","option","_users$find3","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Tasks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  getTasks,\r\n  getCategories,\r\n  getUsers,\r\n  createTask,\r\n  updateTask,\r\n  deleteTask,\r\n  shareTask,\r\n  getUserTaskSummary,\r\n  getUser,\r\n  updateCategory,\r\n  getTask\r\n} from '../api';\r\nimport AsyncSelect from 'react-select/async';\r\nimport '../style/Tasks.css'; // Assuming you have a CSS file for styling\r\nimport Comment from './Comments';\r\nimport Reminder from './Reminders';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst getUsernameFromToken = (token) => {\r\n  try {\r\n    const decoded = jwtDecode(token);\r\n    console.log(\"Decoded Token\", decoded);\r\n    return decoded.sub; // assuming \"sub\" holds the username\r\n  } catch (error) {\r\n    console.error(\"Invalid token\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\nconst Tasks = () => {\r\n  const currentUsername = getUsernameFromToken(localStorage.getItem('token'));\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [newTask, setNewTask] = useState({ title: '', description: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [selectedTaskForComments, setSelectedTaskForComments] = useState(null);\r\n  const [selectedTaskForReminders, setSelectedTaskForReminders] = useState(null);\r\n  const [userTaskSummary, setUserTaskSummary] = useState(null);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await getUser(currentUsername);\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        console.error('There was an error fetching the user!', error);\r\n      }\r\n    };\r\n\r\n    if (currentUsername) {\r\n      fetchUser();\r\n    }\r\n  }, [currentUsername]);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchCategories();\r\n    fetchUsers();\r\n    if (user) {\r\n      setNewTask(prevTask => ({ ...prevTask, owner: user.userId }));\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await getTasks();\r\n      setTasks(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the tasks!', error);\r\n      setTasks([]);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await getCategories();\r\n      setCategories(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the categories!', error);\r\n      setCategories([]);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await getUsers();\r\n      setUsers(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the users!', error);\r\n      setUsers([]);\r\n    }\r\n  };\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    try {\r\n      const response = await getUsers();\r\n      const filteredUsers = response.data\r\n        .filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase()))\r\n        .map(user => ({ value: user.userId, label: user.username }));\r\n      return filteredUsers;\r\n    } catch (error) {\r\n      console.error('There was an error loading the options!', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const isValidDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return !isNaN(date.getTime());\r\n  };\r\n\r\n  const handleCreateTask = async () => {\r\n    try {\r\n      const taskData = {\r\n        title: newTask.title,\r\n        description: newTask.description,\r\n        dueDate: isValidDate(newTask.dueDate) ? new Date(newTask.dueDate).toISOString() : null,\r\n        priority: newTask.priority,\r\n        owner: newTask.owner,\r\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)),\r\n        status: newTask.status\r\n      };\r\n\r\n      const response = await createTask(taskData);\r\n      setTasks([...tasks, response.data]);\r\n\r\n      if (selectedCategory) {\r\n        console.log(\"Category Selected\", selectedCategory);\r\n        await updateCategory(selectedCategory.id, { ...selectedCategory, tasks: [...selectedCategory.tasks, taskData] });\r\n        console.log(\"Category Updated\", selectedCategory);\r\n      }\r\n\r\n      // Share the task with all assignees\r\n      for (const assignee of newTask.assignees) {\r\n        const users = (await getUsers()).data;\r\n        console.log('Users:', users);\r\n        const recipient = users.find(user => user.userId === assignee);\r\n        const taskInfo = (await getTask(response.data.id)).data.taskId;\r\n        if (recipient.enableNotifications) {\r\n          await shareTask({ taskId: response.data.id, recipientId: assignee, recipientEmail: users.find(user => user.userId === assignee)?.email, taskInfo });\r\n        }\r\n      }\r\n\r\n      setNewTask({ title: '', description: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n    } catch (error) {\r\n      console.error('There was an error creating the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateTask = async () => {\r\n    try {\r\n      const taskData = {\r\n        ...editingTask,\r\n        dueDate: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString() : null,\r\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\r\n      };\r\n\r\n      const response = await updateTask(editingTask.id, taskData);\r\n      setTasks(tasks.map(task => (task.id === editingTask.id ? response.data : task)));\r\n\r\n      // Update the selected category with the edited task\r\n      if (selectedCategory) {\r\n        console.log(\"Category Selected\", selectedCategory);\r\n        await updateCategory(selectedCategory.id, { ...selectedCategory, tasks: [...selectedCategory.tasks, taskData] });\r\n        console.log(\"Category Updated\", selectedCategory);\r\n      }\r\n\r\n      // Share the task with all assignees\r\n      for (const assignee of editingTask.assignees) {\r\n        const users = (await getUsers()).data;\r\n        console.log('Users:', users);\r\n        const recipient = users.find(user => user.userId === assignee);\r\n        const taskInfo = (await getTask(editingTask.id)).data;\r\n        if (recipient.enableNotifications) {\r\n          await shareTask({ taskId: editingTask.id, recipientId: assignee, recipientEmail: users.find(user => user.userId === assignee)?.email, taskInfo });\r\n        }\r\n      }\r\n\r\n      setEditingTask(null);\r\n    } catch (error) {\r\n      console.error('There was an error updating the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    try {\r\n      await deleteTask(taskId);\r\n      setTasks(tasks.filter(task => task.id !== taskId));\r\n\r\n      // Remove the task from the selected category\r\n      if (selectedCategory) {\r\n        // Remove task from category logic here\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error deleting the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleViewUserTaskSummary = async (userId) => {\r\n    try {\r\n      const response = await getUserTaskSummary(userId);\r\n      console.log('User Task Summary:', response.data);\r\n      setUserTaskSummary(response.data);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the user task summary!', error);\r\n    }\r\n  };\r\n\r\n  // Add this useEffect to log the updated userTaskSummary\r\n  useEffect(() => {\r\n    if (userTaskSummary) {\r\n      console.log('Updated User Task Summary:', userTaskSummary);\r\n    }\r\n  }, [userTaskSummary]);\r\n\r\n  return (\r\n    <div className=\"tasks-container\">\r\n      <h2>Tasks</h2>\r\n      <div className=\"task-inputs\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.title}\r\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n          placeholder=\"New Task Title\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.description}\r\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n          placeholder=\"New Task Description\"\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={newTask.dueDate}\r\n          onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })}\r\n          placeholder=\"Due Date\"\r\n        />\r\n        <select\r\n          value={newTask.priority}\r\n          onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}\r\n        >\r\n          <option value=\"LOW\">Low</option>\r\n          <option value=\"MEDIUM\">Medium</option>\r\n          <option value=\"HIGH\">High</option>\r\n        </select>\r\n        <select\r\n          value={newTask.status}\r\n          onChange={(e) => setNewTask({ ...newTask, status: e.target.value })}\r\n        >\r\n          <option value=\"PENDING\">Pending</option>\r\n          <option value=\"IN_PROGRESS\">In Progress</option>\r\n          <option value=\"COMPLETED\">Completed</option>\r\n        </select>\r\n        <AsyncSelect\r\n          isMulti\r\n          cacheOptions\r\n          loadOptions={loadOptions}\r\n          onChange={(selectedOptions) => console.log(selectedOptions)}\r\n          placeholder=\"Select Assignees\"\r\n          className=\"async-select\"\r\n        />\r\n        <select\r\n          value={selectedCategory ? selectedCategory.id : ''}\r\n          onChange={(e) => {\r\n            const selectedCat = categories.find(category => category.id === parseInt(e.target.value, 10));\r\n            setSelectedCategory(selectedCat);\r\n          }}\r\n        >\r\n          <option value=\"\">Select Category</option>\r\n          {Array.isArray(categories) && categories.map(category => (\r\n            <option key={category.id} value={category.id}>\r\n              {category.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <button onClick={handleCreateTask}>Create Task</button>\r\n      </div>\r\n      <div className=\"user-summary\">\r\n        <h3>View User Task Summary</h3>\r\n        <AsyncSelect\r\n          cacheOptions\r\n          loadOptions={loadOptions}\r\n          onChange={(selectedOption) => {\r\n            setSelectedUser(selectedOption);\r\n            handleViewUserTaskSummary(selectedOption.value);\r\n          }}\r\n          placeholder=\"Select User\"\r\n          className=\"async-select\"\r\n        />\r\n        {selectedUser && (\r\n          <>\r\n            <h4>Task Summary for {selectedUser.label}</h4>\r\n            <div className=\"task-summary\">\r\n              <p>Total Tasks: {userTaskSummary?.totalTasks ?? 0}</p>\r\n              <p>Pending Tasks: {userTaskSummary?.pendingTasks ?? 0}</p>\r\n              <p>Current Tasks: {userTaskSummary?.currentTasks ?? 0}</p>\r\n              <p>Completed Tasks: {userTaskSummary?.completedTasks ?? 0}</p>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <ul className=\"tasks-list\">\r\n        {Array.isArray(tasks) && tasks.map(task => (\r\n          <li key={task.id}>\r\n            {task.title} - {task.description} - {task.status}\r\n            <div>\r\n              <button className=\"edit\" onClick={() => setEditingTask(editingTask?.id === task.id ? null : task)}>Edit</button>\r\n              <button className=\"delete\" onClick={() => handleDeleteTask(task.id)}>Delete</button>\r\n              <button className=\"comments\" onClick={() => {\r\n                if (selectedTaskForComments === task.id) {\r\n                  setSelectedTaskForComments(null);\r\n                } else {\r\n                  setSelectedTaskForComments(task.id);\r\n                  setSelectedTaskForReminders(null);\r\n                }\r\n              }}>Comments</button>\r\n              <button className=\"reminders\" onClick={() => {\r\n                if (selectedTaskForReminders === task.id) {\r\n                  setSelectedTaskForReminders(null);\r\n                } else {\r\n                  setSelectedTaskForReminders(task.id);\r\n                  setSelectedTaskForComments(null);\r\n                }\r\n              }}>Reminders</button>\r\n            </div>\r\n            {selectedTaskForComments && (\r\n              <Comment taskId={selectedTaskForComments} username={currentUsername} />\r\n            )}\r\n            {selectedTaskForReminders && (\r\n              <Reminder taskId={selectedTaskForReminders} />\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {editingTask && (\r\n        <div className=\"edit-task-container\">\r\n          <h3>Edit Task</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.title}\r\n            onChange={(e) => setEditingTask({ ...editingTask, title: e.target.value })}\r\n            placeholder=\"Task Title\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.description}\r\n            onChange={(e) => setEditingTask({ ...editingTask, description: e.target.value })}\r\n            placeholder=\"Task Description\"\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setEditingTask({ ...editingTask, dueDate: e.target.value })}\r\n            placeholder=\"Due Date\"\r\n          />\r\n          <select\r\n            value={selectedCategory ? selectedCategory.id : ''}\r\n            onChange={(e) => {\r\n              const selectedCat = categories.find(category => category.id === parseInt(e.target.value, 10));\r\n              setSelectedCategory(selectedCat);\r\n            }}\r\n          >\r\n            <option value=\"\">Select Category</option>\r\n            {Array.isArray(categories) && categories.map(category => (\r\n              <option key={category.id} value={category.id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            value={editingTask.priority}\r\n            onChange={(e) => setEditingTask({ ...editingTask, priority: e.target.value })}\r\n          >\r\n            <option value=\"LOW\">Low</option>\r\n            <option value=\"MEDIUM\">Medium</option>\r\n            <option value=\"HIGH\">High</option>\r\n          </select>\r\n          <select\r\n            value={editingTask.status}\r\n            onChange={(e) => setEditingTask({ ...editingTask, status: e.target.value })}\r\n          >\r\n            <option value=\"PENDING\">Pending</option>\r\n            <option value=\"IN_PROGRESS\">In Progress</option>\r\n            <option value=\"COMPLETED\">Completed</option>\r\n          </select>\r\n          <AsyncSelect\r\n            isMulti\r\n            cacheOptions\r\n            loadOptions={loadOptions}\r\n            onChange={(selectedOptions) => setEditingTask({ ...editingTask, assignees: selectedOptions.map(option => option.value) })}\r\n            value={editingTask.assignees.map(assignee => ({ value: assignee, label: users.find(user => user.userId === assignee)?.username }))}\r\n            placeholder=\"Select Assignees\"\r\n            className=\"async-select\"\r\n          />\r\n          <button onClick={handleUpdateTask}>Update Task</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}