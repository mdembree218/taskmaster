{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport { getCategory, createTask, getTasks, updateTask, deleteTask, completeTask, getCategories, getUsers, getUser // Assuming you have an API function to get users\n} from '../api';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const {\n    currentUsername\n  } = useAuth();\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]); // Initialize as an empty array\n  const [categories, setCategories] = useState([]); // Initialize as an empty array\n  const [users, setUsers] = useState([]); // State to store all users\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    categoryId: '',\n    dueDate: '',\n    priority: 'LOW',\n    owner: '',\n    assignees: [],\n    status: 'PENDING'\n  });\n  const [editingTask, setEditingTask] = useState(null); // State to manage the task being edited\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await getUser(currentUsername);\n        setUser(response.data);\n      } catch (error) {\n        console.error('There was an error fetching the user!', error);\n      }\n    };\n    if (currentUsername) {\n      fetchUser();\n    }\n  }, [currentUsername]);\n  useEffect(() => {\n    fetchTasks();\n    fetchCategories();\n    fetchUsers(); // Fetch all users\n    if (user) {\n      setNewTask(prevTask => ({\n        ...prevTask,\n        owner: user.id\n      })); // Set the owner ID to the logged-in user's ID\n    }\n  }, [user]);\n  const fetchTasks = async () => {\n    try {\n      const response = await getTasks();\n      setTasks(Array.isArray(response.data) ? response.data : []); // Ensure tasks is an array\n    } catch (error) {\n      console.error('There was an error fetching the tasks!', error);\n      setTasks([]); // Ensure tasks is an array even if the fetch fails\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await getCategories();\n      setCategories(Array.isArray(response.data) ? response.data : []); // Ensure categories is an array\n    } catch (error) {\n      console.error('There was an error fetching the categories!', error);\n      setCategories([]); // Ensure categories is an array even if the fetch fails\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await getUsers();\n      setUsers(Array.isArray(response.data) ? response.data : []); // Ensure users is an array\n    } catch (error) {\n      console.error('There was an error fetching the users!', error);\n      setUsers([]); // Ensure users is an array even if the fetch fails\n    }\n  };\n  const loadOptions = async inputValue => {\n    try {\n      const response = await getUsers(); // Fetch users from the API\n      const filteredUsers = response.data.filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase())).map(user => ({\n        value: user.id,\n        label: user.username\n      }));\n      return filteredUsers;\n    } catch (error) {\n      console.error('There was an error loading the options!', error);\n      return [];\n    }\n  };\n  const handleCreateTask = async () => {\n    try {\n      // Fetch the category by its ID\n      const categoryResponse = await getCategory(newTask.categoryId);\n      const category = categoryResponse.data;\n      const taskData = {\n        title: newTask.title,\n        description: newTask.description,\n        category: {\n          id: category.id,\n          name: category.name\n        },\n        // Associate the fetched category\n        dueDate: new Date(newTask.dueDate).toISOString(),\n        // Ensure dueDate is in ISO format\n        priority: newTask.priority,\n        owner: newTask.owner,\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)),\n        // Ensure assignees are numbers\n        status: newTask.status // Set status to PENDING by default\n      };\n      const response = await createTask(taskData);\n      setTasks([...tasks, response.data]);\n      setNewTask({\n        title: '',\n        description: '',\n        categoryId: '',\n        dueDate: '',\n        priority: 'LOW',\n        owner: '',\n        assignees: [],\n        status: 'PENDING'\n      });\n    } catch (error) {\n      console.error('There was an error creating the task!', error);\n    }\n  };\n  const handleUpdateTask = async () => {\n    try {\n      const categoryResponse = await getCategory(editingTask.categoryId);\n      const category = categoryResponse.data;\n      const updatedTask = {\n        ...editingTask,\n        category: {\n          id: category.id,\n          name: category.name\n        },\n        dueDate: new Date(editingTask.dueDate).toISOString(),\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\n      };\n      const response = await updateTask(editingTask.id, updatedTask);\n      setTasks(tasks.map(task => task.id === editingTask.id ? response.data : task));\n      setEditingTask(null); // Clear the editing task state\n    } catch (error) {\n      console.error('There was an error updating the task!', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId);\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('There was an error deleting the task!', error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      await completeTask(taskId);\n      setTasks(tasks.map(task => task.id === taskId ? {\n        ...task,\n        status: 'COMPLETED'\n      } : task));\n    } catch (error) {\n      console.error('There was an error completing the task!', error);\n    }\n  };\n  const handleInProgressTask = async taskId => {\n    try {\n      const response = await updateTask(taskId, {\n        status: 'IN_PROGRESS'\n      });\n      setTasks(tasks.map(task => task.id === taskId ? response.data : task));\n    } catch (error) {\n      console.error('There was an error setting the task to in progress!', error);\n    }\n  };\n  const handlePendingTask = async taskId => {\n    try {\n      const response = await updateTask(taskId, {\n        status: 'PENDING'\n      });\n      setTasks(tasks.map(task => task.id === taskId ? response.data : task));\n    } catch (error) {\n      console.error('There was an error setting the task to pending!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask.title,\n      onChange: e => setNewTask({\n        ...newTask,\n        title: e.target.value\n      }),\n      placeholder: \"New Task Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask.description,\n      onChange: e => setNewTask({\n        ...newTask,\n        description: e.target.value\n      }),\n      placeholder: \"New Task Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: newTask.categoryId,\n      onChange: e => setNewTask({\n        ...newTask,\n        categoryId: e.target.value\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category.id,\n        children: category.name\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      value: newTask.dueDate,\n      onChange: e => setNewTask({\n        ...newTask,\n        dueDate: e.target.value\n      }),\n      placeholder: \"Due Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: newTask.priority,\n      onChange: e => setNewTask({\n        ...newTask,\n        priority: e.target.value\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"LOW\",\n        children: \"Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"MEDIUM\",\n        children: \"Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"HIGH\",\n        children: \"High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n      isMulti: true,\n      cacheOptions: true,\n      loadOptions: loadOptions,\n      onChange: selectedOptions => setNewTask({\n        ...newTask,\n        assignees: selectedOptions.map(option => option.value)\n      }),\n      placeholder: \"Select Assignees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateTask,\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(tasks) && tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" - \", task.description, \" - \", task.status, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditingTask(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePendingTask(task.id),\n          disabled: task.status === 'PENDING',\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleInProgressTask(task.id),\n          disabled: task.status === 'IN_PROGRESS',\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCompleteTask(task.id),\n          disabled: task.status === 'COMPLETED',\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.title,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          title: e.target.value\n        }),\n        placeholder: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.description,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          description: e.target.value\n        }),\n        placeholder: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.categoryId,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          categoryId: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: new Date(editingTask.dueDate).toISOString().slice(0, 16),\n        onChange: e => setEditingTask({\n          ...editingTask,\n          dueDate: e.target.value\n        }),\n        placeholder: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.priority,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOW\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEDIUM\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HIGH\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        defaultValue: editingTask.assignees.map(assignee => {\n          var _users$find;\n          return {\n            value: assignee,\n            label: (_users$find = users.find(user => user.id === assignee)) === null || _users$find === void 0 ? void 0 : _users$find.username\n          };\n        }),\n        onChange: selectedOptions => setEditingTask({\n          ...editingTask,\n          assignees: selectedOptions.map(option => option.value)\n        }),\n        placeholder: \"Select Assignees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateTask,\n        children: \"Update Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditingTask(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"HGK3dGWN2YEG0YMZ/X+GB+iggAA=\", false, function () {\n  return [useAuth];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","AsyncSelect","getCategory","createTask","getTasks","updateTask","deleteTask","completeTask","getCategories","getUsers","getUser","useAuth","jsxDEV","_jsxDEV","Tasks","_s","currentUsername","user","setUser","tasks","setTasks","categories","setCategories","users","setUsers","newTask","setNewTask","title","description","categoryId","dueDate","priority","owner","assignees","status","editingTask","setEditingTask","fetchUser","response","data","error","console","fetchTasks","fetchCategories","fetchUsers","prevTask","id","Array","isArray","loadOptions","inputValue","filteredUsers","filter","username","toLowerCase","includes","map","value","label","handleCreateTask","categoryResponse","category","taskData","name","Date","toISOString","assignee","parseInt","handleUpdateTask","updatedTask","task","handleDeleteTask","taskId","handleCompleteTask","handleInProgressTask","handlePendingTask","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","isMulti","cacheOptions","selectedOptions","option","onClick","disabled","slice","defaultValue","_users$find","find","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Tasks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport {\r\n  getCategory,\r\n  createTask,\r\n  getTasks,\r\n  updateTask,\r\n  deleteTask,\r\n  completeTask,\r\n  getCategories,\r\n  getUsers,\r\n  getUser // Assuming you have an API function to get users\r\n} from '../api';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst Tasks = () => {\r\n  const { currentUsername } = useAuth();\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]); // Initialize as an empty array\r\n  const [categories, setCategories] = useState([]); // Initialize as an empty array\r\n  const [users, setUsers] = useState([]); // State to store all users\r\n  const [newTask, setNewTask] = useState({ title: '', description: '', categoryId: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n  const [editingTask, setEditingTask] = useState(null); // State to manage the task being edited\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await getUser(currentUsername);\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        console.error('There was an error fetching the user!', error);\r\n      }\r\n    };\r\n\r\n    if (currentUsername) {\r\n      fetchUser();\r\n    }\r\n  }, [currentUsername]);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchCategories();\r\n    fetchUsers(); // Fetch all users\r\n    if (user) {\r\n      setNewTask(prevTask => ({ ...prevTask, owner: user.id })); // Set the owner ID to the logged-in user's ID\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await getTasks();\r\n      setTasks(Array.isArray(response.data) ? response.data : []); // Ensure tasks is an array\r\n    } catch (error) {\r\n      console.error('There was an error fetching the tasks!', error);\r\n      setTasks([]); // Ensure tasks is an array even if the fetch fails\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await getCategories();\r\n      setCategories(Array.isArray(response.data) ? response.data : []); // Ensure categories is an array\r\n    } catch (error) {\r\n      console.error('There was an error fetching the categories!', error);\r\n      setCategories([]); // Ensure categories is an array even if the fetch fails\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await getUsers();\r\n      setUsers(Array.isArray(response.data) ? response.data : []); // Ensure users is an array\r\n    } catch (error) {\r\n      console.error('There was an error fetching the users!', error);\r\n      setUsers([]); // Ensure users is an array even if the fetch fails\r\n    }\r\n  };\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    try {\r\n      const response = await getUsers(); // Fetch users from the API\r\n      const filteredUsers = response.data\r\n        .filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase()))\r\n        .map(user => ({ value: user.id, label: user.username }));\r\n      return filteredUsers;\r\n    } catch (error) {\r\n      console.error('There was an error loading the options!', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const handleCreateTask = async () => {\r\n    try {\r\n      // Fetch the category by its ID\r\n      const categoryResponse = await getCategory(newTask.categoryId);\r\n      const category = categoryResponse.data;\r\n\r\n      const taskData = {\r\n        title: newTask.title,\r\n        description: newTask.description,\r\n        category: { id: category.id, name: category.name }, // Associate the fetched category\r\n        dueDate: new Date(newTask.dueDate).toISOString(), // Ensure dueDate is in ISO format\r\n        priority: newTask.priority,\r\n        owner: newTask.owner,\r\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)), // Ensure assignees are numbers\r\n        status: newTask.status // Set status to PENDING by default\r\n      };\r\n\r\n      const response = await createTask(taskData);\r\n      setTasks([...tasks, response.data]);\r\n      setNewTask({ title: '', description: '', categoryId: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n    } catch (error) {\r\n      console.error('There was an error creating the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateTask = async () => {\r\n    try {\r\n      const categoryResponse = await getCategory(editingTask.categoryId);\r\n      const category = categoryResponse.data;\r\n\r\n      const updatedTask = {\r\n        ...editingTask,\r\n        category: { id: category.id, name: category.name },\r\n        dueDate: new Date(editingTask.dueDate).toISOString(),\r\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\r\n      };\r\n\r\n      const response = await updateTask(editingTask.id, updatedTask);\r\n      setTasks(tasks.map(task => (task.id === editingTask.id ? response.data : task)));\r\n      setEditingTask(null); // Clear the editing task state\r\n    } catch (error) {\r\n      console.error('There was an error updating the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    try {\r\n      await deleteTask(taskId);\r\n      setTasks(tasks.filter(task => task.id !== taskId));\r\n    } catch (error) {\r\n      console.error('There was an error deleting the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleCompleteTask = async (taskId) => {\r\n    try {\r\n      await completeTask(taskId);\r\n      setTasks(tasks.map(task => (task.id === taskId ? { ...task, status: 'COMPLETED' } : task)));\r\n    } catch (error) {\r\n      console.error('There was an error completing the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleInProgressTask = async (taskId) => {\r\n    try {\r\n      const response = await updateTask(taskId, { status: 'IN_PROGRESS' });\r\n      setTasks(tasks.map(task => (task.id === taskId ? response.data : task)));\r\n    } catch (error) {\r\n      console.error('There was an error setting the task to in progress!', error);\r\n    }\r\n  };\r\n\r\n  const handlePendingTask = async (taskId) => {\r\n    try {\r\n      const response = await updateTask(taskId, { status: 'PENDING' });\r\n      setTasks(tasks.map(task => (task.id === taskId ? response.data : task)));\r\n    } catch (error) {\r\n      console.error('There was an error setting the task to pending!', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tasks</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={newTask.title}\r\n        onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n        placeholder=\"New Task Title\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={newTask.description}\r\n        onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n        placeholder=\"New Task Description\"\r\n      />\r\n      <select\r\n        value={newTask.categoryId}\r\n        onChange={(e) => setNewTask({ ...newTask, categoryId: e.target.value })}\r\n      >\r\n        <option value=\"\">Select Category</option>\r\n        {Array.isArray(categories) && categories.map(category => (\r\n          <option key={category.id} value={category.id}>\r\n            {category.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <input\r\n        type=\"datetime-local\"\r\n        value={newTask.dueDate}\r\n        onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })}\r\n        placeholder=\"Due Date\"\r\n      />\r\n      <select\r\n        value={newTask.priority}\r\n        onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}\r\n      >\r\n        <option value=\"LOW\">Low</option>\r\n        <option value=\"MEDIUM\">Medium</option>\r\n        <option value=\"HIGH\">High</option>\r\n      </select>\r\n      <AsyncSelect\r\n        isMulti\r\n        cacheOptions\r\n        loadOptions={loadOptions}\r\n        onChange={(selectedOptions) => setNewTask({ ...newTask, assignees: selectedOptions.map(option => option.value) })}\r\n        placeholder=\"Select Assignees\"\r\n      />\r\n      <button onClick={handleCreateTask}>Create Task</button>\r\n      <ul>\r\n        {Array.isArray(tasks) && tasks.map(task => (\r\n          <li key={task.id}>\r\n            {task.title} - {task.description} - {task.status}\r\n            <button onClick={() => setEditingTask(task)}>Edit</button>\r\n            <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\r\n            <button onClick={() => handlePendingTask(task.id)} disabled={task.status === 'PENDING'}>Pending</button>\r\n            <button onClick={() => handleInProgressTask(task.id)} disabled={task.status === 'IN_PROGRESS'}>In Progress</button>\r\n            <button onClick={() => handleCompleteTask(task.id)} disabled={task.status === 'COMPLETED'}>Complete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {editingTask && (\r\n        <div>\r\n          <h3>Edit Task</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.title}\r\n            onChange={(e) => setEditingTask({ ...editingTask, title: e.target.value })}\r\n            placeholder=\"Task Title\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.description}\r\n            onChange={(e) => setEditingTask({ ...editingTask, description: e.target.value })}\r\n            placeholder=\"Task Description\"\r\n          />\r\n          <select\r\n            value={editingTask.categoryId}\r\n            onChange={(e) => setEditingTask({ ...editingTask, categoryId: e.target.value })}\r\n          >\r\n            <option value=\"\">Select Category</option>\r\n            {Array.isArray(categories) && categories.map(category => (\r\n              <option key={category.id} value={category.id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={new Date(editingTask.dueDate).toISOString().slice(0, 16)}\r\n            onChange={(e) => setEditingTask({ ...editingTask, dueDate: e.target.value })}\r\n            placeholder=\"Due Date\"\r\n          />\r\n          <select\r\n            value={editingTask.priority}\r\n            onChange={(e) => setEditingTask({ ...editingTask, priority: e.target.value })}\r\n          >\r\n            <option value=\"LOW\">Low</option>\r\n            <option value=\"MEDIUM\">Medium</option>\r\n            <option value=\"HIGH\">High</option>\r\n          </select>\r\n          <AsyncSelect\r\n            isMulti\r\n            cacheOptions\r\n            loadOptions={loadOptions}\r\n            defaultValue={editingTask.assignees.map(assignee => ({ value: assignee, label: users.find(user => user.id === assignee)?.username }))}\r\n            onChange={(selectedOptions) => setEditingTask({ ...editingTask, assignees: selectedOptions.map(option => option.value) })}\r\n            placeholder=\"Select Assignees\"\r\n          />\r\n          <button onClick={handleUpdateTask}>Update Task</button>\r\n          <button onClick={() => setEditingTask(null)}>Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}