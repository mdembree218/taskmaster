{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Reminders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { getTaskReminders, setTaskReminder, deleteTaskReminder } from '../api';\nimport '../style/Reminders.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminder = ({\n  taskId\n}) => {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [newReminderTime, setNewReminderTime] = useState('');\n  const fetchReminders = useCallback(async () => {\n    try {\n      const response = await getTaskReminders(taskId);\n      setReminders(response.data || []);\n    } catch (error) {\n      console.error('There was an error fetching the reminders!', error);\n    }\n  }, [taskId]);\n  useEffect(() => {\n    fetchReminders();\n  }, [fetchReminders]);\n  const handleCreateReminder = async () => {\n    try {\n      const response = await setTaskReminder(taskId, {\n        reminderTime: newReminderTime,\n        taskId\n      });\n      setReminders([...reminders, response.data]);\n      setNewReminderTime('');\n    } catch (error) {\n      console.error('There was an error creating the reminder!', error);\n    }\n  };\n  const handleDeleteReminder = async reminderId => {\n    try {\n      await deleteTaskReminder(taskId, reminderId);\n      setReminders(reminders.filter(reminder => reminder.id !== reminderId));\n    } catch (error) {\n      console.error('There was an error deleting the reminder!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminder-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-reminder\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: newReminderTime,\n        onChange: e => setNewReminderTime(e.target.value),\n        placeholder: \"New Reminder Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateReminder,\n        children: \"Create Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"reminders-list\",\n      children: reminders.map(reminder => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"reminder-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reminder-time\",\n          children: new Date(reminder.reminderTime).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reminder-action-button\",\n          onClick: () => handleDeleteReminder(reminder.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, reminder.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Reminder, \"aIIwD4Qu5YlnPy6R9UdcS+E5X1M=\");\n_c = Reminder;\nexport default Reminder;\nvar _c;\n$RefreshReg$(_c, \"Reminder\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","getTaskReminders","setTaskReminder","deleteTaskReminder","jsxDEV","_jsxDEV","Reminder","taskId","_s","reminders","setReminders","newReminderTime","setNewReminderTime","fetchReminders","response","data","error","console","handleCreateReminder","reminderTime","handleDeleteReminder","reminderId","filter","reminder","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","Date","toLocaleString","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Reminders.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport {\r\n  getTaskReminders,\r\n  setTaskReminder,\r\n  deleteTaskReminder\r\n} from '../api';\r\nimport '../style/Reminders.css'; // Assuming you have a CSS file for styling\r\n\r\nconst Reminder = ({ taskId }) => {\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminderTime, setNewReminderTime] = useState('');\r\n\r\n  const fetchReminders = useCallback(async () => {\r\n    try {\r\n      const response = await getTaskReminders(taskId);\r\n      setReminders(response.data || []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the reminders!', error);\r\n    }\r\n  }, [taskId]);\r\n\r\n  useEffect(() => {\r\n    fetchReminders();\r\n  }, [fetchReminders]);\r\n\r\n  const handleCreateReminder = async () => {\r\n    try {\r\n      const response = await setTaskReminder(taskId, { reminderTime: newReminderTime, taskId });\r\n      setReminders([...reminders, response.data]);\r\n      setNewReminderTime('');\r\n    } catch (error) {\r\n      console.error('There was an error creating the reminder!', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteReminder = async (reminderId) => {\r\n    try {\r\n      await deleteTaskReminder(taskId, reminderId);\r\n      setReminders(reminders.filter(reminder => reminder.id !== reminderId));\r\n    } catch (error) {\r\n      console.error('There was an error deleting the reminder!', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reminder-container\">\r\n      <h2>Reminders</h2>\r\n      <div className=\"new-reminder\">\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={newReminderTime}\r\n          onChange={(e) => setNewReminderTime(e.target.value)}\r\n          placeholder=\"New Reminder Time\"\r\n        />\r\n        <button onClick={handleCreateReminder}>Create Reminder</button>\r\n      </div>\r\n      <ul className=\"reminders-list\">\r\n        {reminders.map(reminder => (\r\n          <li key={reminder.id} className=\"reminder-item\">\r\n            <span className=\"reminder-time\">{new Date(reminder.reminderTime).toLocaleString()}</span>\r\n            <button className=\"reminder-action-button\" onClick={() => handleDeleteReminder(reminder.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reminder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}