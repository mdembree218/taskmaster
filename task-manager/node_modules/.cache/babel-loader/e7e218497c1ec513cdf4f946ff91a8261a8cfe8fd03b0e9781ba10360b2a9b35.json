{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { getTasks, getCategories, getUsers, createTask, updateTask, deleteTask, shareTask, getUserTaskSummary, getUser, updateCategory } from '../api';\nimport AsyncSelect from 'react-select/async';\nimport '../style/Tasks.css'; // Assuming you have a CSS file for styling\nimport Comment from './Comments';\nimport Reminder from './Reminders';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  var _userTaskSummary$tota, _userTaskSummary$pend, _userTaskSummary$curr, _userTaskSummary$comp;\n  const {\n    currentUsername\n  } = useAuth();\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    priority: 'LOW',\n    owner: '',\n    assignees: [],\n    status: 'PENDING'\n  });\n  const [editingTask, setEditingTask] = useState(null);\n  const [selectedTaskForComments, setSelectedTaskForComments] = useState(null);\n  const [selectedTaskForReminders, setSelectedTaskForReminders] = useState(null);\n  const [userTaskSummary, setUserTaskSummary] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await getUser(currentUsername);\n        setUser(response.data);\n      } catch (error) {\n        console.error('There was an error fetching the user!', error);\n      }\n    };\n    if (currentUsername) {\n      fetchUser();\n    }\n  }, [currentUsername]);\n  useEffect(() => {\n    fetchTasks();\n    fetchCategories();\n    fetchUsers();\n    if (user) {\n      setNewTask(prevTask => ({\n        ...prevTask,\n        owner: user.id\n      }));\n    }\n  }, [user]);\n  const fetchTasks = async () => {\n    try {\n      const response = await getTasks();\n      setTasks(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the tasks!', error);\n      setTasks([]);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await getCategories();\n      setCategories(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the categories!', error);\n      setCategories([]);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await getUsers();\n      setUsers(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the users!', error);\n      setUsers([]);\n    }\n  };\n  const loadOptions = async inputValue => {\n    try {\n      const response = await getUsers();\n      const filteredUsers = response.data.filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase())).map(user => ({\n        value: user.id,\n        label: user.username\n      }));\n      return filteredUsers;\n    } catch (error) {\n      console.error('There was an error loading the options!', error);\n      return [];\n    }\n  };\n  const isValidDate = dateString => {\n    const date = new Date(dateString);\n    return !isNaN(date.getTime());\n  };\n  const handleCreateTask = async () => {\n    try {\n      const taskData = {\n        title: newTask.title,\n        description: newTask.description,\n        dueDate: isValidDate(newTask.dueDate) ? new Date(newTask.dueDate).toISOString() : null,\n        priority: newTask.priority,\n        owner: newTask.owner,\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)),\n        status: newTask.status\n      };\n      const response = await createTask(taskData);\n      setTasks([...tasks, response.data]);\n\n      // Update the selected category with the new task\n      if (selectedCategory) {\n        // Update category logic here\n      }\n\n      // Share the task with all assignees\n      for (const assignee of newTask.assignees) {\n        const users = (await getUsers()).data;\n        console.log('Users:', users);\n        const recipient = users.find(user => user.id === assignee);\n        if (recipient.enableNotifications) {\n          var _users$find;\n          await shareTask({\n            taskId: response.data.id,\n            recipientId: assignee,\n            recipientEmail: (_users$find = users.find(user => user.id === assignee)) === null || _users$find === void 0 ? void 0 : _users$find.email\n          });\n        }\n      }\n      setNewTask({\n        title: '',\n        description: '',\n        dueDate: '',\n        priority: 'LOW',\n        owner: '',\n        assignees: [],\n        status: 'PENDING'\n      });\n    } catch (error) {\n      console.error('There was an error creating the task!', error);\n    }\n  };\n  const handleUpdateTask = async () => {\n    try {\n      const taskData = {\n        ...editingTask,\n        dueDate: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString() : null,\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\n      };\n      const response = await updateTask(editingTask.id, taskData);\n      setTasks(tasks.map(task => task.id === editingTask.id ? response.data : task));\n\n      // Update the selected category with the edited task\n      if (selectedCategory) {\n        console.log(\"Category Selected\", selectedCategory);\n        updateCategory(selectedCategory.id, {\n          tasks: selectedCategory.tasks.map(task => task.id === editingTask.id ? response.data : task)\n        });\n      }\n\n      // Share the task with all assignees\n      for (const assignee of editingTask.assignees) {\n        const users = (await getUsers()).data;\n        console.log('Users:', users);\n        const recipient = users.find(user => user.id === assignee);\n        if (recipient.enableNotifications) {\n          var _users$find2;\n          await shareTask({\n            taskId: editingTask.id,\n            recipientId: assignee,\n            recipientEmail: (_users$find2 = users.find(user => user.id === assignee)) === null || _users$find2 === void 0 ? void 0 : _users$find2.email\n          });\n        }\n      }\n      setEditingTask(null);\n    } catch (error) {\n      console.error('There was an error updating the task!', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId);\n      setTasks(tasks.filter(task => task.id !== taskId));\n\n      // Remove the task from the selected category\n      if (selectedCategory) {\n        // Remove task from category logic here\n      }\n    } catch (error) {\n      console.error('There was an error deleting the task!', error);\n    }\n  };\n  const handleViewUserTaskSummary = async userId => {\n    try {\n      const response = await getUserTaskSummary(userId);\n      console.log('User Task Summary:', response.data);\n      setUserTaskSummary(response.data);\n    } catch (error) {\n      console.error('There was an error fetching the user task summary!', error);\n    }\n  };\n\n  // Add this useEffect to log the updated userTaskSummary\n  useEffect(() => {\n    if (userTaskSummary) {\n      console.log('Updated User Task Summary:', userTaskSummary);\n    }\n  }, [userTaskSummary]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        }),\n        placeholder: \"New Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        }),\n        placeholder: \"New Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: newTask.dueDate,\n        onChange: e => setNewTask({\n          ...newTask,\n          dueDate: e.target.value\n        }),\n        placeholder: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newTask.priority,\n        onChange: e => setNewTask({\n          ...newTask,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOW\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEDIUM\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HIGH\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newTask.status,\n        onChange: e => setNewTask({\n          ...newTask,\n          status: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PENDING\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IN_PROGRESS\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COMPLETED\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        onChange: selectedOptions => setNewTask({\n          ...newTask,\n          assignees: selectedOptions.map(option => option.value)\n        }),\n        placeholder: \"Select Assignees\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory ? selectedCategory.id : '',\n        onChange: e => {\n          const selectedCat = categories.find(category => category.id === parseInt(e.target.value, 10));\n          setSelectedCategory(selectedCat);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateTask,\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"View User Task Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        onChange: selectedOption => {\n          setSelectedUser(selectedOption);\n          handleViewUserTaskSummary(selectedOption.value);\n        },\n        placeholder: \"Select User\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Task Summary for \", selectedUser.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Tasks: \", (_userTaskSummary$tota = userTaskSummary === null || userTaskSummary === void 0 ? void 0 : userTaskSummary.totalTasks) !== null && _userTaskSummary$tota !== void 0 ? _userTaskSummary$tota : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pending Tasks: \", (_userTaskSummary$pend = userTaskSummary === null || userTaskSummary === void 0 ? void 0 : userTaskSummary.pendingTasks) !== null && _userTaskSummary$pend !== void 0 ? _userTaskSummary$pend : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Tasks: \", (_userTaskSummary$curr = userTaskSummary === null || userTaskSummary === void 0 ? void 0 : userTaskSummary.currentTasks) !== null && _userTaskSummary$curr !== void 0 ? _userTaskSummary$curr : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Completed Tasks: \", (_userTaskSummary$comp = userTaskSummary === null || userTaskSummary === void 0 ? void 0 : userTaskSummary.completedTasks) !== null && _userTaskSummary$comp !== void 0 ? _userTaskSummary$comp : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tasks-list\",\n      children: Array.isArray(tasks) && tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" - \", task.description, \" - \", task.status, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => setEditingTask((editingTask === null || editingTask === void 0 ? void 0 : editingTask.id) === task.id ? null : task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => handleDeleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comments\",\n            onClick: () => {\n              if (selectedTaskForComments === task.id) {\n                setSelectedTaskForComments(null);\n              } else {\n                setSelectedTaskForComments(task.id);\n                setSelectedTaskForReminders(null);\n              }\n            },\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reminders\",\n            onClick: () => {\n              if (selectedTaskForReminders === task.id) {\n                setSelectedTaskForReminders(null);\n              } else {\n                setSelectedTaskForReminders(task.id);\n                setSelectedTaskForComments(null);\n              }\n            },\n            children: \"Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), selectedTaskForComments && /*#__PURE__*/_jsxDEV(Comment, {\n          taskId: selectedTaskForComments,\n          username: currentUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }, this), selectedTaskForReminders && /*#__PURE__*/_jsxDEV(Reminder, {\n          taskId: selectedTaskForReminders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.title,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          title: e.target.value\n        }),\n        placeholder: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.description,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          description: e.target.value\n        }),\n        placeholder: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString().slice(0, 16) : '',\n        onChange: e => setEditingTask({\n          ...editingTask,\n          dueDate: e.target.value\n        }),\n        placeholder: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory ? selectedCategory.id : '',\n        onChange: e => {\n          const selectedCat = categories.find(category => category.id === parseInt(e.target.value, 10));\n          setSelectedCategory(selectedCat);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.priority,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOW\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEDIUM\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HIGH\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.status,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          status: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PENDING\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IN_PROGRESS\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COMPLETED\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        onChange: selectedOptions => setEditingTask({\n          ...editingTask,\n          assignees: selectedOptions.map(option => option.value)\n        }),\n        value: editingTask.assignees.map(assignee => {\n          var _users$find3;\n          return {\n            value: assignee,\n            label: (_users$find3 = users.find(user => user.id === assignee)) === null || _users$find3 === void 0 ? void 0 : _users$find3.username\n          };\n        }),\n        placeholder: \"Select Assignees\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateTask,\n        children: \"Update Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"PiEOTj3YTdoOoUstqrfKqZyeSQ4=\", false, function () {\n  return [useAuth];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","getTasks","getCategories","getUsers","createTask","updateTask","deleteTask","shareTask","getUserTaskSummary","getUser","updateCategory","AsyncSelect","Comment","Reminder","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","_userTaskSummary$tota","_userTaskSummary$pend","_userTaskSummary$curr","_userTaskSummary$comp","currentUsername","user","setUser","tasks","setTasks","categories","setCategories","users","setUsers","newTask","setNewTask","title","description","dueDate","priority","owner","assignees","status","editingTask","setEditingTask","selectedTaskForComments","setSelectedTaskForComments","selectedTaskForReminders","setSelectedTaskForReminders","userTaskSummary","setUserTaskSummary","selectedUser","setSelectedUser","selectedCategory","setSelectedCategory","fetchUser","response","data","error","console","fetchTasks","fetchCategories","fetchUsers","prevTask","id","Array","isArray","loadOptions","inputValue","filteredUsers","filter","username","toLowerCase","includes","map","value","label","isValidDate","dateString","date","Date","isNaN","getTime","handleCreateTask","taskData","toISOString","assignee","parseInt","log","recipient","find","enableNotifications","_users$find","taskId","recipientId","recipientEmail","email","handleUpdateTask","task","_users$find2","handleDeleteTask","handleViewUserTaskSummary","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","isMulti","cacheOptions","selectedOptions","option","selectedCat","category","name","onClick","selectedOption","totalTasks","pendingTasks","currentTasks","completedTasks","slice","_users$find3","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Tasks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport {\r\n  getTasks,\r\n  getCategories,\r\n  getUsers,\r\n  createTask,\r\n  updateTask,\r\n  deleteTask,\r\n  shareTask,\r\n  getUserTaskSummary,\r\n  getUser,\r\n  updateCategory,\r\n} from '../api';\r\nimport AsyncSelect from 'react-select/async';\r\nimport '../style/Tasks.css'; // Assuming you have a CSS file for styling\r\nimport Comment from './Comments';\r\nimport Reminder from './Reminders';\r\n\r\nconst Tasks = () => {\r\n  const { currentUsername } = useAuth();\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [newTask, setNewTask] = useState({ title: '', description: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [selectedTaskForComments, setSelectedTaskForComments] = useState(null);\r\n  const [selectedTaskForReminders, setSelectedTaskForReminders] = useState(null);\r\n  const [userTaskSummary, setUserTaskSummary] = useState(null);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await getUser(currentUsername);\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        console.error('There was an error fetching the user!', error);\r\n      }\r\n    };\r\n\r\n    if (currentUsername) {\r\n      fetchUser();\r\n    }\r\n  }, [currentUsername]);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchCategories();\r\n    fetchUsers();\r\n    if (user) {\r\n      setNewTask(prevTask => ({ ...prevTask, owner: user.id }));\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await getTasks();\r\n      setTasks(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the tasks!', error);\r\n      setTasks([]);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await getCategories();\r\n      setCategories(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the categories!', error);\r\n      setCategories([]);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await getUsers();\r\n      setUsers(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the users!', error);\r\n      setUsers([]);\r\n    }\r\n  };\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    try {\r\n      const response = await getUsers();\r\n      const filteredUsers = response.data\r\n        .filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase()))\r\n        .map(user => ({ value: user.id, label: user.username }));\r\n      return filteredUsers;\r\n    } catch (error) {\r\n      console.error('There was an error loading the options!', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const isValidDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return !isNaN(date.getTime());\r\n  };\r\n\r\n  const handleCreateTask = async () => {\r\n    try {\r\n      const taskData = {\r\n        title: newTask.title,\r\n        description: newTask.description,\r\n        dueDate: isValidDate(newTask.dueDate) ? new Date(newTask.dueDate).toISOString() : null,\r\n        priority: newTask.priority,\r\n        owner: newTask.owner,\r\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)),\r\n        status: newTask.status\r\n      };\r\n\r\n      const response = await createTask(taskData);\r\n      setTasks([...tasks, response.data]);\r\n\r\n      // Update the selected category with the new task\r\n      if (selectedCategory) {\r\n        // Update category logic here\r\n      }\r\n\r\n      // Share the task with all assignees\r\n      for (const assignee of newTask.assignees) {\r\n        const users = (await getUsers()).data;\r\n        console.log('Users:', users);\r\n        const recipient = users.find(user => user.id === assignee);\r\n        if (recipient.enableNotifications) {\r\n          await shareTask({ taskId: response.data.id, recipientId: assignee, recipientEmail: users.find(user => user.id === assignee)?.email });\r\n        }\r\n      }\r\n\r\n      setNewTask({ title: '', description: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n    } catch (error) {\r\n      console.error('There was an error creating the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateTask = async () => {\r\n    try {\r\n      const taskData = {\r\n        ...editingTask,\r\n        dueDate: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString() : null,\r\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\r\n      };\r\n\r\n      const response = await updateTask(editingTask.id, taskData);\r\n      setTasks(tasks.map(task => (task.id === editingTask.id ? response.data : task)));\r\n\r\n      // Update the selected category with the edited task\r\n      if (selectedCategory) {\r\n        console.log(\"Category Selected\", selectedCategory);\r\n        updateCategory(selectedCategory.id, { tasks: selectedCategory.tasks.map(task => (task.id === editingTask.id ? response.data : task)) });\r\n      }\r\n\r\n      // Share the task with all assignees\r\n      for (const assignee of editingTask.assignees) {\r\n        const users = (await getUsers()).data;\r\n        console.log('Users:', users);\r\n        const recipient = users.find(user => user.id === assignee);\r\n        if (recipient.enableNotifications) {\r\n          await shareTask({ taskId: editingTask.id, recipientId: assignee, recipientEmail: users.find(user => user.id === assignee)?.email });\r\n        }\r\n      }\r\n\r\n      setEditingTask(null);\r\n    } catch (error) {\r\n      console.error('There was an error updating the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    try {\r\n      await deleteTask(taskId);\r\n      setTasks(tasks.filter(task => task.id !== taskId));\r\n\r\n      // Remove the task from the selected category\r\n      if (selectedCategory) {\r\n        // Remove task from category logic here\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error deleting the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleViewUserTaskSummary = async (userId) => {\r\n    try {\r\n      const response = await getUserTaskSummary(userId);\r\n      console.log('User Task Summary:', response.data);\r\n      setUserTaskSummary(response.data);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the user task summary!', error);\r\n    }\r\n  };\r\n\r\n  // Add this useEffect to log the updated userTaskSummary\r\n  useEffect(() => {\r\n    if (userTaskSummary) {\r\n      console.log('Updated User Task Summary:', userTaskSummary);\r\n    }\r\n  }, [userTaskSummary]);\r\n\r\n  return (\r\n    <div className=\"tasks-container\">\r\n      <h2>Tasks</h2>\r\n      <div className=\"task-inputs\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.title}\r\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n          placeholder=\"New Task Title\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.description}\r\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n          placeholder=\"New Task Description\"\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={newTask.dueDate}\r\n          onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })}\r\n          placeholder=\"Due Date\"\r\n        />\r\n        <select\r\n          value={newTask.priority}\r\n          onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}\r\n        >\r\n          <option value=\"LOW\">Low</option>\r\n          <option value=\"MEDIUM\">Medium</option>\r\n          <option value=\"HIGH\">High</option>\r\n        </select>\r\n        <select\r\n          value={newTask.status}\r\n          onChange={(e) => setNewTask({ ...newTask, status: e.target.value })}\r\n        >\r\n          <option value=\"PENDING\">Pending</option>\r\n          <option value=\"IN_PROGRESS\">In Progress</option>\r\n          <option value=\"COMPLETED\">Completed</option>\r\n        </select>\r\n        <AsyncSelect\r\n          isMulti\r\n          cacheOptions\r\n          loadOptions={loadOptions}\r\n          onChange={(selectedOptions) => setNewTask({ ...newTask, assignees: selectedOptions.map(option => option.value) })}\r\n          placeholder=\"Select Assignees\"\r\n          className=\"async-select\"\r\n        />\r\n        <select\r\n          value={selectedCategory ? selectedCategory.id : ''}\r\n          onChange={(e) => {\r\n            const selectedCat = categories.find(category => category.id === parseInt(e.target.value, 10));\r\n            setSelectedCategory(selectedCat);\r\n          }}\r\n        >\r\n          <option value=\"\">Select Category</option>\r\n          {Array.isArray(categories) && categories.map(category => (\r\n            <option key={category.id} value={category.id}>\r\n              {category.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <button onClick={handleCreateTask}>Create Task</button>\r\n      </div>\r\n      <div className=\"user-summary\">\r\n        <h3>View User Task Summary</h3>\r\n        <AsyncSelect\r\n          cacheOptions\r\n          loadOptions={loadOptions}\r\n          onChange={(selectedOption) => {\r\n            setSelectedUser(selectedOption);\r\n            handleViewUserTaskSummary(selectedOption.value);\r\n          }}\r\n          placeholder=\"Select User\"\r\n          className=\"async-select\"\r\n        />\r\n        {selectedUser && (\r\n          <>\r\n            <h4>Task Summary for {selectedUser.label}</h4>\r\n            <div className=\"task-summary\">\r\n              <p>Total Tasks: {userTaskSummary?.totalTasks ?? 0}</p>\r\n              <p>Pending Tasks: {userTaskSummary?.pendingTasks ?? 0}</p>\r\n              <p>Current Tasks: {userTaskSummary?.currentTasks ?? 0}</p>\r\n              <p>Completed Tasks: {userTaskSummary?.completedTasks ?? 0}</p>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <ul className=\"tasks-list\">\r\n        {Array.isArray(tasks) && tasks.map(task => (\r\n          <li key={task.id}>\r\n            {task.title} - {task.description} - {task.status}\r\n            <div>\r\n              <button className=\"edit\" onClick={() => setEditingTask(editingTask?.id === task.id ? null : task)}>Edit</button>\r\n              <button className=\"delete\" onClick={() => handleDeleteTask(task.id)}>Delete</button>\r\n              <button className=\"comments\" onClick={() => {\r\n                if (selectedTaskForComments === task.id) {\r\n                  setSelectedTaskForComments(null);\r\n                } else {\r\n                  setSelectedTaskForComments(task.id);\r\n                  setSelectedTaskForReminders(null);\r\n                }\r\n              }}>Comments</button>\r\n              <button className=\"reminders\" onClick={() => {\r\n                if (selectedTaskForReminders === task.id) {\r\n                  setSelectedTaskForReminders(null);\r\n                } else {\r\n                  setSelectedTaskForReminders(task.id);\r\n                  setSelectedTaskForComments(null);\r\n                }\r\n              }}>Reminders</button>\r\n            </div>\r\n            {selectedTaskForComments && (\r\n              <Comment taskId={selectedTaskForComments} username={currentUsername} />\r\n            )}\r\n            {selectedTaskForReminders && (\r\n              <Reminder taskId={selectedTaskForReminders} />\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {editingTask && (\r\n        <div className=\"edit-task-container\">\r\n          <h3>Edit Task</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.title}\r\n            onChange={(e) => setEditingTask({ ...editingTask, title: e.target.value })}\r\n            placeholder=\"Task Title\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.description}\r\n            onChange={(e) => setEditingTask({ ...editingTask, description: e.target.value })}\r\n            placeholder=\"Task Description\"\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setEditingTask({ ...editingTask, dueDate: e.target.value })}\r\n            placeholder=\"Due Date\"\r\n          />\r\n          <select\r\n            value={selectedCategory ? selectedCategory.id : ''}\r\n            onChange={(e) => {\r\n              const selectedCat = categories.find(category => category.id === parseInt(e.target.value, 10));\r\n              setSelectedCategory(selectedCat);\r\n            }}\r\n          >\r\n            <option value=\"\">Select Category</option>\r\n            {Array.isArray(categories) && categories.map(category => (\r\n              <option key={category.id} value={category.id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            value={editingTask.priority}\r\n            onChange={(e) => setEditingTask({ ...editingTask, priority: e.target.value })}\r\n          >\r\n            <option value=\"LOW\">Low</option>\r\n            <option value=\"MEDIUM\">Medium</option>\r\n            <option value=\"HIGH\">High</option>\r\n          </select>\r\n          <select\r\n            value={editingTask.status}\r\n            onChange={(e) => setEditingTask({ ...editingTask, status: e.target.value })}\r\n          >\r\n            <option value=\"PENDING\">Pending</option>\r\n            <option value=\"IN_PROGRESS\">In Progress</option>\r\n            <option value=\"COMPLETED\">Completed</option>\r\n          </select>\r\n          <AsyncSelect\r\n            isMulti\r\n            cacheOptions\r\n            loadOptions={loadOptions}\r\n            onChange={(selectedOptions) => setEditingTask({ ...editingTask, assignees: selectedOptions.map(option => option.value) })}\r\n            value={editingTask.assignees.map(assignee => ({ value: assignee, label: users.find(user => user.id === assignee)?.username }))}\r\n            placeholder=\"Select Assignees\"\r\n            className=\"async-select\"\r\n          />\r\n          <button onClick={handleUpdateTask}>Update Task</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}