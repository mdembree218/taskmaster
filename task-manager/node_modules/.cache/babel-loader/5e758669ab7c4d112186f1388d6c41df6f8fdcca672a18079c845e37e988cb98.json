{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Reminders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { getTask, getUser, getTaskReminders, setTaskReminder, deleteTaskReminder, shareTask // Assuming you have an API function to share the task\n} from '../api';\nimport '../style/Reminders.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminder = ({\n  taskId\n}) => {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [newReminderTime, setNewReminderTime] = useState('');\n  const fetchReminders = useCallback(async () => {\n    try {\n      const response = await getTaskReminders(taskId);\n      setReminders(response.data || []);\n    } catch (error) {\n      console.error('There was an error fetching the reminders!', error);\n    }\n  }, [taskId]);\n  useEffect(() => {\n    fetchReminders();\n  }, [fetchReminders]);\n  const handleDeleteReminder = useCallback(async reminderId => {\n    try {\n      await deleteTaskReminder(taskId, reminderId);\n      setReminders(reminders.filter(reminder => reminder.id !== reminderId));\n    } catch (error) {\n      console.error('There was an error deleting the reminder!', error);\n    }\n  }, [taskId, reminders]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      reminders.forEach(async reminder => {\n        const reminderDate = new Date(Date.UTC(reminder.reminderTime[0], reminder.reminderTime[1] - 1, reminder.reminderTime[2], reminder.reminderTime[3], reminder.reminderTime[4]));\n        if (reminderDate <= now) {\n          const task = (await getTask(taskId)).data;\n          console.log('Reminder triggered for task:', task);\n          for (const assignee of task.assignees) {\n            console.log('Assignee:', assignee);\n            const recipient = await getUser(assignee);\n            console.log('Sharing task with:', recipient);\n            console.log('Sharing task with:', recipient.email);\n            handleShareTask(taskId, assignee, recipient.email);\n          }\n          // Optionally, you can delete the reminder after sharing the task\n          handleDeleteReminder(reminder.id);\n        }\n      });\n    }, 60000); // Check every minute\n\n    return () => clearInterval(interval);\n  }, [reminders, taskId, handleDeleteReminder]);\n  const handleShareTask = async (taskId, recipientId, recipientEmail) => {\n    try {\n      const shareTaskDTO = {\n        taskId,\n        recipientId,\n        recipientEmail\n      };\n      await shareTask(shareTaskDTO);\n      alert('Task shared successfully');\n    } catch (error) {\n      console.error('Error sharing task:', error);\n      alert('Failed to share task');\n    }\n  };\n  const handleCreateReminder = async () => {\n    try {\n      const reminderDate = new Date(newReminderTime);\n      const reminderToCreate = {\n        reminderTime: [reminderDate.getUTCFullYear(), reminderDate.getUTCMonth() + 1,\n        // Months are zero-based in JavaScript\n        reminderDate.getUTCDate(), reminderDate.getUTCHours(), reminderDate.getUTCMinutes(), reminderDate.getUTCSeconds(), reminderDate.getUTCMilliseconds() * 1000 // Convert milliseconds to nanoseconds\n        ],\n        taskId\n      };\n      const response = await setTaskReminder(taskId, reminderToCreate);\n      setReminders([...reminders, response.data]);\n      setNewReminderTime('');\n    } catch (error) {\n      console.error('There was an error creating the reminder!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminder-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-reminder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-reminder-time\",\n        children: \"New Reminder Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"new-reminder-time\",\n        type: \"datetime-local\",\n        value: newReminderTime,\n        onChange: e => setNewReminderTime(e.target.value),\n        placeholder: \"New Reminder Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateReminder,\n        children: \"Create Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"reminders-list\",\n      children: reminders.map((reminder, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"reminder-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reminder-time\",\n          children: reminder.reminderTime && reminder.reminderTime.length >= 5 ? new Date(Date.UTC(reminder.reminderTime[0], reminder.reminderTime[1] - 1, reminder.reminderTime[2], reminder.reminderTime[3], reminder.reminderTime[4])).toLocaleString('en-US', {\n            year: 'numeric',\n            day: 'numeric',\n            month: 'long',\n            hour: 'numeric',\n            minute: 'numeric'\n          }) : 'Invalid reminder time'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reminder-action-button\",\n          onClick: () => handleDeleteReminder(reminder.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, `${reminder.id}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Reminder, \"jdbt4hoBzOVVn1r+DKuC7nEQTGc=\");\n_c = Reminder;\nexport default Reminder;\nvar _c;\n$RefreshReg$(_c, \"Reminder\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","getTask","getUser","getTaskReminders","setTaskReminder","deleteTaskReminder","shareTask","jsxDEV","_jsxDEV","Reminder","taskId","_s","reminders","setReminders","newReminderTime","setNewReminderTime","fetchReminders","response","data","error","console","handleDeleteReminder","reminderId","filter","reminder","id","interval","setInterval","now","Date","forEach","reminderDate","UTC","reminderTime","task","log","assignee","assignees","recipient","email","handleShareTask","clearInterval","recipientId","recipientEmail","shareTaskDTO","alert","handleCreateReminder","reminderToCreate","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","e","target","placeholder","onClick","map","index","length","toLocaleString","year","day","month","hour","minute","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Reminders.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport {\r\n  getTask,\r\n  getUser,\r\n  getTaskReminders,\r\n  setTaskReminder,\r\n  deleteTaskReminder,\r\n  shareTask // Assuming you have an API function to share the task\r\n} from '../api';\r\nimport '../style/Reminders.css'; // Assuming you have a CSS file for styling\r\n\r\nconst Reminder = ({ taskId }) => {\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminderTime, setNewReminderTime] = useState('');\r\n\r\n  const fetchReminders = useCallback(async () => {\r\n    try {\r\n      const response = await getTaskReminders(taskId);\r\n      setReminders(response.data || []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the reminders!', error);\r\n    }\r\n  }, [taskId]);\r\n\r\n  useEffect(() => {\r\n    fetchReminders();\r\n  }, [fetchReminders]);\r\n\r\n  const handleDeleteReminder = useCallback(async (reminderId) => {\r\n    try {\r\n      await deleteTaskReminder(taskId, reminderId);\r\n      setReminders(reminders.filter(reminder => reminder.id !== reminderId));\r\n    } catch (error) {\r\n      console.error('There was an error deleting the reminder!', error);\r\n    }\r\n  }, [taskId, reminders]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = new Date();\r\n      reminders.forEach(async (reminder) => {\r\n        const reminderDate = new Date(Date.UTC(\r\n          reminder.reminderTime[0],\r\n          reminder.reminderTime[1] - 1,\r\n          reminder.reminderTime[2],\r\n          reminder.reminderTime[3],\r\n          reminder.reminderTime[4]\r\n        ));\r\n        if (reminderDate <= now) {\r\n          const task = (await getTask(taskId)).data;\r\n          console.log('Reminder triggered for task:', task);\r\n          \r\n            for (const assignee of task.assignees) {\r\n              console.log('Assignee:', assignee);\r\n              const recipient = await getUser(assignee);\r\n              console.log('Sharing task with:', recipient);\r\n              console.log('Sharing task with:', recipient.email);\r\n              handleShareTask(taskId, assignee, recipient.email);\r\n            }\r\n          // Optionally, you can delete the reminder after sharing the task\r\n          handleDeleteReminder(reminder.id);\r\n        }\r\n      });\r\n    }, 60000); // Check every minute\r\n\r\n    return () => clearInterval(interval);\r\n  }, [reminders, taskId, handleDeleteReminder]);\r\n\r\n  const handleShareTask = async (taskId, recipientId, recipientEmail) => {\r\n    try {\r\n      const shareTaskDTO = {\r\n        taskId,\r\n        recipientId,\r\n        recipientEmail,\r\n      };\r\n      await shareTask(shareTaskDTO);\r\n      alert('Task shared successfully');\r\n    } catch (error) {\r\n      console.error('Error sharing task:', error);\r\n      alert('Failed to share task');\r\n    }\r\n  };\r\n\r\n  const handleCreateReminder = async () => {\r\n    try {\r\n      const reminderDate = new Date(newReminderTime);\r\n      const reminderToCreate = {\r\n        reminderTime: [\r\n          reminderDate.getUTCFullYear(),\r\n          reminderDate.getUTCMonth() + 1, // Months are zero-based in JavaScript\r\n          reminderDate.getUTCDate(),\r\n          reminderDate.getUTCHours(),\r\n          reminderDate.getUTCMinutes(),\r\n          reminderDate.getUTCSeconds(),\r\n          reminderDate.getUTCMilliseconds() * 1000 // Convert milliseconds to nanoseconds\r\n        ],\r\n        taskId\r\n      };\r\n      const response = await setTaskReminder(taskId, reminderToCreate);\r\n      setReminders([...reminders, response.data]);\r\n      setNewReminderTime('');\r\n    } catch (error) {\r\n      console.error('There was an error creating the reminder!', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reminder-container\">\r\n      <h2>Reminders</h2>\r\n      <div className=\"new-reminder\">\r\n        <label htmlFor=\"new-reminder-time\">New Reminder Time</label>\r\n        <input\r\n          id=\"new-reminder-time\"\r\n          type=\"datetime-local\"\r\n          value={newReminderTime}\r\n          onChange={(e) => setNewReminderTime(e.target.value)}\r\n          placeholder=\"New Reminder Time\"\r\n        />\r\n        <button onClick={handleCreateReminder}>Create Reminder</button>\r\n      </div>\r\n      <ul className=\"reminders-list\">\r\n        {reminders.map((reminder, index) => (\r\n          <li key={`${reminder.id}-${index}`} className=\"reminder-item\">\r\n            <span className=\"reminder-time\">\r\n              {reminder.reminderTime && reminder.reminderTime.length >= 5 ? (\r\n                new Date(Date.UTC(reminder.reminderTime[0], reminder.reminderTime[1] - 1, reminder.reminderTime[2], reminder.reminderTime[3], reminder.reminderTime[4])).toLocaleString('en-US', {\r\n                  year: 'numeric',\r\n                  day: 'numeric',\r\n                  month: 'long',\r\n                  hour: 'numeric',\r\n                  minute: 'numeric'\r\n                })\r\n              ) : (\r\n                'Invalid reminder time'\r\n              )}\r\n            </span>\r\n            <button className=\"reminder-action-button\" onClick={() => handleDeleteReminder(reminder.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reminder;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SACEC,OAAO,EACPC,OAAO,EACPC,gBAAgB,EAChBC,eAAe,EACfC,kBAAkB,EAClBC,SAAS,CAAC;AAAA,OACL,QAAQ;AACf,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMiB,cAAc,GAAGhB,WAAW,CAAC,YAAY;IAC7C,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAMd,gBAAgB,CAACO,MAAM,CAAC;MAC/CG,YAAY,CAACI,QAAQ,CAACC,IAAI,IAAI,EAAE,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IACpE;EACF,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC;EAEZZ,SAAS,CAAC,MAAM;IACdkB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,MAAMK,oBAAoB,GAAGrB,WAAW,CAAC,MAAOsB,UAAU,IAAK;IAC7D,IAAI;MACF,MAAMjB,kBAAkB,CAACK,MAAM,EAAEY,UAAU,CAAC;MAC5CT,YAAY,CAACD,SAAS,CAACW,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKH,UAAU,CAAC,CAAC;IACxE,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACnE;EACF,CAAC,EAAE,CAACT,MAAM,EAAEE,SAAS,CAAC,CAAC;EAEvBd,SAAS,CAAC,MAAM;IACd,MAAM4B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtBjB,SAAS,CAACkB,OAAO,CAAC,MAAON,QAAQ,IAAK;QACpC,MAAMO,YAAY,GAAG,IAAIF,IAAI,CAACA,IAAI,CAACG,GAAG,CACpCR,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,EACxBT,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAC5BT,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,EACxBT,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,EACxBT,QAAQ,CAACS,YAAY,CAAC,CAAC,CACzB,CAAC,CAAC;QACF,IAAIF,YAAY,IAAIH,GAAG,EAAE;UACvB,MAAMM,IAAI,GAAG,CAAC,MAAMjC,OAAO,CAACS,MAAM,CAAC,EAAEQ,IAAI;UACzCE,OAAO,CAACe,GAAG,CAAC,8BAA8B,EAAED,IAAI,CAAC;UAE/C,KAAK,MAAME,QAAQ,IAAIF,IAAI,CAACG,SAAS,EAAE;YACrCjB,OAAO,CAACe,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAAC;YAClC,MAAME,SAAS,GAAG,MAAMpC,OAAO,CAACkC,QAAQ,CAAC;YACzChB,OAAO,CAACe,GAAG,CAAC,oBAAoB,EAAEG,SAAS,CAAC;YAC5ClB,OAAO,CAACe,GAAG,CAAC,oBAAoB,EAAEG,SAAS,CAACC,KAAK,CAAC;YAClDC,eAAe,CAAC9B,MAAM,EAAE0B,QAAQ,EAAEE,SAAS,CAACC,KAAK,CAAC;UACpD;UACF;UACAlB,oBAAoB,CAACG,QAAQ,CAACC,EAAE,CAAC;QACnC;MACF,CAAC,CAAC;IACJ,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEX,OAAO,MAAMgB,aAAa,CAACf,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACd,SAAS,EAAEF,MAAM,EAAEW,oBAAoB,CAAC,CAAC;EAE7C,MAAMmB,eAAe,GAAG,MAAAA,CAAO9B,MAAM,EAAEgC,WAAW,EAAEC,cAAc,KAAK;IACrE,IAAI;MACF,MAAMC,YAAY,GAAG;QACnBlC,MAAM;QACNgC,WAAW;QACXC;MACF,CAAC;MACD,MAAMrC,SAAS,CAACsC,YAAY,CAAC;MAC7BC,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C0B,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMf,YAAY,GAAG,IAAIF,IAAI,CAACf,eAAe,CAAC;MAC9C,MAAMiC,gBAAgB,GAAG;QACvBd,YAAY,EAAE,CACZF,YAAY,CAACiB,cAAc,CAAC,CAAC,EAC7BjB,YAAY,CAACkB,WAAW,CAAC,CAAC,GAAG,CAAC;QAAE;QAChClB,YAAY,CAACmB,UAAU,CAAC,CAAC,EACzBnB,YAAY,CAACoB,WAAW,CAAC,CAAC,EAC1BpB,YAAY,CAACqB,aAAa,CAAC,CAAC,EAC5BrB,YAAY,CAACsB,aAAa,CAAC,CAAC,EAC5BtB,YAAY,CAACuB,kBAAkB,CAAC,CAAC,GAAG,IAAI,CAAC;QAAA,CAC1C;QACD5C;MACF,CAAC;MACD,MAAMO,QAAQ,GAAG,MAAMb,eAAe,CAACM,MAAM,EAAEqC,gBAAgB,CAAC;MAChElC,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEK,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC3CH,kBAAkB,CAAC,EAAE,CAAC;IACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACnE;EACF,CAAC;EAED,oBACEX,OAAA;IAAK+C,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjChD,OAAA;MAAAgD,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpD,OAAA;MAAK+C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhD,OAAA;QAAOqD,OAAO,EAAC,mBAAmB;QAAAL,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5DpD,OAAA;QACEiB,EAAE,EAAC,mBAAmB;QACtBqC,IAAI,EAAC,gBAAgB;QACrBC,KAAK,EAAEjD,eAAgB;QACvBkD,QAAQ,EAAGC,CAAC,IAAKlD,kBAAkB,CAACkD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACpDI,WAAW,EAAC;MAAmB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFpD,OAAA;QAAQ4D,OAAO,EAAEtB,oBAAqB;QAAAU,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACNpD,OAAA;MAAI+C,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC3B5C,SAAS,CAACyD,GAAG,CAAC,CAAC7C,QAAQ,EAAE8C,KAAK,kBAC7B9D,OAAA;QAAoC+C,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC3DhD,OAAA;UAAM+C,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC5BhC,QAAQ,CAACS,YAAY,IAAIT,QAAQ,CAACS,YAAY,CAACsC,MAAM,IAAI,CAAC,GACzD,IAAI1C,IAAI,CAACA,IAAI,CAACG,GAAG,CAACR,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,EAAET,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAET,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,EAAET,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,EAAET,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAACuC,cAAc,CAAC,OAAO,EAAE;YAC/KC,IAAI,EAAE,SAAS;YACfC,GAAG,EAAE,SAAS;YACdC,KAAK,EAAE,MAAM;YACbC,IAAI,EAAE,SAAS;YACfC,MAAM,EAAE;UACV,CAAC,CAAC,GAEF;QACD;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACPpD,OAAA;UAAQ+C,SAAS,EAAC,wBAAwB;UAACa,OAAO,EAAEA,CAAA,KAAM/C,oBAAoB,CAACG,QAAQ,CAACC,EAAE,CAAE;UAAA+B,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAdrG,GAAGpC,QAAQ,CAACC,EAAE,IAAI6C,KAAK,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAe9B,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjD,EAAA,CAnIIF,QAAQ;AAAAqE,EAAA,GAARrE,QAAQ;AAqId,eAAeA,QAAQ;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}