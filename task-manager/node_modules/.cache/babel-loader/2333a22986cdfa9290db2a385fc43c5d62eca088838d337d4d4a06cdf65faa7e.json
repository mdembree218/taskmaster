{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Comments.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { getTaskComments, addTaskComment, getUser, getUsers } from '../api';\nimport '../style/Comments.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  taskId,\n  username\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState({\n    content: '',\n    author: null,\n    timestamp: null\n  });\n  const [error, setError] = useState('');\n  const [authorUsername, setAuthorUsername] = useState(null);\n  const fetchComments = useCallback(async () => {\n    try {\n      const response = await getTaskComments(taskId);\n      setComments(response.data || []);\n    } catch (error) {\n      console.error('There was an error fetching the comments!', error);\n    }\n  }, [taskId]);\n  const fetchUserUsername = useCallback(async () => {\n    try {\n      const response = await getUser(username);\n      setAuthorUsername(response.data.username); // Ensure authorUsername is the username\n    } catch (error) {\n      console.error('There was an error fetching the user username!', error);\n    }\n  }, [username]);\n  useEffect(() => {\n    fetchComments();\n    fetchUserUsername();\n  }, [fetchComments, fetchUserUsername]);\n  const handleCreateComment = async () => {\n    if (!newComment.content.trim()) {\n      setError('Content is mandatory.');\n      return;\n    }\n    if (!taskId) {\n      setError('Task ID is mandatory.');\n      return;\n    }\n    if (!authorUsername) {\n      setError('Author is mandatory.');\n      return;\n    }\n    const now = new Date();\n    const commentToCreate = {\n      taskId: taskId,\n      content: newComment.content,\n      author: authorUsername,\n      timestamp: [now.getUTCFullYear(), now.getUTCMonth() + 1,\n      // Months are zero-based in JavaScript\n      now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds(), now.getUTCMilliseconds() * 1000 // Convert milliseconds to nanoseconds\n      ]\n    };\n    try {\n      const response = await addTaskComment(taskId, commentToCreate);\n      setComments([...comments, response.data]);\n      setNewComment({\n        content: '',\n        author: null,\n        timestamp: null\n      });\n      setError('');\n    } catch (error) {\n      console.error('There was an error creating the comment!', error);\n      console.error(error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-comment-content\",\n        children: \"New Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"new-comment-content\",\n        value: newComment.content,\n        onChange: e => setNewComment({\n          ...newComment,\n          content: e.target.value\n        }),\n        placeholder: \"New Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(CommentAuthor, {\n          authorUsername: comment.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-content\",\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-timestamp\",\n          children: new Date(Date.UTC(reminder.reminderTime[0], reminder.reminderTime[1] - 1, reminder.reminderTime[2], reminder.reminderTime[3], reminder.reminderTime[4])).toLocaleString('en-US', {\n            year: 'numeric',\n            day: 'numeric',\n            month: 'long',\n            hour: 'numeric',\n            minute: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"4iGduv8lGYqnk8sQxRVDv/5hBNY=\");\n_c = Comment;\nconst CommentAuthor = ({\n  authorUsername\n}) => {\n  _s2();\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    const fetchUsername = async () => {\n      try {\n        const response = await getUsers();\n        for (let i = 0; i < response.data.length; i++) {\n          if (response.data[i].username === authorUsername) {\n            setUsername(response.data[i].username);\n            console.log('Username:', response.data[i].username);\n            break;\n          }\n        }\n      } catch (error) {\n        console.error('There was an error fetching the username!', error);\n      }\n    };\n    fetchUsername();\n  }, [authorUsername]);\n  console.log('Username:', username);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"comment-author\",\n    children: username\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 12\n  }, this);\n};\n_s2(CommentAuthor, \"vvPqiwmcocEAjsjiwnE6bJ+J4Yk=\");\n_c2 = CommentAuthor;\nexport default Comment;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"CommentAuthor\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","getTaskComments","addTaskComment","getUser","getUsers","jsxDEV","_jsxDEV","Comment","taskId","username","_s","comments","setComments","newComment","setNewComment","content","author","timestamp","error","setError","authorUsername","setAuthorUsername","fetchComments","response","data","console","fetchUserUsername","handleCreateComment","trim","now","Date","commentToCreate","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","placeholder","onClick","map","comment","CommentAuthor","UTC","reminder","reminderTime","toLocaleString","year","day","month","hour","minute","_c","_s2","setUsername","fetchUsername","i","length","log","_c2","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Comments.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport {\r\n    getTaskComments,\r\n    addTaskComment,\r\n    getUser,\r\n    getUsers\r\n} from '../api';\r\nimport '../style/Comments.css'; // Assuming you have a CSS file for styling\r\n\r\nconst Comment = ({ taskId, username }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState({ content: '', author: null, timestamp: null });\r\n    const [error, setError] = useState('');\r\n    const [authorUsername, setAuthorUsername] = useState(null);\r\n\r\n    const fetchComments = useCallback(async () => {\r\n        try {\r\n            const response = await getTaskComments(taskId);\r\n            setComments(response.data || []);\r\n        } catch (error) {\r\n            console.error('There was an error fetching the comments!', error);\r\n        }\r\n    }, [taskId]);\r\n\r\n    const fetchUserUsername = useCallback(async () => {\r\n        try {\r\n            const response = await getUser(username);\r\n            setAuthorUsername(response.data.username); // Ensure authorUsername is the username\r\n        } catch (error) {\r\n            console.error('There was an error fetching the user username!', error);\r\n        }\r\n    }, [username]);\r\n\r\n    useEffect(() => {\r\n        fetchComments();\r\n        fetchUserUsername();\r\n    }, [fetchComments, fetchUserUsername]);\r\n\r\n    const handleCreateComment = async () => {\r\n        if (!newComment.content.trim()) {\r\n            setError('Content is mandatory.');\r\n            return;\r\n        }\r\n\r\n        if (!taskId) {\r\n            setError('Task ID is mandatory.');\r\n            return;\r\n        }\r\n\r\n        if (!authorUsername) {\r\n            setError('Author is mandatory.');\r\n            return;\r\n        }\r\n\r\n        const now = new Date();\r\n        const commentToCreate = {\r\n            taskId: taskId,\r\n            content: newComment.content,\r\n            author: authorUsername,\r\n            timestamp: [\r\n                now.getUTCFullYear(),\r\n                now.getUTCMonth() + 1, // Months are zero-based in JavaScript\r\n                now.getUTCDate(),\r\n                now.getUTCHours(),\r\n                now.getUTCMinutes(),\r\n                now.getUTCSeconds(),\r\n                now.getUTCMilliseconds() * 1000 // Convert milliseconds to nanoseconds\r\n            ]\r\n        };\r\n\r\n        try {\r\n            const response = await addTaskComment(taskId, commentToCreate);\r\n            setComments([...comments, response.data]);\r\n            setNewComment({ content: '', author: null, timestamp: null });\r\n            setError('');\r\n        } catch (error) {\r\n            console.error('There was an error creating the comment!', error);\r\n            console.error(error.response.data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"comment-container\">\r\n            <h2>Comments</h2>\r\n            <div className=\"new-comment\">\r\n                <label htmlFor=\"new-comment-content\">New Comment</label>\r\n                <textarea\r\n                    id=\"new-comment-content\"\r\n                    value={newComment.content}\r\n                    onChange={(e) => setNewComment({ ...newComment, content: e.target.value })}\r\n                    placeholder=\"New Comment\"\r\n                />\r\n                <button onClick={handleCreateComment}>Add Comment</button>\r\n                {error && <p className=\"error\">{error}</p>}\r\n            </div>\r\n            <ul className=\"comments-list\">\r\n                {comments.map(comment => (\r\n                    <li key={comment.id} className=\"comment-item\">\r\n                        <CommentAuthor authorUsername={comment.author} />\r\n                        <span className=\"comment-content\">{comment.content}</span>\r\n                        <span className=\"comment-timestamp\">\r\n                            {new Date(Date.UTC(reminder.reminderTime[0], reminder.reminderTime[1] - 1, reminder.reminderTime[2], reminder.reminderTime[3], reminder.reminderTime[4])).toLocaleString('en-US', {\r\n                                year: 'numeric',\r\n                                day: 'numeric',\r\n                                month: 'long',\r\n                                hour: 'numeric',\r\n                                minute: 'numeric'\r\n                            })}\r\n                        </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CommentAuthor = ({ authorUsername }) => {\r\n    const [username, setUsername] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchUsername = async () => {\r\n            try {\r\n                const response = await getUsers();\r\n                for (let i = 0; i < response.data.length; i++) {\r\n                    if (response.data[i].username === authorUsername) {\r\n                        setUsername(response.data[i].username);\r\n                        console.log('Username:', response.data[i].username);\r\n                        break;\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('There was an error fetching the username!', error);\r\n            }\r\n        };\r\n\r\n        fetchUsername();\r\n    }, [authorUsername]);\r\n    console.log('Username:', username);\r\n    return <span className=\"comment-author\">{username}</span>;\r\n};\r\n\r\nexport default Comment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}