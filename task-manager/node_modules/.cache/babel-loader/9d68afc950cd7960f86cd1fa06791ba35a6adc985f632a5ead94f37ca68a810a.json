{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getCategory, createTask, getTasks, updateTask, deleteTask, getCategories, getUsers, getUser, shareTask, getUserTaskSummary } from '../api';\nimport Comment from './Comments';\nimport Reminder from './Reminders';\nimport '../style/Tasks.css'; // Assuming you have a CSS file for styling\nimport { useAuth } from '../context/AuthContext';\nimport AsyncSelect from 'react-select/async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const {\n    currentUsername\n  } = useAuth();\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    categoryId: '',\n    dueDate: '',\n    priority: 'LOW',\n    owner: '',\n    assignees: [],\n    status: 'PENDING'\n  });\n  const [editingTask, setEditingTask] = useState(null);\n  const [selectedTaskForComments, setSelectedTaskForComments] = useState(null);\n  const [selectedTaskForReminders, setSelectedTaskForReminders] = useState(null);\n  const [userTaskSummary, setUserTaskSummary] = useState(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await getUser(currentUsername);\n        setUser(response.data);\n      } catch (error) {\n        console.error('There was an error fetching the user!', error);\n      }\n    };\n    if (currentUsername) {\n      fetchUser();\n    }\n  }, [currentUsername]);\n  useEffect(() => {\n    fetchTasks();\n    fetchCategories();\n    fetchUsers();\n    if (user) {\n      setNewTask(prevTask => ({\n        ...prevTask,\n        owner: user.id\n      }));\n    }\n  }, [user]);\n  const fetchTasks = async () => {\n    try {\n      const response = await getTasks();\n      setTasks(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the tasks!', error);\n      setTasks([]);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await getCategories();\n      setCategories(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the categories!', error);\n      setCategories([]);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await getUsers();\n      setUsers(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the users!', error);\n      setUsers([]);\n    }\n  };\n  const loadOptions = async inputValue => {\n    try {\n      const response = await getUsers();\n      const filteredUsers = response.data.filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase())).map(user => ({\n        value: user.id,\n        label: user.username\n      }));\n      return filteredUsers;\n    } catch (error) {\n      console.error('There was an error loading the options!', error);\n      return [];\n    }\n  };\n  const isValidDate = dateString => {\n    const date = new Date(dateString);\n    return !isNaN(date.getTime());\n  };\n  const handleCreateTask = async () => {\n    try {\n      const categoryResponse = await getCategory(newTask.categoryId);\n      const category = categoryResponse.data;\n      const taskData = {\n        title: newTask.title,\n        description: newTask.description,\n        category: {\n          id: category.id,\n          name: category.name\n        },\n        dueDate: isValidDate(newTask.dueDate) ? new Date(newTask.dueDate).toISOString() : null,\n        priority: newTask.priority,\n        owner: newTask.owner,\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)),\n        status: newTask.status\n      };\n      const response = await createTask(taskData);\n      setTasks([...tasks, response.data]);\n      setNewTask({\n        title: '',\n        description: '',\n        categoryId: '',\n        dueDate: '',\n        priority: 'LOW',\n        owner: '',\n        assignees: [],\n        status: 'PENDING'\n      });\n    } catch (error) {\n      console.error('There was an error creating the task!', error);\n    }\n  };\n  const handleUpdateTask = async () => {\n    try {\n      const categoryResponse = await getCategory(editingTask.categoryId);\n      const category = categoryResponse.data;\n      const taskData = {\n        ...editingTask,\n        category: {\n          id: category.id,\n          name: category.name\n        },\n        dueDate: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString() : null,\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\n      };\n      const response = await updateTask(editingTask.id, taskData);\n      setTasks(tasks.map(task => task.id === editingTask.id ? response.data : task));\n      setEditingTask(null);\n    } catch (error) {\n      console.error('There was an error updating the task!', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId);\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('There was an error deleting the task!', error);\n    }\n  };\n  const handleShareTask = async taskId => {\n    try {\n      const recipientEmail = prompt('Enter recipient email to share with:');\n      if (!recipientEmail) {\n        console.error('Recipient email is required!');\n        return;\n      }\n      const recipient = users.find(user => user.email === recipientEmail);\n      if (!recipient) {\n        console.error('Recipient not found!');\n        return;\n      }\n      const shareTaskDTO = {\n        taskId,\n        recipientId: recipient.id,\n        recipientEmail\n      };\n      await shareTask(taskId, shareTaskDTO);\n    } catch (error) {\n      console.error('There was an error sharing the task!', error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const taskToUpdate = tasks.find(task => task.id === taskId);\n      if (taskToUpdate) {\n        const updatedTask = {\n          ...taskToUpdate,\n          status: 'COMPLETED'\n        };\n        await updateTask(taskId, updatedTask);\n        setTasks(tasks.map(task => task.id === taskId ? updatedTask : task));\n      }\n    } catch (error) {\n      console.error('There was an error updating the task status!', error);\n    }\n  };\n  const handleInProgressTask = async taskId => {\n    try {\n      const taskToUpdate = tasks.find(task => task.id === taskId);\n      if (taskToUpdate) {\n        const updatedTask = {\n          ...taskToUpdate,\n          status: 'IN_PROGRESS'\n        };\n        await updateTask(taskId, updatedTask);\n        setTasks(tasks.map(task => task.id === taskId ? updatedTask : task));\n      }\n    } catch (error) {\n      console.error('There was an error updating the task status!', error);\n    }\n  };\n  const handlePendingTask = async taskId => {\n    try {\n      const taskToUpdate = tasks.find(task => task.id === taskId);\n      if (taskToUpdate) {\n        const updatedTask = {\n          ...taskToUpdate,\n          status: 'PENDING'\n        };\n        await updateTask(taskId, updatedTask);\n        setTasks(tasks.map(task => task.id === taskId ? updatedTask : task));\n      }\n    } catch (error) {\n      console.error('There was an error updating the task status!', error);\n    }\n  };\n  const handleViewUserTaskSummary = async userId => {\n    try {\n      const response = await getUserTaskSummary(userId);\n      setUserTaskSummary(response.data);\n    } catch (error) {\n      console.error('There was an error fetching the user task summary!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        }),\n        placeholder: \"New Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        }),\n        placeholder: \"New Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newTask.categoryId,\n        onChange: e => setNewTask({\n          ...newTask,\n          categoryId: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: newTask.dueDate,\n        onChange: e => setNewTask({\n          ...newTask,\n          dueDate: e.target.value\n        }),\n        placeholder: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newTask.priority,\n        onChange: e => setNewTask({\n          ...newTask,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOW\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEDIUM\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HIGH\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        onChange: selectedOptions => setNewTask({\n          ...newTask,\n          assignees: selectedOptions.map(option => option.value)\n        }),\n        placeholder: \"Select Assignees\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateTask,\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"View User Task Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        onChange: selectedOption => {\n          setSelectedUserForSummary(selectedOption.value);\n          handleViewUserTaskSummary(selectedOption.value);\n        },\n        placeholder: \"Select User\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), userTaskSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Task Summary for \", userTaskSummary.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Owned Tasks: \", userTaskSummary.ownedTasks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Assigned Tasks: \", userTaskSummary.assignedTasks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tasks-list\",\n      children: Array.isArray(tasks) && tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" - \", task.description, \" - \", task.status, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => setEditingTask(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => handleDeleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"share\",\n            onClick: () => handleShareTask(task.id, {\n              username: prompt('Enter username to share with:')\n            }),\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pending\",\n            onClick: () => handlePendingTask(task.id),\n            disabled: task.status === 'PENDING',\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"in-progress\",\n            onClick: () => handleInProgressTask(task.id),\n            disabled: task.status === 'IN_PROGRESS',\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"complete\",\n            onClick: () => handleCompleteTask(task.id),\n            disabled: task.status === 'COMPLETED',\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comments\",\n            onClick: () => {\n              if (selectedTaskForComments === task.id) {\n                setSelectedTaskForComments(null);\n              } else {\n                setSelectedTaskForComments(task.id);\n                setSelectedTaskForReminders(null);\n              }\n            },\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reminders\",\n            onClick: () => {\n              if (selectedTaskForReminders === task.id) {\n                setSelectedTaskForReminders(null);\n              } else {\n                setSelectedTaskForReminders(task.id);\n                setSelectedTaskForComments(null);\n              }\n            },\n            children: \"Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.title,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          title: e.target.value\n        }),\n        placeholder: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.description,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          description: e.target.value\n        }),\n        placeholder: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.categoryId,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          categoryId: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString().slice(0, 16) : '',\n        onChange: e => setEditingTask({\n          ...editingTask,\n          dueDate: e.target.value\n        }),\n        placeholder: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.priority,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOW\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEDIUM\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HIGH\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        defaultValue: editingTask.assignees.map(assignee => {\n          var _users$find;\n          return {\n            value: assignee,\n            label: (_users$find = users.find(user => user.id === assignee)) === null || _users$find === void 0 ? void 0 : _users$find.username\n          };\n        }),\n        onChange: selectedOptions => setEditingTask({\n          ...editingTask,\n          assignees: selectedOptions.map(option => option.value)\n        }),\n        placeholder: \"Select Assignees\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateTask,\n        children: \"Update Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel\",\n        onClick: () => setEditingTask(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this), selectedTaskForComments && /*#__PURE__*/_jsxDEV(Comment, {\n      taskId: selectedTaskForComments,\n      username: currentUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this), selectedTaskForReminders && /*#__PURE__*/_jsxDEV(Reminder, {\n      taskId: selectedTaskForReminders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"DttO8T8nEltsj37ZsYHQZdCmv8Q=\", false, function () {\n  return [useAuth];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","getCategory","createTask","getTasks","updateTask","deleteTask","getCategories","getUsers","getUser","shareTask","getUserTaskSummary","Comment","Reminder","useAuth","AsyncSelect","jsxDEV","_jsxDEV","Tasks","_s","currentUsername","user","setUser","tasks","setTasks","categories","setCategories","users","setUsers","newTask","setNewTask","title","description","categoryId","dueDate","priority","owner","assignees","status","editingTask","setEditingTask","selectedTaskForComments","setSelectedTaskForComments","selectedTaskForReminders","setSelectedTaskForReminders","userTaskSummary","setUserTaskSummary","fetchUser","response","data","error","console","fetchTasks","fetchCategories","fetchUsers","prevTask","id","Array","isArray","loadOptions","inputValue","filteredUsers","filter","username","toLowerCase","includes","map","value","label","isValidDate","dateString","date","Date","isNaN","getTime","handleCreateTask","categoryResponse","category","taskData","name","toISOString","assignee","parseInt","handleUpdateTask","task","handleDeleteTask","taskId","handleShareTask","recipientEmail","prompt","recipient","find","email","shareTaskDTO","recipientId","handleCompleteTask","taskToUpdate","updatedTask","handleInProgressTask","handlePendingTask","handleViewUserTaskSummary","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","isMulti","cacheOptions","selectedOptions","option","onClick","selectedOption","setSelectedUserForSummary","ownedTasks","length","assignedTasks","disabled","slice","defaultValue","_users$find","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Tasks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  getCategory,\r\n  createTask,\r\n  getTasks,\r\n  updateTask,\r\n  deleteTask,\r\n  getCategories,\r\n  getUsers,\r\n  getUser,\r\n  shareTask,\r\n  getUserTaskSummary\r\n} from '../api';\r\nimport Comment from './Comments';\r\nimport Reminder from './Reminders';\r\nimport '../style/Tasks.css'; // Assuming you have a CSS file for styling\r\nimport { useAuth } from '../context/AuthContext';\r\nimport AsyncSelect from 'react-select/async';\r\n\r\nconst Tasks = () => {\r\n  const { currentUsername } = useAuth();\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [newTask, setNewTask] = useState({ title: '', description: '', categoryId: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [selectedTaskForComments, setSelectedTaskForComments] = useState(null);\r\n  const [selectedTaskForReminders, setSelectedTaskForReminders] = useState(null);\r\n  const [userTaskSummary, setUserTaskSummary] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await getUser(currentUsername);\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        console.error('There was an error fetching the user!', error);\r\n      }\r\n    };\r\n\r\n    if (currentUsername) {\r\n      fetchUser();\r\n    }\r\n  }, [currentUsername]);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchCategories();\r\n    fetchUsers();\r\n    if (user) {\r\n      setNewTask(prevTask => ({ ...prevTask, owner: user.id }));\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await getTasks();\r\n      setTasks(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the tasks!', error);\r\n      setTasks([]);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await getCategories();\r\n      setCategories(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the categories!', error);\r\n      setCategories([]);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await getUsers();\r\n      setUsers(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the users!', error);\r\n      setUsers([]);\r\n    }\r\n  };\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    try {\r\n      const response = await getUsers();\r\n      const filteredUsers = response.data\r\n        .filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase()))\r\n        .map(user => ({ value: user.id, label: user.username }));\r\n      return filteredUsers;\r\n    } catch (error) {\r\n      console.error('There was an error loading the options!', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const isValidDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return !isNaN(date.getTime());\r\n  };\r\n\r\n  const handleCreateTask = async () => {\r\n    try {\r\n      const categoryResponse = await getCategory(newTask.categoryId);\r\n      const category = categoryResponse.data;\r\n\r\n      const taskData = {\r\n        title: newTask.title,\r\n        description: newTask.description,\r\n        category: { id: category.id, name: category.name },\r\n        dueDate: isValidDate(newTask.dueDate) ? new Date(newTask.dueDate).toISOString() : null,\r\n        priority: newTask.priority,\r\n        owner: newTask.owner,\r\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)),\r\n        status: newTask.status\r\n      };\r\n\r\n      const response = await createTask(taskData);\r\n      setTasks([...tasks, response.data]);\r\n      setNewTask({ title: '', description: '', categoryId: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n    } catch (error) {\r\n      console.error('There was an error creating the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateTask = async () => {\r\n    try {\r\n      const categoryResponse = await getCategory(editingTask.categoryId);\r\n      const category = categoryResponse.data;\r\n\r\n      const taskData = {\r\n        ...editingTask,\r\n        category: { id: category.id, name: category.name },\r\n        dueDate: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString() : null,\r\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\r\n      };\r\n\r\n      const response = await updateTask(editingTask.id, taskData);\r\n      setTasks(tasks.map(task => (task.id === editingTask.id ? response.data : task)));\r\n      setEditingTask(null);\r\n    } catch (error) {\r\n      console.error('There was an error updating the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    try {\r\n      await deleteTask(taskId);\r\n      setTasks(tasks.filter(task => task.id !== taskId));\r\n    } catch (error) {\r\n      console.error('There was an error deleting the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleShareTask = async (taskId) => {\r\n    try {\r\n      const recipientEmail = prompt('Enter recipient email to share with:');\r\n      if (!recipientEmail) {\r\n        console.error('Recipient email is required!');\r\n        return;\r\n      }\r\n  \r\n      const recipient = users.find(user => user.email === recipientEmail);\r\n      if (!recipient) {\r\n        console.error('Recipient not found!');\r\n        return;\r\n      }\r\n  \r\n      const shareTaskDTO = {\r\n        taskId,\r\n        recipientId: recipient.id,\r\n        recipientEmail\r\n      };\r\n  \r\n      await shareTask(taskId, shareTaskDTO);\r\n    } catch (error) {\r\n      console.error('There was an error sharing the task!', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleCompleteTask = async (taskId) => {\r\n    try {\r\n      const taskToUpdate = tasks.find(task => task.id === taskId);\r\n      if (taskToUpdate) {\r\n        const updatedTask = { ...taskToUpdate, status: 'COMPLETED' };\r\n        await updateTask(taskId, updatedTask);\r\n        setTasks(tasks.map(task => (task.id === taskId ? updatedTask : task)));\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error updating the task status!', error);\r\n    }\r\n  };\r\n\r\n  const handleInProgressTask = async (taskId) => {\r\n    try {\r\n      const taskToUpdate = tasks.find(task => task.id === taskId);\r\n      if (taskToUpdate) {\r\n        const updatedTask = { ...taskToUpdate, status: 'IN_PROGRESS' };\r\n        await updateTask(taskId, updatedTask);\r\n        setTasks(tasks.map(task => (task.id === taskId ? updatedTask : task)));\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error updating the task status!', error);\r\n    }\r\n  };\r\n\r\n  const handlePendingTask = async (taskId) => {\r\n    try {\r\n      const taskToUpdate = tasks.find(task => task.id === taskId);\r\n      if (taskToUpdate) {\r\n        const updatedTask = { ...taskToUpdate, status: 'PENDING' };\r\n        await updateTask(taskId, updatedTask);\r\n        setTasks(tasks.map(task => (task.id === taskId ? updatedTask : task)));\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error updating the task status!', error);\r\n    }\r\n  };\r\n\r\n  const handleViewUserTaskSummary = async (userId) => {\r\n    try {\r\n      const response = await getUserTaskSummary(userId);\r\n      setUserTaskSummary(response.data);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the user task summary!', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks-container\">\r\n      <h2>Tasks</h2>\r\n      <div className=\"task-inputs\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.title}\r\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n          placeholder=\"New Task Title\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.description}\r\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n          placeholder=\"New Task Description\"\r\n        />\r\n        <select\r\n          value={newTask.categoryId}\r\n          onChange={(e) => setNewTask({ ...newTask, categoryId: e.target.value })}\r\n        >\r\n          <option value=\"\">Select Category</option>\r\n          {Array.isArray(categories) && categories.map(category => (\r\n            <option key={category.id} value={category.id}>\r\n              {category.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={newTask.dueDate}\r\n          onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })}\r\n          placeholder=\"Due Date\"\r\n        />\r\n        <select\r\n          value={newTask.priority}\r\n          onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}\r\n        >\r\n          <option value=\"LOW\">Low</option>\r\n          <option value=\"MEDIUM\">Medium</option>\r\n          <option value=\"HIGH\">High</option>\r\n        </select>\r\n        <AsyncSelect\r\n          isMulti\r\n          cacheOptions\r\n          loadOptions={loadOptions}\r\n          onChange={(selectedOptions) => setNewTask({ ...newTask, assignees: selectedOptions.map(option => option.value) })}\r\n          placeholder=\"Select Assignees\"\r\n          className=\"async-select\"\r\n        />\r\n        <button onClick={handleCreateTask}>Create Task</button>\r\n      </div>\r\n      <div className=\"user-summary\">\r\n        <h3>View User Task Summary</h3>\r\n        <AsyncSelect\r\n          cacheOptions\r\n          loadOptions={loadOptions}\r\n          onChange={(selectedOption) => {\r\n            setSelectedUserForSummary(selectedOption.value);\r\n            handleViewUserTaskSummary(selectedOption.value);\r\n          }}\r\n          placeholder=\"Select User\"\r\n          className=\"async-select\"\r\n        />\r\n        {userTaskSummary && (\r\n          <div className=\"task-summary\">\r\n            <h4>Task Summary for {userTaskSummary.username}</h4>\r\n            <p>Owned Tasks: {userTaskSummary.ownedTasks.length}</p>\r\n            <p>Assigned Tasks: {userTaskSummary.assignedTasks.length}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <ul className=\"tasks-list\">\r\n        {Array.isArray(tasks) && tasks.map(task => (\r\n          <li key={task.id}>\r\n            {task.title} - {task.description} - {task.status}\r\n            <div>\r\n              <button className=\"edit\" onClick={() => setEditingTask(task)}>Edit</button>\r\n              <button className=\"delete\" onClick={() => handleDeleteTask(task.id)}>Delete</button>\r\n              <button className=\"share\" onClick={() => handleShareTask(task.id, { username: prompt('Enter username to share with:') })}>Share</button>\r\n              <button className=\"pending\" onClick={() => handlePendingTask(task.id)} disabled={task.status === 'PENDING'}>Pending</button>\r\n              <button className=\"in-progress\" onClick={() => handleInProgressTask(task.id)} disabled={task.status === 'IN_PROGRESS'}>In Progress</button>\r\n              <button className=\"complete\" onClick={() => handleCompleteTask(task.id)} disabled={task.status === 'COMPLETED'}>Complete</button>\r\n              <button className=\"comments\" onClick={() => {\r\n                if (selectedTaskForComments === task.id) {\r\n                  setSelectedTaskForComments(null);\r\n                } else {\r\n                  setSelectedTaskForComments(task.id);\r\n                  setSelectedTaskForReminders(null);\r\n                }\r\n              }}>Comments</button>\r\n              <button className=\"reminders\" onClick={() => {\r\n                if (selectedTaskForReminders === task.id) {\r\n                  setSelectedTaskForReminders(null);\r\n                } else {\r\n                  setSelectedTaskForReminders(task.id);\r\n                  setSelectedTaskForComments(null);\r\n                }\r\n              }}>Reminders</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {editingTask && (\r\n        <div className=\"edit-task-container\">\r\n          <h3>Edit Task</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.title}\r\n            onChange={(e) => setEditingTask({ ...editingTask, title: e.target.value })}\r\n            placeholder=\"Task Title\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.description}\r\n            onChange={(e) => setEditingTask({ ...editingTask, description: e.target.value })}\r\n            placeholder=\"Task Description\"\r\n          />\r\n          <select\r\n            value={editingTask.categoryId}\r\n            onChange={(e) => setEditingTask({ ...editingTask, categoryId: e.target.value })}\r\n          >\r\n            <option value=\"\">Select Category</option>\r\n            {Array.isArray(categories) && categories.map(category => (\r\n              <option key={category.id} value={category.id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setEditingTask({ ...editingTask, dueDate: e.target.value })}\r\n            placeholder=\"Due Date\"\r\n          />\r\n          <select\r\n            value={editingTask.priority}\r\n            onChange={(e) => setEditingTask({ ...editingTask, priority: e.target.value })}\r\n          >\r\n            <option value=\"LOW\">Low</option>\r\n            <option value=\"MEDIUM\">Medium</option>\r\n            <option value=\"HIGH\">High</option>\r\n          </select>\r\n          <AsyncSelect\r\n            isMulti\r\n            cacheOptions\r\n            loadOptions={loadOptions}\r\n            defaultValue={editingTask.assignees.map(assignee => ({ value: assignee, label: users.find(user => user.id === assignee)?.username }))}\r\n            onChange={(selectedOptions) => setEditingTask({ ...editingTask, assignees: selectedOptions.map(option => option.value) })}\r\n            placeholder=\"Select Assignees\"\r\n            className=\"async-select\"\r\n          />\r\n          <button onClick={handleUpdateTask}>Update Task</button>\r\n          <button className=\"cancel\" onClick={() => setEditingTask(null)}>Cancel</button>\r\n        </div>\r\n      )}\r\n      {selectedTaskForComments && (\r\n        <Comment taskId={selectedTaskForComments} username={currentUsername} />\r\n      )}\r\n      {selectedTaskForReminders && (\r\n        <Reminder taskId={selectedTaskForReminders} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}