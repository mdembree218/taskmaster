{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getCategory, createTask, getTasks, updateTask, deleteTask, completeTask, getCategories, getUsers, getUser } from '../api';\nimport Comment from './Comments';\nimport Reminder from './Reminders';\nimport './Tasks.css'; // Assuming you have a CSS file for styling\nimport { useAuth } from '../context/AuthContext';\nimport AsyncSelect from 'react-select/async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const {\n    currentUsername\n  } = useAuth();\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    categoryId: '',\n    dueDate: '',\n    priority: 'LOW',\n    owner: '',\n    assignees: [],\n    status: 'PENDING'\n  });\n  const [editingTask, setEditingTask] = useState(null);\n  const [selectedTaskForComments, setSelectedTaskForComments] = useState(null);\n  const [selectedTaskForReminders, setSelectedTaskForReminders] = useState(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await getUser(currentUsername);\n        setUser(response.data);\n      } catch (error) {\n        console.error('There was an error fetching the user!', error);\n      }\n    };\n    if (currentUsername) {\n      fetchUser();\n    }\n  }, [currentUsername]);\n  useEffect(() => {\n    fetchTasks();\n    fetchCategories();\n    fetchUsers();\n    if (user) {\n      setNewTask(prevTask => ({\n        ...prevTask,\n        owner: user.id\n      }));\n    }\n  }, [user]);\n  const fetchTasks = async () => {\n    try {\n      const response = await getTasks();\n      setTasks(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the tasks!', error);\n      setTasks([]);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await getCategories();\n      setCategories(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the categories!', error);\n      setCategories([]);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await getUsers();\n      setUsers(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the users!', error);\n      setUsers([]);\n    }\n  };\n  const loadOptions = async inputValue => {\n    try {\n      const response = await getUsers();\n      const filteredUsers = response.data.filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase())).map(user => ({\n        value: user.id,\n        label: user.username\n      }));\n      return filteredUsers;\n    } catch (error) {\n      console.error('There was an error loading the options!', error);\n      return [];\n    }\n  };\n  const isValidDate = dateString => {\n    const date = new Date(dateString);\n    return !isNaN(date.getTime());\n  };\n  const handleCreateTask = async () => {\n    try {\n      const categoryResponse = await getCategory(newTask.categoryId);\n      const category = categoryResponse.data;\n      const taskData = {\n        title: newTask.title,\n        description: newTask.description,\n        category: {\n          id: category.id,\n          name: category.name\n        },\n        dueDate: isValidDate(newTask.dueDate) ? new Date(newTask.dueDate).toISOString() : null,\n        priority: newTask.priority,\n        owner: newTask.owner,\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)),\n        status: newTask.status\n      };\n      const response = await createTask(taskData);\n      setTasks([...tasks, response.data]);\n      setNewTask({\n        title: '',\n        description: '',\n        categoryId: '',\n        dueDate: '',\n        priority: 'LOW',\n        owner: '',\n        assignees: [],\n        status: 'PENDING'\n      });\n    } catch (error) {\n      console.error('There was an error creating the task!', error);\n    }\n  };\n  const handleUpdateTask = async () => {\n    try {\n      const categoryResponse = await getCategory(editingTask.categoryId);\n      const category = categoryResponse.data;\n      const taskData = {\n        ...editingTask,\n        category: {\n          id: category.id,\n          name: category.name\n        },\n        dueDate: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString() : null,\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\n      };\n      const response = await updateTask(editingTask.id, taskData);\n      setTasks(tasks.map(task => task.id === editingTask.id ? response.data : task));\n      setEditingTask(null);\n    } catch (error) {\n      console.error('There was an error updating the task!', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId);\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('There was an error deleting the task!', error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      await updateTask(taskId, {\n        status: 'COMPLETED'\n      });\n      setTasks(tasks.map(task => task.id === taskId ? {\n        ...task,\n        status: 'COMPLETED'\n      } : task));\n    } catch (error) {\n      console.error('There was an error updating the task status!', error);\n    }\n  };\n  const handleInProgressTask = async taskId => {\n    try {\n      await updateTask(taskId, {\n        status: 'IN_PROGRESS'\n      });\n      setTasks(tasks.map(task => task.id === taskId ? {\n        ...task,\n        status: 'IN_PROGRESS'\n      } : task));\n    } catch (error) {\n      console.error('There was an error updating the task status!', error);\n    }\n  };\n  const handlePendingTask = async taskId => {\n    try {\n      await updateTask(taskId, {\n        status: 'PENDING'\n      });\n      setTasks(tasks.map(task => task.id === taskId ? {\n        ...task,\n        status: 'PENDING'\n      } : task));\n    } catch (error) {\n      console.error('There was an error updating the task status!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        }),\n        placeholder: \"New Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        }),\n        placeholder: \"New Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newTask.categoryId,\n        onChange: e => setNewTask({\n          ...newTask,\n          categoryId: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: newTask.dueDate,\n        onChange: e => setNewTask({\n          ...newTask,\n          dueDate: e.target.value\n        }),\n        placeholder: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newTask.priority,\n        onChange: e => setNewTask({\n          ...newTask,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOW\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEDIUM\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HIGH\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        onChange: selectedOptions => setNewTask({\n          ...newTask,\n          assignees: selectedOptions.map(option => option.value)\n        }),\n        placeholder: \"Select Assignees\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateTask,\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tasks-list\",\n      children: Array.isArray(tasks) && tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" - \", task.description, \" - \", task.status, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => setEditingTask(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => handleDeleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pending\",\n            onClick: () => handlePendingTask(task.id),\n            disabled: task.status === 'PENDING',\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"in-progress\",\n            onClick: () => handleInProgressTask(task.id),\n            disabled: task.status === 'IN_PROGRESS',\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"complete\",\n            onClick: () => handleCompleteTask(task.id),\n            disabled: task.status === 'COMPLETED',\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comments\",\n            onClick: () => {\n              if (selectedTaskForComments === task.id) {\n                setSelectedTaskForComments(null);\n              } else {\n                setSelectedTaskForComments(task.id);\n                setSelectedTaskForReminders(null);\n              }\n            },\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reminders\",\n            onClick: () => {\n              if (selectedTaskForReminders === task.id) {\n                setSelectedTaskForReminders(null);\n              } else {\n                setSelectedTaskForReminders(task.id);\n                setSelectedTaskForComments(null);\n              }\n            },\n            children: \"Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.title,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          title: e.target.value\n        }),\n        placeholder: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.description,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          description: e.target.value\n        }),\n        placeholder: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.categoryId,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          categoryId: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString().slice(0, 16) : '',\n        onChange: e => setEditingTask({\n          ...editingTask,\n          dueDate: e.target.value\n        }),\n        placeholder: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.priority,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOW\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEDIUM\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HIGH\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        defaultValue: editingTask.assignees.map(assignee => {\n          var _users$find;\n          return {\n            value: assignee,\n            label: (_users$find = users.find(user => user.id === assignee)) === null || _users$find === void 0 ? void 0 : _users$find.username\n          };\n        }),\n        onChange: selectedOptions => setEditingTask({\n          ...editingTask,\n          assignees: selectedOptions.map(option => option.value)\n        }),\n        placeholder: \"Select Assignees\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateTask,\n        children: \"Update Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel\",\n        onClick: () => setEditingTask(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), selectedTaskForComments && /*#__PURE__*/_jsxDEV(Comment, {\n      taskId: selectedTaskForComments,\n      username: currentUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }, this), selectedTaskForReminders && /*#__PURE__*/_jsxDEV(Reminder, {\n      taskId: selectedTaskForReminders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"4Tu2agtjzqrXSZGWmTdF8Oq9rrw=\", false, function () {\n  return [useAuth];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","getCategory","createTask","getTasks","updateTask","deleteTask","completeTask","getCategories","getUsers","getUser","Comment","Reminder","useAuth","AsyncSelect","jsxDEV","_jsxDEV","Tasks","_s","currentUsername","user","setUser","tasks","setTasks","categories","setCategories","users","setUsers","newTask","setNewTask","title","description","categoryId","dueDate","priority","owner","assignees","status","editingTask","setEditingTask","selectedTaskForComments","setSelectedTaskForComments","selectedTaskForReminders","setSelectedTaskForReminders","fetchUser","response","data","error","console","fetchTasks","fetchCategories","fetchUsers","prevTask","id","Array","isArray","loadOptions","inputValue","filteredUsers","filter","username","toLowerCase","includes","map","value","label","isValidDate","dateString","date","Date","isNaN","getTime","handleCreateTask","categoryResponse","category","taskData","name","toISOString","assignee","parseInt","handleUpdateTask","task","handleDeleteTask","taskId","handleCompleteTask","handleInProgressTask","handlePendingTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","isMulti","cacheOptions","selectedOptions","option","onClick","disabled","slice","defaultValue","_users$find","find","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Tasks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  getCategory,\r\n  createTask,\r\n  getTasks,\r\n  updateTask,\r\n  deleteTask,\r\n  completeTask,\r\n  getCategories,\r\n  getUsers,\r\n  getUser\r\n} from '../api';\r\nimport Comment from './Comments';\r\nimport Reminder from './Reminders';\r\nimport './Tasks.css'; // Assuming you have a CSS file for styling\r\nimport { useAuth } from '../context/AuthContext';\r\nimport AsyncSelect from 'react-select/async';\r\n\r\nconst Tasks = () => {\r\n  const { currentUsername } = useAuth();\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [newTask, setNewTask] = useState({ title: '', description: '', categoryId: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [selectedTaskForComments, setSelectedTaskForComments] = useState(null);\r\n  const [selectedTaskForReminders, setSelectedTaskForReminders] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await getUser(currentUsername);\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        console.error('There was an error fetching the user!', error);\r\n      }\r\n    };\r\n\r\n    if (currentUsername) {\r\n      fetchUser();\r\n    }\r\n  }, [currentUsername]);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchCategories();\r\n    fetchUsers();\r\n    if (user) {\r\n      setNewTask(prevTask => ({ ...prevTask, owner: user.id }));\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await getTasks();\r\n      setTasks(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the tasks!', error);\r\n      setTasks([]);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await getCategories();\r\n      setCategories(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the categories!', error);\r\n      setCategories([]);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await getUsers();\r\n      setUsers(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the users!', error);\r\n      setUsers([]);\r\n    }\r\n  };\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    try {\r\n      const response = await getUsers();\r\n      const filteredUsers = response.data\r\n        .filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase()))\r\n        .map(user => ({ value: user.id, label: user.username }));\r\n      return filteredUsers;\r\n    } catch (error) {\r\n      console.error('There was an error loading the options!', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const isValidDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return !isNaN(date.getTime());\r\n  };\r\n\r\n  const handleCreateTask = async () => {\r\n    try {\r\n      const categoryResponse = await getCategory(newTask.categoryId);\r\n      const category = categoryResponse.data;\r\n\r\n      const taskData = {\r\n        title: newTask.title,\r\n        description: newTask.description,\r\n        category: { id: category.id, name: category.name },\r\n        dueDate: isValidDate(newTask.dueDate) ? new Date(newTask.dueDate).toISOString() : null,\r\n        priority: newTask.priority,\r\n        owner: newTask.owner,\r\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)),\r\n        status: newTask.status\r\n      };\r\n\r\n      const response = await createTask(taskData);\r\n      setTasks([...tasks, response.data]);\r\n      setNewTask({ title: '', description: '', categoryId: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n    } catch (error) {\r\n      console.error('There was an error creating the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateTask = async () => {\r\n    try {\r\n      const categoryResponse = await getCategory(editingTask.categoryId);\r\n      const category = categoryResponse.data;\r\n\r\n      const taskData = {\r\n        ...editingTask,\r\n        category: { id: category.id, name: category.name },\r\n        dueDate: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString() : null,\r\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\r\n      };\r\n\r\n      const response = await updateTask(editingTask.id, taskData);\r\n      setTasks(tasks.map(task => (task.id === editingTask.id ? response.data : task)));\r\n      setEditingTask(null);\r\n    } catch (error) {\r\n      console.error('There was an error updating the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    try {\r\n      await deleteTask(taskId);\r\n      setTasks(tasks.filter(task => task.id !== taskId));\r\n    } catch (error) {\r\n      console.error('There was an error deleting the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleCompleteTask = async (taskId) => {\r\n    try {\r\n      await updateTask(taskId, { status: 'COMPLETED' });\r\n      setTasks(tasks.map(task => (task.id === taskId ? { ...task, status: 'COMPLETED' } : task)));\r\n    } catch (error) {\r\n      console.error('There was an error updating the task status!', error);\r\n    }\r\n  };\r\n\r\n  const handleInProgressTask = async (taskId) => {\r\n    try {\r\n      await updateTask(taskId, { status: 'IN_PROGRESS' });\r\n      setTasks(tasks.map(task => (task.id === taskId ? { ...task, status: 'IN_PROGRESS' } : task)));\r\n    } catch (error) {\r\n      console.error('There was an error updating the task status!', error);\r\n    }\r\n  };\r\n\r\n  const handlePendingTask = async (taskId) => {\r\n    try {\r\n      await updateTask(taskId, { status: 'PENDING' });\r\n      setTasks(tasks.map(task => (task.id === taskId ? { ...task, status: 'PENDING' } : task)));\r\n    } catch (error) {\r\n      console.error('There was an error updating the task status!', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks-container\">\r\n      <h2>Tasks</h2>\r\n      <div className=\"task-inputs\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.title}\r\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n          placeholder=\"New Task Title\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.description}\r\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n          placeholder=\"New Task Description\"\r\n        />\r\n        <select\r\n          value={newTask.categoryId}\r\n          onChange={(e) => setNewTask({ ...newTask, categoryId: e.target.value })}\r\n        >\r\n          <option value=\"\">Select Category</option>\r\n          {Array.isArray(categories) && categories.map(category => (\r\n            <option key={category.id} value={category.id}>\r\n              {category.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={newTask.dueDate}\r\n          onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })}\r\n          placeholder=\"Due Date\"\r\n        />\r\n        <select\r\n          value={newTask.priority}\r\n          onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}\r\n        >\r\n          <option value=\"LOW\">Low</option>\r\n          <option value=\"MEDIUM\">Medium</option>\r\n          <option value=\"HIGH\">High</option>\r\n        </select>\r\n        <AsyncSelect\r\n          isMulti\r\n          cacheOptions\r\n          loadOptions={loadOptions}\r\n          onChange={(selectedOptions) => setNewTask({ ...newTask, assignees: selectedOptions.map(option => option.value) })}\r\n          placeholder=\"Select Assignees\"\r\n          className=\"async-select\"\r\n        />\r\n        <button onClick={handleCreateTask}>Create Task</button>\r\n      </div>\r\n      <ul className=\"tasks-list\">\r\n        {Array.isArray(tasks) && tasks.map(task => (\r\n          <li key={task.id}>\r\n            {task.title} - {task.description} - {task.status}\r\n            <div>\r\n              <button className=\"edit\" onClick={() => setEditingTask(task)}>Edit</button>\r\n              <button className=\"delete\" onClick={() => handleDeleteTask(task.id)}>Delete</button>\r\n              <button className=\"pending\" onClick={() => handlePendingTask(task.id)} disabled={task.status === 'PENDING'}>Pending</button>\r\n              <button className=\"in-progress\" onClick={() => handleInProgressTask(task.id)} disabled={task.status === 'IN_PROGRESS'}>In Progress</button>\r\n              <button className=\"complete\" onClick={() => handleCompleteTask(task.id)} disabled={task.status === 'COMPLETED'}>Complete</button>\r\n              <button className=\"comments\" onClick={() => {\r\n                if (selectedTaskForComments === task.id) {\r\n                  setSelectedTaskForComments(null);\r\n                } else {\r\n                  setSelectedTaskForComments(task.id);\r\n                  setSelectedTaskForReminders(null);\r\n                }\r\n              }}>Comments</button>\r\n              <button className=\"reminders\" onClick={() => {\r\n                if (selectedTaskForReminders === task.id) {\r\n                  setSelectedTaskForReminders(null);\r\n                } else {\r\n                  setSelectedTaskForReminders(task.id);\r\n                  setSelectedTaskForComments(null);\r\n                }\r\n              }}>Reminders</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {editingTask && (\r\n        <div className=\"edit-task-container\">\r\n          <h3>Edit Task</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.title}\r\n            onChange={(e) => setEditingTask({ ...editingTask, title: e.target.value })}\r\n            placeholder=\"Task Title\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.description}\r\n            onChange={(e) => setEditingTask({ ...editingTask, description: e.target.value })}\r\n            placeholder=\"Task Description\"\r\n          />\r\n          <select\r\n            value={editingTask.categoryId}\r\n            onChange={(e) => setEditingTask({ ...editingTask, categoryId: e.target.value })}\r\n          >\r\n            <option value=\"\">Select Category</option>\r\n            {Array.isArray(categories) && categories.map(category => (\r\n              <option key={category.id} value={category.id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setEditingTask({ ...editingTask, dueDate: e.target.value })}\r\n            placeholder=\"Due Date\"\r\n          />\r\n          <select\r\n            value={editingTask.priority}\r\n            onChange={(e) => setEditingTask({ ...editingTask, priority: e.target.value })}\r\n          >\r\n            <option value=\"LOW\">Low</option>\r\n            <option value=\"MEDIUM\">Medium</option>\r\n            <option value=\"HIGH\">High</option>\r\n          </select>\r\n          <AsyncSelect\r\n            isMulti\r\n            cacheOptions\r\n            loadOptions={loadOptions}\r\n            defaultValue={editingTask.assignees.map(assignee => ({ value: assignee, label: users.find(user => user.id === assignee)?.username }))}\r\n            onChange={(selectedOptions) => setEditingTask({ ...editingTask, assignees: selectedOptions.map(option => option.value) })}\r\n            placeholder=\"Select Assignees\"\r\n            className=\"async-select\"\r\n          />\r\n          <button onClick={handleUpdateTask}>Update Task</button>\r\n          <button className=\"cancel\" onClick={() => setEditingTask(null)}>Cancel</button>\r\n        </div>\r\n      )}\r\n      {selectedTaskForComments && (\r\n        <Comment taskId={selectedTaskForComments} username={currentUsername} />\r\n      )}\r\n      {selectedTaskForReminders && (\r\n        <Reminder taskId={selectedTaskForReminders} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}