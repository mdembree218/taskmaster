{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Reminders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { getTask, getUsers, getTaskReminders, setTaskReminder, deleteTaskReminder, shareTask // Assuming you have an API function to share the task\n} from '../api';\nimport '../style/Reminders.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminder = ({\n  taskId\n}) => {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [newReminderTime, setNewReminderTime] = useState('');\n  const remindersRef = useRef(reminders);\n  useEffect(() => {\n    remindersRef.current = reminders;\n  }, [reminders]);\n  const fetchReminders = useCallback(async () => {\n    try {\n      const response = await getTaskReminders(taskId);\n      setReminders(response.data || []);\n    } catch (error) {\n      console.error('There was an error fetching the reminders!', error);\n    }\n  }, [taskId]);\n  useEffect(() => {\n    fetchReminders();\n  }, [fetchReminders]);\n  const handleDeleteReminder = useCallback(async reminderId => {\n    try {\n      await deleteTaskReminder(taskId, reminderId);\n      setReminders(reminders.filter(reminder => reminder.id !== reminderId));\n    } catch (error) {\n      console.error('There was an error deleting the reminder!', error);\n    }\n  }, [taskId, reminders]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      reminders.forEach(async reminder => {\n        const reminderDate = new Date(Date.UTC(reminder.reminderTime[0], reminder.reminderTime[1] - 1, reminder.reminderTime[2], reminder.reminderTime[3], reminder.reminderTime[4]));\n        if (reminderDate <= now) {\n          const task = (await getTask(taskId)).data;\n          console.log('Reminder triggered for task:', task);\n          for (const assignee of task.assignees) {\n            const users = (await getUsers()).data;\n            console.log('Users:', users);\n            const recipient = users.find(user => user.userId === assignee);\n            if (recipient.enableNotifications) {\n              handleShareTask(taskId, assignee, recipient.email);\n            }\n          }\n          // Optionally, you can delete the reminder after sharing the task\n          handleDeleteReminder(reminder.id);\n        }\n      });\n    }, 10000); // Check every minute\n\n    return () => clearInterval(interval);\n  }, [reminders, taskId, handleDeleteReminder]);\n  const handleShareTask = async (taskId, recipientId, recipientEmail) => {\n    try {\n      const taskInfo = (await getTask(taskId)).data.id;\n      const shareTaskDTO = {\n        taskId,\n        recipientId,\n        recipientEmail,\n        taskInfo\n      };\n      await shareTask(shareTaskDTO);\n      alert('Task shared successfully');\n    } catch (error) {\n      console.error('Error sharing task:', error);\n      alert('Failed to share task');\n    }\n  };\n  const handleCreateReminder = async () => {\n    try {\n      const reminderDate = new Date(newReminderTime);\n      const reminderToCreate = {\n        reminderTime: [reminderDate.getFullYear(), reminderDate.getMonth() + 1,\n        // Months are zero-based in JavaScript\n        reminderDate.getDate(), reminderDate.getHours(), reminderDate.getMinutes(), reminderDate.getSeconds(), reminderDate.getMilliseconds() * 1000 // Convert milliseconds to nanoseconds\n        ],\n        taskId\n      };\n      const response = await setTaskReminder(taskId, reminderToCreate);\n      setReminders([...reminders, response.data]);\n      setNewReminderTime('');\n    } catch (error) {\n      console.error('There was an error creating the reminder!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminder-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-reminder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-reminder-time\",\n        children: \"New Reminder Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"new-reminder-time\",\n        type: \"datetime-local\",\n        value: newReminderTime,\n        onChange: e => setNewReminderTime(e.target.value),\n        placeholder: \"New Reminder Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateReminder,\n        children: \"Create Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"reminders-list\",\n      children: reminders.map((reminder, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"reminder-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reminder-time\",\n          children: new Date(reminder.reminderTime).toLocaleString('en-US', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour12: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reminder-action-button\",\n          onClick: () => handleDeleteReminder(reminder.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, `${reminder.id}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Reminder, \"P6a1EUeVdUhiNcDqarLuqpe54hI=\");\n_c = Reminder;\nexport default Reminder;\nvar _c;\n$RefreshReg$(_c, \"Reminder\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","getTask","getUsers","getTaskReminders","setTaskReminder","deleteTaskReminder","shareTask","jsxDEV","_jsxDEV","Reminder","taskId","_s","reminders","setReminders","newReminderTime","setNewReminderTime","remindersRef","current","fetchReminders","response","data","error","console","handleDeleteReminder","reminderId","filter","reminder","id","interval","setInterval","now","Date","forEach","reminderDate","UTC","reminderTime","task","log","assignee","assignees","users","recipient","find","user","userId","enableNotifications","handleShareTask","email","clearInterval","recipientId","recipientEmail","taskInfo","shareTaskDTO","alert","handleCreateReminder","reminderToCreate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","e","target","placeholder","onClick","map","index","toLocaleString","year","month","day","hour","minute","second","hour12","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Reminders.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport {\r\n  getTask,\r\n  getUsers,\r\n  getTaskReminders,\r\n  setTaskReminder,\r\n  deleteTaskReminder,\r\n  shareTask // Assuming you have an API function to share the task\r\n} from '../api';\r\nimport '../style/Reminders.css'; // Assuming you have a CSS file for styling\r\n\r\nconst Reminder = ({ taskId }) => {\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminderTime, setNewReminderTime] = useState('');\r\n\r\n  const remindersRef = useRef(reminders);\r\n  useEffect(() => {\r\n    remindersRef.current = reminders;\r\n  }, [reminders]);\r\n\r\n  const fetchReminders = useCallback(async () => {\r\n    try {\r\n      const response = await getTaskReminders(taskId);\r\n      setReminders(response.data || []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the reminders!', error);\r\n    }\r\n  }, [taskId]);\r\n\r\n  useEffect(() => {\r\n    fetchReminders();\r\n  }, [fetchReminders]);\r\n\r\n  const handleDeleteReminder = useCallback(async (reminderId) => {\r\n    try {\r\n      await deleteTaskReminder(taskId, reminderId);\r\n      setReminders(reminders.filter(reminder => reminder.id !== reminderId));\r\n      } catch (error) {\r\n        console.error('There was an error deleting the reminder!', error);\r\n      }\r\n    }, [taskId, reminders]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = new Date();\r\n      reminders.forEach(async (reminder) => {\r\n        const reminderDate = new Date(Date.UTC(\r\n          reminder.reminderTime[0],\r\n          reminder.reminderTime[1] - 1,\r\n          reminder.reminderTime[2],\r\n          reminder.reminderTime[3],\r\n          reminder.reminderTime[4]\r\n        ));\r\n        if (reminderDate <= now) {\r\n          const task = (await getTask(taskId)).data;\r\n          console.log('Reminder triggered for task:', task);\r\n\r\n          for (const assignee of task.assignees) {\r\n            const users = (await getUsers()).data;\r\n            console.log('Users:', users);\r\n            const recipient = users.find(user => user.userId === assignee);\r\n            if (recipient.enableNotifications) {\r\n              handleShareTask(taskId, assignee, recipient.email);\r\n            }\r\n          }\r\n          // Optionally, you can delete the reminder after sharing the task\r\n          handleDeleteReminder(reminder.id);\r\n        }\r\n      });\r\n    }, 10000); // Check every minute\r\n\r\n    return () => clearInterval(interval);\r\n  }, [reminders, taskId, handleDeleteReminder]);\r\n\r\n  const handleShareTask = async (taskId, recipientId, recipientEmail) => {\r\n    try {\r\n      const taskInfo = (await getTask(taskId)).data.id;\r\n      const shareTaskDTO = {\r\n        taskId,\r\n        recipientId,\r\n        recipientEmail,\r\n        taskInfo\r\n      };\r\n      await shareTask(shareTaskDTO);\r\n      alert('Task shared successfully');\r\n    } catch (error) {\r\n      console.error('Error sharing task:', error);\r\n      alert('Failed to share task');\r\n    }\r\n  };\r\n\r\n  const handleCreateReminder = async () => {\r\n    try {\r\n      const reminderDate = new Date(newReminderTime);\r\n      const reminderToCreate = {\r\n        reminderTime: [\r\n          reminderDate.getFullYear(),\r\n          reminderDate.getMonth() + 1, // Months are zero-based in JavaScript\r\n          reminderDate.getDate(),\r\n          reminderDate.getHours(),\r\n          reminderDate.getMinutes(),\r\n          reminderDate.getSeconds(),\r\n          reminderDate.getMilliseconds() * 1000 // Convert milliseconds to nanoseconds\r\n        ],\r\n        taskId\r\n      };\r\n      const response = await setTaskReminder(taskId, reminderToCreate);\r\n      setReminders([...reminders, response.data]);\r\n      setNewReminderTime('');\r\n    } catch (error) {\r\n      console.error('There was an error creating the reminder!', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reminder-container\">\r\n      <h2>Reminders</h2>\r\n      <div className=\"new-reminder\">\r\n        <label htmlFor=\"new-reminder-time\">New Reminder Time</label>\r\n        <input\r\n          id=\"new-reminder-time\"\r\n          type=\"datetime-local\"\r\n          value={newReminderTime}\r\n          onChange={(e) => setNewReminderTime(e.target.value)}\r\n          placeholder=\"New Reminder Time\"\r\n        />\r\n        <button onClick={handleCreateReminder}>Create Reminder</button>\r\n      </div>\r\n      <ul className=\"reminders-list\">\r\n        {reminders.map((reminder, index) => (\r\n          <li key={`${reminder.id}-${index}`} className=\"reminder-item\">\r\n            <span className=\"reminder-time\">\r\n              {(\r\n                new Date(reminder.reminderTime).toLocaleString('en-US', {\r\n                  year: 'numeric',\r\n                  month: '2-digit',\r\n                  day: '2-digit',\r\n                  hour: '2-digit',\r\n                  minute: '2-digit',\r\n                  second: '2-digit',\r\n                  hour12: false\r\n                })\r\n              )}\r\n            </span>\r\n            <button className=\"reminder-action-button\" onClick={() => handleDeleteReminder(reminder.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reminder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}