{"ast":null,"code":"import axios from 'axios';\nconst userApi = axios.create({\n  baseURL: 'http://localhost:8081/api'\n});\nconst taskApi = axios.create({\n  baseURL: 'http://localhost:8082/api'\n});\n\n// Add a request interceptor to include the auth token\nuserApi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\ntaskApi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const createCategory = category => taskApi.post('/categories', category);\nexport const getCategory = id => taskApi.get(`/categories/${id}`);\nexport const getCategories = () => taskApi.get('/categories');\nexport const updateCategory = (id, category) => taskApi.put(`/categories/${id}`, category);\nexport const deleteCategory = id => taskApi.delete(`/categories/${id}`);\nexport const getCategoryProgress = id => taskApi.get(`/categories/${id}/progress`);\nexport const getCategoryTasks = id => taskApi.get(`/categories/${id}/tasks`);\nexport const createTask = task => taskApi.post('/tasks', task);\nexport const getTask = taskId => taskApi.get(`/tasks/${taskId}`);\nexport const getTasks = () => taskApi.get('/tasks');\nexport const updateTask = (taskId, task) => taskApi.put(`/tasks/${taskId}`, task);\nexport const deleteTask = taskId => taskApi.delete(`/tasks/${taskId}`);\nexport const setTaskReminder = async (taskId, reminder) => {\n  const response = await taskApi.post(`/tasks/${taskId}/reminders`, reminder);\n  return response;\n};\nexport const getTaskReminders = async taskId => {\n  const response = await taskApi.get(`/tasks/${taskId}/reminders`);\n  return response;\n};\nexport const deleteTaskReminder = (taskId, reminderId) => taskApi.delete(`/tasks/${taskId}/reminders/${reminderId}`);\n// export const shareTask = (shareTaskDTO) => taskApi.post(`/tasks/share`, shareTaskDTO);\n// api.js\nexport const shareTask = async shareTaskDTO => {\n  const response = await fetch(`http://localhost:8082/api/tasks/share`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(shareTaskDTO)\n  });\n  if (!response.ok) {\n    throw new Error('Failed to share task');\n  }\n  return response.json();\n};\nexport const addTaskComment = async (taskId, comment) => {\n  const response = await taskApi.post(`/tasks/${taskId}/comments`, comment);\n  return response;\n};\nexport const getTaskComments = taskId => taskApi.get(`/tasks/${taskId}/comments`);\n// export const searchTasks = (params) => taskApi.get('/tasks/search', { params }); // TODO use this\n// export const filterTasks = (params) => taskApi.get('/tasks/filter', { params }); // TODO use this\nexport const getUserTaskSummary = userId => taskApi.get(`/tasks/${userId}/summary`);\nexport const registerUser = user => userApi.post('/users/register', user);\nexport const loginUser = loginRequest => userApi.post('/users/login', loginRequest);\nexport const getUser = async username => {\n  const response = await userApi.get(`/users/${username}`);\n  return response;\n};\nexport const getUsers = () => userApi.get('/users');\nexport const updateUser = (username, user) => userApi.put(`/users/${username}`, user);\nexport const deleteUser = username => userApi.delete(`/users/${username}`);","map":{"version":3,"names":["axios","userApi","create","baseURL","taskApi","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","createCategory","category","post","getCategory","id","get","getCategories","updateCategory","put","deleteCategory","delete","getCategoryProgress","getCategoryTasks","createTask","task","getTask","taskId","getTasks","updateTask","deleteTask","setTaskReminder","reminder","response","getTaskReminders","deleteTaskReminder","reminderId","shareTask","shareTaskDTO","fetch","method","body","JSON","stringify","ok","Error","json","addTaskComment","comment","getTaskComments","getUserTaskSummary","userId","registerUser","user","loginUser","loginRequest","getUser","username","getUsers","updateUser","deleteUser"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst userApi = axios.create({\r\n  baseURL: 'http://localhost:8081/api',\r\n});\r\n\r\nconst taskApi = axios.create({\r\n  baseURL: 'http://localhost:8082/api',\r\n});\r\n\r\n// Add a request interceptor to include the auth token\r\nuserApi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ntaskApi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const createCategory = (category) => taskApi.post('/categories', category);\r\nexport const getCategory = (id) => taskApi.get(`/categories/${id}`);\r\nexport const getCategories = () => taskApi.get('/categories');\r\nexport const updateCategory = (id, category) => taskApi.put(`/categories/${id}`, category);\r\nexport const deleteCategory = (id) => taskApi.delete(`/categories/${id}`);\r\nexport const getCategoryProgress = (id) => taskApi.get(`/categories/${id}/progress`);\r\nexport const getCategoryTasks = (id) => taskApi.get(`/categories/${id}/tasks`);\r\n\r\nexport const createTask = (task) => taskApi.post('/tasks', task);\r\nexport const getTask = (taskId) => taskApi.get(`/tasks/${taskId}`);\r\nexport const getTasks = () => taskApi.get('/tasks');\r\nexport const updateTask = (taskId, task) => taskApi.put(`/tasks/${taskId}`, task);\r\nexport const deleteTask = (taskId) => taskApi.delete(`/tasks/${taskId}`);\r\nexport const setTaskReminder = async (taskId, reminder) => {\r\n  const response = await taskApi.post(`/tasks/${taskId}/reminders`, reminder);\r\n  return response;\r\n};\r\nexport const getTaskReminders = async (taskId) => {\r\n  const response = await taskApi.get(`/tasks/${taskId}/reminders`);\r\n  return response;\r\n};\r\nexport const deleteTaskReminder = (taskId, reminderId) => taskApi.delete(`/tasks/${taskId}/reminders/${reminderId}`);\r\n// export const shareTask = (shareTaskDTO) => taskApi.post(`/tasks/share`, shareTaskDTO);\r\n// api.js\r\nexport const shareTask = async (shareTaskDTO) => {\r\n  const response = await fetch(`http://localhost:8082/api/tasks/share`, {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(shareTaskDTO),\r\n  });\r\n\r\n  if (!response.ok) {\r\n      throw new Error('Failed to share task');\r\n  }\r\n\r\n  return response.json();\r\n};\r\nexport const addTaskComment = async (taskId, comment) => {\r\n  const response = await taskApi.post(`/tasks/${taskId}/comments`, comment);\r\n  return response;\r\n};\r\nexport const getTaskComments = (taskId) => taskApi.get(`/tasks/${taskId}/comments`);\r\n// export const searchTasks = (params) => taskApi.get('/tasks/search', { params }); // TODO use this\r\n// export const filterTasks = (params) => taskApi.get('/tasks/filter', { params }); // TODO use this\r\nexport const getUserTaskSummary = (userId) => taskApi.get(`/tasks/${userId}/summary`);\r\n\r\nexport const registerUser = (user) => userApi.post('/users/register', user);\r\nexport const loginUser = (loginRequest) => userApi.post('/users/login', loginRequest);\r\nexport const getUser = async (username) => {\r\n  const response = await userApi.get(`/users/${username}`);\r\n  return response;\r\n}\r\nexport const getUsers = () => userApi.get('/users');\r\nexport const updateUser = (username, user) => userApi.put(`/users/${username}`, user);\r\nexport const deleteUser = (username) => userApi.delete(`/users/${username}`);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}