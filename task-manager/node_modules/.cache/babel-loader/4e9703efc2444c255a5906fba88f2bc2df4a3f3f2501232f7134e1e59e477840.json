{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { getUser, updateUser, deleteUser } from '../api';\nimport { useAuth } from '../context/AuthContext';\nimport './Settings.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const {\n    currentUsername,\n    authToken,\n    logout\n  } = useAuth();\n  const [user, setUser] = useState({\n    enableNotifications: false\n  });\n  const fetchUserSettings = useCallback(async () => {\n    try {\n      if (currentUsername && authToken) {\n        var _response$data$enable;\n        console.log('Fetching user settings for:', currentUsername);\n        const response = await getUser(currentUsername); // Token is automatically added by interceptor\n        console.log('User settings fetched:', response.data);\n        setUser({\n          ...response.data,\n          enableNotifications: (_response$data$enable = response.data.enableNotifications) !== null && _response$data$enable !== void 0 ? _response$data$enable : false // Ensure boolean value\n        });\n      } else {\n        console.log('No currentUsername or authToken');\n      }\n    } catch (error) {\n      console.error('Error fetching user settings', error);\n    }\n  }, [currentUsername, authToken]);\n  useEffect(() => {\n    console.log('useEffect - currentUsername:', currentUsername, 'authToken:', authToken);\n    fetchUserSettings();\n  }, [fetchUserSettings, currentUsername, authToken]);\n  const handleSaveSettings = async () => {\n    try {\n      if (currentUsername && authToken) {\n        console.log('Saving user settings for:', currentUsername);\n        await updateUser(currentUsername, user); // Token is automatically added by interceptor\n        alert('Settings saved successfully');\n      } else {\n        console.log('No currentUsername or authToken');\n      }\n    } catch (error) {\n      console.error('Error saving settings', error);\n    }\n  };\n  const handleDeleteAccount = async () => {\n    try {\n      if (currentUsername && authToken) {\n        console.log('Deleting account for:', currentUsername);\n        await deleteUser(currentUsername); // Token is automatically added by interceptor\n        alert('Account deleted successfully');\n        logout(); // Log out the user\n      } else {\n        console.log('No currentUsername or authToken');\n      }\n    } catch (error) {\n      console.error('Error deleting account', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-header\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: user.enableNotifications,\n          onChange: () => setUser({\n            ...user,\n            enableNotifications: !user.enableNotifications\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \"Enable Notifications\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"settings-button\",\n      onClick: handleSaveSettings,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"settings-button\",\n      onClick: handleDeleteAccount,\n      style: {\n        marginLeft: '10px',\n        backgroundColor: 'red'\n      },\n      children: \"Delete Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"/WG7cExzRJuPvKrMkfExzqz+3aU=\", false, function () {\n  return [useAuth];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","getUser","updateUser","deleteUser","useAuth","jsxDEV","_jsxDEV","Settings","_s","currentUsername","authToken","logout","user","setUser","enableNotifications","fetchUserSettings","_response$data$enable","console","log","response","data","error","handleSaveSettings","alert","handleDeleteAccount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","style","marginLeft","backgroundColor","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Settings.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { getUser, updateUser, deleteUser } from '../api';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport './Settings.css'; // Assuming you have a CSS file for styling\r\n\r\nconst Settings = () => {\r\n  const { currentUsername, authToken, logout } = useAuth();\r\n  const [user, setUser] = useState({ enableNotifications: false });\r\n\r\n  const fetchUserSettings = useCallback(async () => {\r\n    try {\r\n      if (currentUsername && authToken) {\r\n        console.log('Fetching user settings for:', currentUsername);\r\n        const response = await getUser(currentUsername); // Token is automatically added by interceptor\r\n        console.log('User settings fetched:', response.data);\r\n        setUser({\r\n          ...response.data,\r\n          enableNotifications: response.data.enableNotifications ?? false, // Ensure boolean value\r\n        });\r\n      } else {\r\n        console.log('No currentUsername or authToken');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user settings', error);\r\n    }\r\n  }, [currentUsername, authToken]);\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect - currentUsername:', currentUsername, 'authToken:', authToken);\r\n    fetchUserSettings();\r\n  }, [fetchUserSettings, currentUsername, authToken]);\r\n\r\n  const handleSaveSettings = async () => {\r\n    try {\r\n      if (currentUsername && authToken) {\r\n        console.log('Saving user settings for:', currentUsername);\r\n        await updateUser(currentUsername, user); // Token is automatically added by interceptor\r\n        alert('Settings saved successfully');\r\n      } else {\r\n        console.log('No currentUsername or authToken');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving settings', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    try {\r\n      if (currentUsername && authToken) {\r\n        console.log('Deleting account for:', currentUsername);\r\n        await deleteUser(currentUsername); // Token is automatically added by interceptor\r\n        alert('Account deleted successfully');\r\n        logout(); // Log out the user\r\n      } else {\r\n        console.log('No currentUsername or authToken');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting account', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-container\">\r\n      <div className=\"settings-header\">Settings</div>\r\n      <div className=\"settings-section\">\r\n        <h2>Notifications</h2>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={user.enableNotifications}\r\n            onChange={() => setUser({ ...user, enableNotifications: !user.enableNotifications })}\r\n          />\r\n          Enable Notifications\r\n        </label>\r\n      </div>\r\n      <button className=\"settings-button\" onClick={handleSaveSettings}>Save</button>\r\n      <button className=\"settings-button\" onClick={handleDeleteAccount} style={{ marginLeft: '10px', backgroundColor: 'red' }}>Delete Account</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}