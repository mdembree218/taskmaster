{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Categories.js\",\n  _s = $RefreshSig$();\n// src/elements/Categories.js\nimport React, { useEffect, useState } from 'react';\nimport { getCategories, createCategory, updateCategory, deleteCategory, getCategoryTasks } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Categories = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [, setTasks] = useState([]);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  const fetchCategories = async () => {\n    try {\n      const response = await getCategories();\n      setCategories(response.data);\n    } catch (error) {\n      console.error('There was an error fetching the categories!', error);\n    }\n  };\n  const fetchTasksByCategory = async id => {\n    try {\n      const response = await getCategoryTasks(id);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('There was an error fetching the tasks!', error);\n    }\n  };\n  const handleCreateCategory = async () => {\n    try {\n      const response = await createCategory({\n        name: newCategoryName\n      });\n      setCategories([...categories, response.data]);\n      setNewCategoryName('');\n    } catch (error) {\n      console.error('There was an error creating the category!', error);\n    }\n  };\n  const handleUpdateCategory = async (id, newName) => {\n    try {\n      const response = await updateCategory(id, {\n        name: newName\n      });\n      setCategories(categories.map(cat => cat.id === id ? response.data : cat));\n    } catch (error) {\n      console.error('There was an error updating the category!', error);\n    }\n  };\n  const handleDeleteCategory = async id => {\n    try {\n      await deleteCategory(id);\n      setCategories(categories.filter(cat => cat.id !== id));\n    } catch (error) {\n      console.error('There was an error deleting the category!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newCategoryName,\n      onChange: e => setNewCategoryName(e.target.value),\n      placeholder: \"New Category Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateCategory,\n      children: \"Create Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [category.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchTasksByCategory(category.id),\n          children: \"View Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateCategory(category.id, prompt('New name:', category.name)),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteCategory(category.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Categories, \"7MHhBLh/vAOxsBpvXF8fAy1smF4=\");\n_c = Categories;\nexport default Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useEffect","useState","getCategories","createCategory","updateCategory","deleteCategory","getCategoryTasks","jsxDEV","_jsxDEV","Categories","_s","categories","setCategories","setTasks","newCategoryName","setNewCategoryName","fetchCategories","response","data","error","console","fetchTasksByCategory","id","handleCreateCategory","name","handleUpdateCategory","newName","map","cat","handleDeleteCategory","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","category","prompt","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Categories.js"],"sourcesContent":["// src/elements/Categories.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  getCategories,\r\n  createCategory,\r\n  updateCategory,\r\n  deleteCategory,\r\n  getCategoryTasks\r\n} from '../api';\r\n\r\nconst Categories = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [, setTasks] = useState([]);\r\n  const [newCategoryName, setNewCategoryName] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await getCategories();\r\n      setCategories(response.data);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the categories!', error);\r\n    }\r\n  };\r\n\r\n  const fetchTasksByCategory = async (id) => {\r\n    try {\r\n      const response = await getCategoryTasks(id);\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the tasks!', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateCategory = async () => {\r\n    try {\r\n      const response = await createCategory({ name: newCategoryName });\r\n      setCategories([...categories, response.data]);\r\n      setNewCategoryName('');\r\n    } catch (error) {\r\n      console.error('There was an error creating the category!', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateCategory = async (id, newName) => {\r\n    try {\r\n      const response = await updateCategory(id, { name: newName });\r\n      setCategories(categories.map(cat => (cat.id === id ? response.data : cat)));\r\n    } catch (error) {\r\n      console.error('There was an error updating the category!', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCategory = async (id) => {\r\n    try {\r\n      await deleteCategory(id);\r\n      setCategories(categories.filter(cat => cat.id !== id));\r\n    } catch (error) {\r\n      console.error('There was an error deleting the category!', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Categories</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={newCategoryName}\r\n        onChange={(e) => setNewCategoryName(e.target.value)}\r\n        placeholder=\"New Category Name\"\r\n      />\r\n      <button onClick={handleCreateCategory}>Create Category</button>\r\n      <ul>\r\n        {categories.map(category => (\r\n          <li key={category.id}>\r\n            {category.name}\r\n            <button onClick={() => fetchTasksByCategory(category.id)}>View Tasks</button>\r\n            <button onClick={() => handleUpdateCategory(category.id, prompt('New name:', category.name))}>Edit</button>\r\n            <button onClick={() => handleDeleteCategory(category.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}