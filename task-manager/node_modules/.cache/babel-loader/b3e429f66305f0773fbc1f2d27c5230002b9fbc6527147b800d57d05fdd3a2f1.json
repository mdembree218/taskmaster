{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\CSC 495\\\\taskmaster\\\\task-manager\\\\src\\\\elements\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { createTask, getTasks, updateTask, deleteTask, getCategories, updateCategory, getUsers, getUser, getUserTaskSummary, shareTask } from '../api';\nimport Comment from './Comments';\nimport Reminder from './Reminders';\nimport '../style/Tasks.css'; // Assuming you have a CSS file for styling\nimport { useAuth } from '../context/AuthContext';\nimport AsyncSelect from 'react-select/async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const {\n    currentUsername\n  } = useAuth();\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    priority: 'LOW',\n    owner: '',\n    assignees: [],\n    status: 'PENDING'\n  });\n  const [editingTask, setEditingTask] = useState(null);\n  const [selectedTaskForComments, setSelectedTaskForComments] = useState(null);\n  const [selectedTaskForReminders, setSelectedTaskForReminders] = useState(null);\n  const [setSelectedUserForSummary] = useState(null);\n  const [userTaskSummary, setUserTaskSummary] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await getUser(currentUsername);\n        setUser(response.data);\n      } catch (error) {\n        console.error('There was an error fetching the user!', error);\n      }\n    };\n    if (currentUsername) {\n      fetchUser();\n    }\n  }, [currentUsername]);\n  useEffect(() => {\n    fetchTasks();\n    fetchCategories();\n    fetchUsers();\n    if (user) {\n      setNewTask(prevTask => ({\n        ...prevTask,\n        owner: user.id\n      }));\n    }\n  }, [user]);\n  const fetchTasks = async () => {\n    try {\n      const response = await getTasks();\n      setTasks(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the tasks!', error);\n      setTasks([]);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await getCategories();\n      setCategories(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the categories!', error);\n      setCategories([]);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await getUsers();\n      setUsers(Array.isArray(response.data) ? response.data : []);\n    } catch (error) {\n      console.error('There was an error fetching the users!', error);\n      setUsers([]);\n    }\n  };\n  const loadOptions = async inputValue => {\n    try {\n      const response = await getUsers();\n      const filteredUsers = response.data.filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase())).map(user => ({\n        value: user.id,\n        label: user.username\n      }));\n      return filteredUsers;\n    } catch (error) {\n      console.error('There was an error loading the options!', error);\n      return [];\n    }\n  };\n  const isValidDate = dateString => {\n    const date = new Date(dateString);\n    return !isNaN(date.getTime());\n  };\n  const handleCreateTask = async () => {\n    try {\n      const taskData = {\n        title: newTask.title,\n        description: newTask.description,\n        dueDate: isValidDate(newTask.dueDate) ? new Date(newTask.dueDate).toISOString() : null,\n        priority: newTask.priority,\n        owner: newTask.owner,\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)),\n        status: newTask.status\n      };\n      const response = await createTask(taskData);\n      setTasks([...tasks, response.data]);\n\n      // Update the selected category with the new task\n      if (selectedCategory) {\n        const updatedCategory = {\n          ...selectedCategory,\n          tasks: [...selectedCategory.tasks, response.data.id]\n        };\n        await updateCategory(selectedCategory.id, updatedCategory);\n      }\n\n      // Share the task with all assignees\n      for (const assignee of newTask.assignees) {\n        const user = users.find(user => user.id === assignee);\n        if (user) {\n          await handleShareTask(response.data.id, assignee, user.email);\n        }\n      }\n      setNewTask({\n        title: '',\n        description: '',\n        dueDate: '',\n        priority: 'LOW',\n        owner: '',\n        assignees: [],\n        status: 'PENDING'\n      });\n    } catch (error) {\n      console.error('There was an error creating the task!', error);\n    }\n  };\n  const handleUpdateTask = async () => {\n    try {\n      const taskData = {\n        ...editingTask,\n        dueDate: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString() : null,\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\n      };\n      const response = await updateTask(editingTask.id, taskData);\n      setTasks(tasks.map(task => task.id === editingTask.id ? response.data : task));\n\n      // Update the selected category with the edited task\n      if (selectedCategory) {\n        const updatedCategory = {\n          ...selectedCategory,\n          tasks: [...selectedCategory.tasks.filter(taskId => taskId !== editingTask.id), response.data.id]\n        };\n        await updateCategory(selectedCategory.id, updatedCategory);\n      }\n\n      // Share the task with all assignees\n      for (const assignee of editingTask.assignees) {\n        const user = users.find(user => user.id === assignee);\n        if (user) {\n          await handleShareTask(editingTask.id, assignee, user.email);\n        }\n      }\n      setEditingTask(null);\n    } catch (error) {\n      console.error('There was an error updating the task!', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId);\n      setTasks(tasks.filter(task => task.id !== taskId));\n\n      // Remove the task from the selected category\n      if (selectedCategory) {\n        const updatedCategory = {\n          ...selectedCategory,\n          tasks: selectedCategory.tasks.filter(id => id !== taskId)\n        };\n        await updateCategory(selectedCategory.id, updatedCategory);\n      }\n    } catch (error) {\n      console.error('There was an error deleting the task!', error);\n    }\n  };\n  const handleShareTask = async (taskId, recipientId, recipientEmail) => {\n    try {\n      const shareTaskDTO = {\n        taskId,\n        recipientId,\n        recipientEmail\n      };\n      await shareTask(shareTaskDTO);\n      alert('Task shared successfully');\n    } catch (error) {\n      console.error('Error sharing task:', error);\n      alert('Failed to share task');\n    }\n  };\n  const handleViewUserTaskSummary = async userId => {\n    try {\n      const response = await getUserTaskSummary(userId);\n      setUserTaskSummary(response.data);\n    } catch (error) {\n      console.error('There was an error fetching the user task summary!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        }),\n        placeholder: \"New Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        }),\n        placeholder: \"New Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: newTask.dueDate,\n        onChange: e => setNewTask({\n          ...newTask,\n          dueDate: e.target.value\n        }),\n        placeholder: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newTask.priority,\n        onChange: e => setNewTask({\n          ...newTask,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOW\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEDIUM\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HIGH\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        onChange: selectedOptions => setNewTask({\n          ...newTask,\n          assignees: selectedOptions.map(option => option.value)\n        }),\n        placeholder: \"Select Assignees\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory ? selectedCategory.id : '',\n        onChange: e => {\n          const selectedCat = categories.find(category => category.id === e.target.value);\n          setSelectedCategory(selectedCat);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateTask,\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"View User Task Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        onChange: selectedOption => {\n          setSelectedUserForSummary(selectedOption.value);\n          handleViewUserTaskSummary(selectedOption.value);\n        },\n        placeholder: \"Select User\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), userTaskSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Task Summary for \", userTaskSummary.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Owned Tasks: \", userTaskSummary.ownedTasks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Assigned Tasks: \", userTaskSummary.assignedTasks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tasks-list\",\n      children: Array.isArray(tasks) && tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" - \", task.description, \" - \", task.status, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => setEditingTask(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => handleDeleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comments\",\n            onClick: () => {\n              if (selectedTaskForComments === task.id) {\n                setSelectedTaskForComments(null);\n              } else {\n                setSelectedTaskForComments(task.id);\n                setSelectedTaskForReminders(null);\n              }\n            },\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reminders\",\n            onClick: () => {\n              if (selectedTaskForReminders === task.id) {\n                setSelectedTaskForReminders(null);\n              } else {\n                setSelectedTaskForReminders(task.id);\n                setSelectedTaskForComments(null);\n              }\n            },\n            children: \"Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.title,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          title: e.target.value\n        }),\n        placeholder: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingTask.description,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          description: e.target.value\n        }),\n        placeholder: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString().slice(0, 16) : '',\n        onChange: e => setEditingTask({\n          ...editingTask,\n          dueDate: e.target.value\n        }),\n        placeholder: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.priority,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOW\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MEDIUM\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HIGH\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: editingTask.status,\n        onChange: e => setEditingTask({\n          ...editingTask,\n          status: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PENDING\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IN_PROGRESS\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"COMPLETED\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n        isMulti: true,\n        cacheOptions: true,\n        loadOptions: loadOptions,\n        defaultValue: editingTask.assignees.map(assignee => {\n          var _users$find;\n          return {\n            value: assignee,\n            label: (_users$find = users.find(user => user.id === assignee)) === null || _users$find === void 0 ? void 0 : _users$find.username\n          };\n        }),\n        onChange: selectedOptions => setEditingTask({\n          ...editingTask,\n          assignees: selectedOptions.map(option => option.value)\n        }),\n        placeholder: \"Select Assignees\",\n        className: \"async-select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory ? selectedCategory.id : '',\n        onChange: e => {\n          const selectedCat = categories.find(category => category.id === parseInt(e.target.value, 10));\n          setSelectedCategory(selectedCat);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateTask,\n        children: \"Update Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel\",\n        onClick: () => setEditingTask(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this), selectedTaskForComments && /*#__PURE__*/_jsxDEV(Comment, {\n      taskId: selectedTaskForComments,\n      username: currentUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), selectedTaskForReminders && /*#__PURE__*/_jsxDEV(Reminder, {\n      taskId: selectedTaskForReminders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"tl37bft6/Z5C43JKCKWAFfRjvYo=\", false, function () {\n  return [useAuth];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","createTask","getTasks","updateTask","deleteTask","getCategories","updateCategory","getUsers","getUser","getUserTaskSummary","shareTask","Comment","Reminder","useAuth","AsyncSelect","jsxDEV","_jsxDEV","Tasks","_s","currentUsername","user","setUser","tasks","setTasks","categories","setCategories","users","setUsers","newTask","setNewTask","title","description","dueDate","priority","owner","assignees","status","editingTask","setEditingTask","selectedTaskForComments","setSelectedTaskForComments","selectedTaskForReminders","setSelectedTaskForReminders","setSelectedUserForSummary","userTaskSummary","setUserTaskSummary","selectedCategory","setSelectedCategory","fetchUser","response","data","error","console","fetchTasks","fetchCategories","fetchUsers","prevTask","id","Array","isArray","loadOptions","inputValue","filteredUsers","filter","username","toLowerCase","includes","map","value","label","isValidDate","dateString","date","Date","isNaN","getTime","handleCreateTask","taskData","toISOString","assignee","parseInt","updatedCategory","find","handleShareTask","email","handleUpdateTask","task","taskId","handleDeleteTask","recipientId","recipientEmail","shareTaskDTO","alert","handleViewUserTaskSummary","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","isMulti","cacheOptions","selectedOptions","option","selectedCat","category","name","onClick","selectedOption","ownedTasks","length","assignedTasks","slice","defaultValue","_users$find","_c","$RefreshReg$"],"sources":["E:/Documents/CSC 495/taskmaster/task-manager/src/elements/Tasks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  createTask,\r\n  getTasks,\r\n  updateTask,\r\n  deleteTask,\r\n  getCategories,\r\n  updateCategory,\r\n  getUsers,\r\n  getUser,\r\n  getUserTaskSummary,\r\n  shareTask\r\n} from '../api';\r\nimport Comment from './Comments';\r\nimport Reminder from './Reminders';\r\nimport '../style/Tasks.css'; // Assuming you have a CSS file for styling\r\nimport { useAuth } from '../context/AuthContext';\r\nimport AsyncSelect from 'react-select/async';\r\n\r\nconst Tasks = () => {\r\n  const { currentUsername } = useAuth();\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [newTask, setNewTask] = useState({ title: '', description: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [selectedTaskForComments, setSelectedTaskForComments] = useState(null);\r\n  const [selectedTaskForReminders, setSelectedTaskForReminders] = useState(null);\r\n  const [setSelectedUserForSummary] = useState(null);\r\n  const [userTaskSummary, setUserTaskSummary] = useState(null);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await getUser(currentUsername);\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        console.error('There was an error fetching the user!', error);\r\n      }\r\n    };\r\n\r\n    if (currentUsername) {\r\n      fetchUser();\r\n    }\r\n  }, [currentUsername]);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchCategories();\r\n    fetchUsers();\r\n    if (user) {\r\n      setNewTask(prevTask => ({ ...prevTask, owner: user.id }));\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await getTasks();\r\n      setTasks(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the tasks!', error);\r\n      setTasks([]);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await getCategories();\r\n      setCategories(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the categories!', error);\r\n      setCategories([]);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await getUsers();\r\n      setUsers(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the users!', error);\r\n      setUsers([]);\r\n    }\r\n  };\r\n\r\n  const loadOptions = async (inputValue) => {\r\n    try {\r\n      const response = await getUsers();\r\n      const filteredUsers = response.data\r\n        .filter(user => user.username.toLowerCase().includes(inputValue.toLowerCase()))\r\n        .map(user => ({ value: user.id, label: user.username }));\r\n      return filteredUsers;\r\n    } catch (error) {\r\n      console.error('There was an error loading the options!', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const isValidDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return !isNaN(date.getTime());\r\n  };\r\n\r\n  const handleCreateTask = async () => {\r\n    try {\r\n      const taskData = {\r\n        title: newTask.title,\r\n        description: newTask.description,\r\n        dueDate: isValidDate(newTask.dueDate) ? new Date(newTask.dueDate).toISOString() : null,\r\n        priority: newTask.priority,\r\n        owner: newTask.owner,\r\n        assignees: newTask.assignees.map(assignee => parseInt(assignee, 10)),\r\n        status: newTask.status\r\n      };\r\n\r\n      const response = await createTask(taskData);\r\n      setTasks([...tasks, response.data]);\r\n\r\n      // Update the selected category with the new task\r\n      if (selectedCategory) {\r\n        const updatedCategory = {\r\n          ...selectedCategory,\r\n          tasks: [...selectedCategory.tasks, response.data.id]\r\n        };\r\n        await updateCategory(selectedCategory.id, updatedCategory);\r\n      }\r\n\r\n      // Share the task with all assignees\r\n      for (const assignee of newTask.assignees) {\r\n        const user = users.find(user => user.id === assignee);\r\n        if (user) {\r\n          await handleShareTask(response.data.id, assignee, user.email);\r\n        }\r\n      }\r\n\r\n      setNewTask({ title: '', description: '', dueDate: '', priority: 'LOW', owner: '', assignees: [], status: 'PENDING' });\r\n    } catch (error) {\r\n      console.error('There was an error creating the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateTask = async () => {\r\n    try {\r\n      const taskData = {\r\n        ...editingTask,\r\n        dueDate: isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString() : null,\r\n        assignees: editingTask.assignees.map(assignee => parseInt(assignee, 10))\r\n      };\r\n\r\n      const response = await updateTask(editingTask.id, taskData);\r\n      setTasks(tasks.map(task => (task.id === editingTask.id ? response.data : task)));\r\n\r\n      // Update the selected category with the edited task\r\n      if (selectedCategory) {\r\n        const updatedCategory = {\r\n          ...selectedCategory,\r\n          tasks: [...selectedCategory.tasks.filter(taskId => taskId !== editingTask.id), response.data.id]\r\n        };\r\n        await updateCategory(selectedCategory.id, updatedCategory);\r\n      }\r\n\r\n      // Share the task with all assignees\r\n      for (const assignee of editingTask.assignees) {\r\n        const user = users.find(user => user.id === assignee);\r\n        if (user) {\r\n          await handleShareTask(editingTask.id, assignee, user.email);\r\n        }\r\n      }\r\n\r\n      setEditingTask(null);\r\n    } catch (error) {\r\n      console.error('There was an error updating the task!', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    try {\r\n      await deleteTask(taskId);\r\n      setTasks(tasks.filter(task => task.id !== taskId));\r\n\r\n      // Remove the task from the selected category\r\n      if (selectedCategory) {\r\n        const updatedCategory = {\r\n          ...selectedCategory,\r\n          tasks: selectedCategory.tasks.filter(id => id !== taskId)\r\n        };\r\n        await updateCategory(selectedCategory.id, updatedCategory);\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error deleting the task!', error);\r\n    }\r\n  };\r\n\r\n  const handleShareTask = async (taskId, recipientId, recipientEmail) => {\r\n    try {\r\n      const shareTaskDTO = {\r\n        taskId,\r\n        recipientId,\r\n        recipientEmail,\r\n      };\r\n      await shareTask(shareTaskDTO);\r\n      alert('Task shared successfully');\r\n    } catch (error) {\r\n      console.error('Error sharing task:', error);\r\n      alert('Failed to share task');\r\n    }\r\n  };\r\n\r\n  const handleViewUserTaskSummary = async (userId) => {\r\n    try {\r\n      const response = await getUserTaskSummary(userId);\r\n      setUserTaskSummary(response.data);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the user task summary!', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks-container\">\r\n      <h2>Tasks</h2>\r\n      <div className=\"task-inputs\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.title}\r\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n          placeholder=\"New Task Title\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.description}\r\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n          placeholder=\"New Task Description\"\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={newTask.dueDate}\r\n          onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })}\r\n          placeholder=\"Due Date\"\r\n        />\r\n        <select\r\n          value={newTask.priority}\r\n          onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}\r\n        >\r\n          <option value=\"LOW\">Low</option>\r\n          <option value=\"MEDIUM\">Medium</option>\r\n          <option value=\"HIGH\">High</option>\r\n        </select>\r\n        <AsyncSelect\r\n          isMulti\r\n          cacheOptions\r\n          loadOptions={loadOptions}\r\n          onChange={(selectedOptions) => setNewTask({ ...newTask, assignees: selectedOptions.map(option => option.value) })}\r\n          placeholder=\"Select Assignees\"\r\n          className=\"async-select\"\r\n        />\r\n        <select\r\n          value={selectedCategory ? selectedCategory.id : ''}\r\n          onChange={(e) => {\r\n            const selectedCat = categories.find(category => category.id === e.target.value);\r\n            setSelectedCategory(selectedCat);\r\n          }}\r\n        >\r\n          <option value=\"\">Select Category</option>\r\n          {Array.isArray(categories) && categories.map(category => (\r\n            <option key={category.id} value={category.id}>\r\n              {category.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleCreateTask}>Create Task</button>\r\n      </div>\r\n      <div className=\"user-summary\">\r\n        <h3>View User Task Summary</h3>\r\n        <AsyncSelect\r\n          cacheOptions\r\n          loadOptions={loadOptions}\r\n          onChange={(selectedOption) => {\r\n            setSelectedUserForSummary(selectedOption.value);\r\n            handleViewUserTaskSummary(selectedOption.value);\r\n          }}\r\n          placeholder=\"Select User\"\r\n          className=\"async-select\"\r\n        />\r\n        {userTaskSummary && (\r\n          <div className=\"task-summary\">\r\n            <h4>Task Summary for {userTaskSummary.username}</h4>\r\n            <p>Owned Tasks: {userTaskSummary.ownedTasks.length}</p>\r\n            <p>Assigned Tasks: {userTaskSummary.assignedTasks.length}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <ul className=\"tasks-list\">\r\n        {Array.isArray(tasks) && tasks.map(task => (\r\n          <li key={task.id}>\r\n            {task.title} - {task.description} - {task.status}\r\n            <div>\r\n              <button className=\"edit\" onClick={() => setEditingTask(task)}>Edit</button>\r\n              <button className=\"delete\" onClick={() => handleDeleteTask(task.id)}>Delete</button>\r\n              <button className=\"comments\" onClick={() => {\r\n                if (selectedTaskForComments === task.id) {\r\n                  setSelectedTaskForComments(null);\r\n                } else {\r\n                  setSelectedTaskForComments(task.id);\r\n                  setSelectedTaskForReminders(null);\r\n                }\r\n              }}>Comments</button>\r\n              <button className=\"reminders\" onClick={() => {\r\n                if (selectedTaskForReminders === task.id) {\r\n                  setSelectedTaskForReminders(null);\r\n                } else {\r\n                  setSelectedTaskForReminders(task.id);\r\n                  setSelectedTaskForComments(null);\r\n                }\r\n              }}>Reminders</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {editingTask && (\r\n        <div className=\"edit-task-container\">\r\n          <h3>Edit Task</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.title}\r\n            onChange={(e) => setEditingTask({ ...editingTask, title: e.target.value })}\r\n            placeholder=\"Task Title\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={editingTask.description}\r\n            onChange={(e) => setEditingTask({ ...editingTask, description: e.target.value })}\r\n            placeholder=\"Task Description\"\r\n          />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={isValidDate(editingTask.dueDate) ? new Date(editingTask.dueDate).toISOString().slice(0, 16) : ''}\r\n            onChange={(e) => setEditingTask({ ...editingTask, dueDate: e.target.value })}\r\n            placeholder=\"Due Date\"\r\n          />\r\n          <select\r\n            value={editingTask.priority}\r\n            onChange={(e) => setEditingTask({ ...editingTask, priority: e.target.value })}\r\n          >\r\n            <option value=\"LOW\">Low</option>\r\n            <option value=\"MEDIUM\">Medium</option>\r\n            <option value=\"HIGH\">High</option>\r\n          </select>\r\n          <select\r\n            value={editingTask.status}\r\n            onChange={(e) => setEditingTask({ ...editingTask, status: e.target.value })}\r\n          >\r\n            <option value=\"PENDING\">Pending</option>\r\n            <option value=\"IN_PROGRESS\">In Progress</option>\r\n            <option value=\"COMPLETED\">Completed</option>\r\n          </select>\r\n          <AsyncSelect\r\n            isMulti\r\n            cacheOptions\r\n            loadOptions={loadOptions}\r\n            defaultValue={editingTask.assignees.map(assignee => ({ value: assignee, label: users.find(user => user.id === assignee)?.username }))}\r\n            onChange={(selectedOptions) => setEditingTask({ ...editingTask, assignees: selectedOptions.map(option => option.value) })}\r\n            placeholder=\"Select Assignees\"\r\n            className=\"async-select\"\r\n          />\r\n          <select\r\n            value={selectedCategory ? selectedCategory.id : ''}\r\n            onChange={(e) => {\r\n              const selectedCat = categories.find(category => category.id === parseInt(e.target.value, 10));\r\n              setSelectedCategory(selectedCat);\r\n            }}\r\n          >\r\n            <option value=\"\">Select Category</option>\r\n            {Array.isArray(categories) && categories.map(category => (\r\n              <option key={category.id} value={category.id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button onClick={handleUpdateTask}>Update Task</button>\r\n          <button className=\"cancel\" onClick={() => setEditingTask(null)}>Cancel</button>\r\n        </div>\r\n      )}\r\n      {selectedTaskForComments && (\r\n        <Comment taskId={selectedTaskForComments} username={currentUsername} />\r\n      )}\r\n      {selectedTaskForReminders && (\r\n        <Reminder taskId={selectedTaskForReminders} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}